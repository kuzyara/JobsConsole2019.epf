#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.СхемаЗапросаВХ = Параметры.СхемаЗапросаВХ;
	ЭтотОбъект.ПараметрСтруктураСтроки = Параметры.ПараметрСтруктураСтроки;
	ЭтотОбъект.Источники.Загрузить(ПолучитьИзВременногоХранилища(Параметры.Источники));
	
	Если Параметры.Свойство("ИмяТаблицы") Тогда
		ЭтотОбъект.СтароеИмяТаблицы = Параметры.ИмяТаблицы;
		ЭтотОбъект.ИмяТаблицы 	= Параметры.ИмяТаблицы;
		ЭтотОбъект.Псевдоним 	= Параметры.Псевдоним;
		ТЗ = ПолучитьИзВременногоХранилища(Параметры.ДоступныеПоля);
		Для Каждого Строка Из ТЗ Цикл
			НовСтр = ЭтотОбъект.ДоступныеПоля.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Строка);
		КонецЦикла;
		МассивСтрок = ЭтотОбъект.Источники.НайтиСтроки(Новый Структура("Псевдоним", Параметры.Псевдоним));
		Если МассивСтрок.Количество() > 0 Тогда // true
			ЭтотОбъект.Источники.Удалить(МассивСтрок[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПустаяСтрока(ЭтотОбъект.ИмяТаблицы) Тогда
		Сообщить("Не заполнено имя таблицы");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ЭтотОбъект.Псевдоним) Тогда
   		ЭтотОбъект.Псевдоним = СтрЗаменить(ЭтотОбъект.ИмяТаблицы, "&", "");			
		ЭтотОбъект.Псевдоним = КорректныйПсевдоним(ЭтотОбъект.Источники, ЭтотОбъект.Псевдоним);
	КонецЕсли;
	
	Попытка
		ОписаниеВТ_ДобавитьИзменитьОписаниеВТ();
		//ПараметрЗакрытия = Новый Структура("ИмяТаблицы, Псевдоним", ЭтотОбъект.ИмяТаблицы, ЭтотОбъект.Псевдоним);
		ПараметрЗакрытия = ОписаниеВТ_ПараметрЗакрытия();
		ЭтотОбъект.Закрыть(ПараметрЗакрытия);
	Исключение
		ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеВТ

&НаСервере
Процедура ОписаниеВТ_ДобавитьИзменитьОписаниеВТ()
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	
	Если ПустаяСтрока(ЭтотОбъект.СтароеИмяТаблицы) Тогда
		ИсточникСхемыЗапроса = Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), ЭтотОбъект.ИмяТаблицы, ЭтотОбъект.Псевдоним);
	Иначе
		ИсточникСхемыЗапроса = Оператор.Источники.НайтиПоИмени(ЭтотОбъект.СтароеИмяТаблицы);
		Если ЭтотОбъект.СтароеИмяТаблицы <> ЭтотОбъект.ИмяТаблицы Тогда
			ИсточникСхемыЗапроса.Источник.ИмяТаблицы = ЭтотОбъект.ИмяТаблицы;
		КонецЕсли;
	КонецЕсли;
		
	Источник = ИсточникСхемыЗапроса.Источник;
	//Источник.ДоступныеПоля.Очистить(); // Слетают поля
	
	Для Каждого Строка Из ЭтотОбъект.ДоступныеПоля Цикл
		Тип = Неопределено;
		Если Строка.ТипЗначения.Типы().Количество() = 1 Тогда
			Тип = Строка.ТипЗначения.Типы()[0];
		КонецЕсли;
		ДоступноеПоле = Источник.ДоступныеПоля.Найти(Строка.Имя);
		Если ДоступноеПоле = Неопределено Тогда
			Источник.ДоступныеПоля.Добавить(Строка.Имя, Тип);
		Иначе
			//ДоступноеПоле.ТипЗначения = Строка.ТипЗначения; // Только чтение
		КонецЕсли;	
	КонецЦикла; 
	
	Отбор = Новый Структура("Имя");
	Индекс = Источник.ДоступныеПоля.Количество() - 1;
	Пока Индекс >= 0 Цикл
		ДоступноеПоле = Источник.ДоступныеПоля[Индекс];
		Отбор.Имя = ДоступноеПоле.Имя;
		МассивСтрок = ЭтотОбъект.ДоступныеПоля.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() = 0 Тогда
			Источник.ДоступныеПоля.Удалить(Индекс);
		КонецЕсли;
		Индекс = Индекс - 1;	
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Функция ОписаниеВТ_ПараметрЗакрытия()
	
	Результат = Новый Структура("ИмяТаблицы, Псевдоним, ДоступныеПоля",
		ЭтотОбъект.ИмяТаблицы,
		ЭтотОбъект.Псевдоним,
		ПоместитьВоВременноеХранилище(ЭтотОбъект.ДоступныеПоля.Выгрузить()));
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Библиотека

#Область СхемаЗапроса

&НаСервере
Функция СхемаЗапроса_ПолучитьКурсорСЗ()
	
	Возврат СхемаЗапроса_КурсорСЗ(ЭтотОбъект.СхемаЗапросаВХ, ЭтотОбъект.ПараметрСтруктураСтроки);
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_КурсорСЗ(Знач АдресВХ, Знач СтруктураСтроки)
	
	Результат = Новый Структура();
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	ЗапросПакета 	= СхемаЗапроса.ПакетЗапросов[СтруктураСтроки.ИндексЗапроса]; 
	КурсорОператора = СхемаЗапроса_КурсорОператора(ЗапросПакета, СтруктураСтроки.ПозицияОператора);
	Результат.Вставить("СхемаЗапроса", 	СхемаЗапроса);
	Результат.Вставить("ЗапросПакета", 	ЗапросПакета);
	Результат.Вставить("Запрос", 		КурсорОператора.Запрос);
	Результат.Вставить("Оператор", 		КурсорОператора.Оператор);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_КурсорОператора(Знач Запрос, Знач ПозицияОператора, ТекПозицияОператора = 0)
	
	Для Каждого Оператор Из Запрос.Операторы Цикл
		Если ТекПозицияОператора = ПозицияОператора Тогда
			Возврат Новый Структура("Запрос, Оператор", Запрос, Оператор);
		КонецЕсли;
		ТекПозицияОператора = ТекПозицияОператора + 1;
		Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
			Если ТипЗнч(ИсточникСхемыЗапроса.Источник) = Тип("ВложенныйЗапросСхемыЗапроса") Тогда
				Оператор = СхемаЗапроса_КурсорОператора(ИсточникСхемыЗапроса.Источник.Запрос, ПозицияОператора, ТекПозицияОператора);
				Если Оператор <> Неопределено Тогда
					Возврат Оператор;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область Выражения

&НаКлиентеНаСервереБезКонтекста
Функция КорректныйПсевдоним(Знач Коллекция, Знач Псевдоним) Экспорт
	
	Найдено = Ложь;
	Для Каждого Строка Из Коллекция Цикл
		Если Псевдоним = Строка.Псевдоним Тогда
			Найдено = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Если Найдено Тогда
		Псевдоним = ИнкрементПсевдонима(Псевдоним);
		Псевдоним = КорректныйПсевдоним(Коллекция, Псевдоним);
	КонецЕсли;
	
	Возврат Псевдоним;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИнкрементПсевдонима(Знач Псевдоним)
	
	Окончание = Прав(Псевдоним, 1);
	Если СтрНайти("0123456789", Окончание) > 0 Тогда
		Значение 	= Число(Окончание);
		Псевдоним 	= Лев(Псевдоним, СтрДлина(Псевдоним) - 1);
	Иначе
		Значение 	= 0;
	КонецЕсли;
	
	Возврат Псевдоним + Строка(Значение + 1);
	 	 
КонецФункции

#КонецОбласти

#КонецОбласти