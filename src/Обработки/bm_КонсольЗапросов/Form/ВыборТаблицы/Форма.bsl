#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.ПеречислениеТипТаблицы = Новый Структура();
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить("ОбычнаяТаблица", 	"ОбычнаяТаблица");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить("ТабличнаяЧасть", 	"ТабличнаяЧасть");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить("ВиртТаблица", 		"ВиртТаблица");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить("Изменения", 		"Изменения");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить("ВремТаблица", 		"ВремТаблица");
	
	ЭтотОбъект.ПеречислениеКартинки = Новый Структура();
	ЭтотОбъект.ПеречислениеКартинки.Вставить("ВиртТаблица", 				Элементы.КартинкаВиртТаблица.Картинка);	
	ЭтотОбъект.ПеречислениеКартинки.Вставить("Последовательность", 			Элементы.КартинкаПоследовательность.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить("ЗапросВыбораСхемыЗапроса", 	Элементы.КартинкаЗапросВыбораСхемыЗапроса.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить("Оператор", 					Элементы.КартинкаОператор.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить("Функция", 					Элементы.КартинкаФункция.Картинка);
	
	ОписаниеКоллекций_Заполнить();	
	ДеревоТаблиц_Заполнить();
	
	Если Параметры.Свойство("ВременныеТаблицы") Тогда
		ДеревоТаблиц_ЗаполнитьВременныеТаблицы(ЭтотОбъект, Параметры.ВременныеТаблицы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ДеревоТаблицПередРазворачиванием(Элемент, Строка, Отказ)
	
	//bookmark
	//Возврат; // Вариант1
	
	ТекДанные = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Строка);
	ИскомаяСтрока = ТекДанные.ПолучитьЭлементы()[0];
	Если ИскомаяСтрока.Значение = "@" Тогда
		ТекДанные.ПолучитьЭлементы().Очистить();
		//ДеревоТаблиц_ЗаполнитьСостав(Строка); // Вариант0
		ДеревоТаблиц_ЗаполнитьКоллекциюВариант2(Строка)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТаблицВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОК(Команды.Найти("ОК"));
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОК(Команда)
	
	ТекДанные = Элементы.ДеревоТаблиц.ТекущиеДанные;
	Если Не ТекДанные.ЭтоИсточник Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрЗакрытия = Новый Структура("ИмяТаблицы,Псевдоним,ТипТаблицы,Картинка", ТекДанные.Имя, ТекДанные.Псевдоним, ТекДанные.ТипТаблицы, ТекДанные.Картинка);
	ЭтотОбъект.Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////
// Служебные функции

#Область Форма

&НаКлиентеНаСервереБезКонтекста
Функция Форма_НайтиСтроку(Знач Дерево, Знач Значение, Знач ИмяКолонки)
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если Строка[ИмяКолонки] = Значение Тогда
			Возврат Строка;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

#КонецОбласти

#Область ОписаниеКоллекций

&НаСервере
Процедура ОписаниеКоллекций_Заполнить()
	
	ОписаниеКоллекций_ДобавитьОписание("КритерииОтбора", 			"КритерийОтбора", 			БиблиотекаКартинок.КритерийОтбора);
	ОписаниеКоллекций_ДобавитьОписание("ПланыОбмена", 				"ПланОбмена", 				БиблиотекаКартинок.ПланОбмена, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание("Константы", 				"Константа", 				БиблиотекаКартинок.Константа);
	ОписаниеКоллекций_ДобавитьОписание("Справочники", 				"Справочник", 				БиблиотекаКартинок.Справочник, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание("Документы", 				"Документ", 				БиблиотекаКартинок.Документ, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание("Последовательности", 		"Последовательность", 		ЭтотОбъект.ПеречислениеКартинки.Последовательность);
	ОписаниеКоллекций_ДобавитьОписание("ЖурналыДокументов", 		"ЖурналДокументов", 		БиблиотекаКартинок.ЖурналДокументов);
	ОписаниеКоллекций_ДобавитьОписание("Перечисления", 				"Перечисление", 			БиблиотекаКартинок.Перечисление);
	ОписаниеКоллекций_ДобавитьОписание("ПланыВидовХарактеристик", 	"ПланВидовХарактеристик", 	БиблиотекаКартинок.ПланВидовХарактеристик, 	Истина);
	ОписаниеКоллекций_ДобавитьОписание("ПланыСчетов", 				"ПланСчетов", 				БиблиотекаКартинок.ПланСчетов, 				Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание("ПланыВидовРасчета", 		"ПланВидовРасчета", 		БиблиотекаКартинок.ПланВидовРасчета, 		Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание("РегистрыСведений", 			"РегистрСведений", 			БиблиотекаКартинок.РегистрСведений);
	ОписаниеКоллекций_ДобавитьОписание("РегистрыНакопления", 		"РегистрНакопления", 		БиблиотекаКартинок.РегистрНакопления);
	ОписаниеКоллекций_ДобавитьОписание("РегистрыБухгалтерии", 		"РегистрБухгалтерии", 		БиблиотекаКартинок.РегистрБухгалтерии);
	ОписаниеКоллекций_ДобавитьОписание("РегистрыРасчета", 			"РегистрРасчета", 			БиблиотекаКартинок.РегистрРасчета);
	ОписаниеКоллекций_ДобавитьОписание("Перерасчеты", 				"Перерасчет", 				БиблиотекаКартинок.Обновить);
	ОписаниеКоллекций_ДобавитьОписание("БизнесПроцессы", 			"БизнесПроцесс", 			БиблиотекаКартинок.БизнесПроцесс, 			Истина);
	ОписаниеКоллекций_ДобавитьОписание("Задачи", 					"Задача", 					БиблиотекаКартинок.Задача, 					Истина);
	ОписаниеКоллекций_ДобавитьОписание("ВнешниеИсточникиДанных", 	"ВнешнийИсточникДанных", 	БиблиотекаКартинок.ВнешнийИсточникДанных, 	Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОписаниеКоллекций_ДобавитьОписание(Знач ИмяМнч, Знач ИмяЕдч, Знач Картинка, Знач ЕстьТЧ = Ложь, Знач ЕстьСТЧ = Ложь)
	
	НовСтр = ЭтотОбъект.ОписаниеКоллекций.Добавить();
	НовСтр.ИмяМнч 	= ИмяМнч;
	НовСтр.ИмяЕдч 	= ИмяЕдч;
	НовСтр.Картинка = Картинка;
	НовСтр.ЕстьТЧ 	= ЕстьТЧ;
	НовСтр.ЕстьСТЧ 	= ЕстьСТЧ;
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоТаблиц

&НаСервере
Процедура ДеревоТаблиц_Заполнить()
	
	СхемаЗапроса = Новый СхемаЗапроса();
	
	ДоступныеТаблицы = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы;
	Для Каждого СтрокаИсточник0 Из ДоступныеТаблицы Цикл
		Если ТипЗнч(СтрокаИсточник0) = Тип("ДоступнаяТаблицаСхемыЗапроса") Тогда
			Продолжить;
		КонецЕсли;
		СтруктураОтбора = Новый Структура("ИмяМнч", СтрокаИсточник0.Представление);
		МассивСтрок = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора);
		Если МассивСтрок.Количество() = 0 Тогда
			Если Метаданные.ВнешниеИсточникиДанных.Найти(СтрокаИсточник0.Представление) <> Неопределено Тогда
				ДеревоТаблиц_ЗаполнитьВнешнийИсточникДанных(СтрокаИсточник0);
			КонецЕсли;
			Продолжить;		
		КонецЕсли;
		СтрокаОписания  = МассивСтрок[0];
		СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.ПолучитьЭлементы().Добавить();
		СтрокаПриемник0.Значение 	= СтрокаИсточник0.Представление;
		СтрокаПриемник0.Картинка	= СтрокаОписания.Картинка;
		//ДеревоТаблиц_ЗаполнитьКоллекциюВариант0(СтрокаПриемник0, СтрокаИсточник0, СтрокаОписания)
		//ДеревоТаблиц_ЗаполнитьКоллекциюВариант1(СтрокаПриемник0, СтрокаИсточник0, СтрокаОписания);
		СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
		СтрокаПриемник1.Значение 	= "@";
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант0(Знач СтрокаПриемник0, Знач СтрокаИсточник0, Знач СтрокаОписания)
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		Поз = СтрНайти(СтрокаИсточник1.Имя, ".", , , 2);
		Если Поз > 0 Тогда
			Продолжить;
		КонецЕсли;
		Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
		СтрокаПриемник1 = СтрокаПриемник0.Строки.Добавить();
		СтрокаПриемник1.ЭтоИсточник	= Истина;
		СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		СтрокаПриемник1.Значение 	= Значение;	
		СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
		СтрокаПриемник1.Псевдоним	= Значение;
		СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;			
		СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
		СтрокаПриемник2.Значение 	= "@";
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант1(Знач СтрокаПриемник0, Знач СтрокаИсточник0, Знач СтрокаОписания)
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		
		Поз = СтрНайти(СтрокаИсточник1.Имя, ".", , , 2);
		Если Поз = 0 Тогда
			Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник1 = СтрокаПриемник0.Строки.Добавить();
			СтрокаПриемник1.ЭтоИсточник	= Истина;
			СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			СтрокаПриемник1.Значение 	= Значение;	
			СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
			СтрокаПриемник1.Псевдоним	= Значение;
			СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;
			
			Значение1 = СтрокаПриемник1.Значение;
			Значение0 = СтрокаПриемник0.Значение;
			
			Если СтрокаОписания.ЕстьТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + "." + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ".") Тогда
				Продолжить;
			КонецЕсли;
			
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
			СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
			Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, ".Изменения") Тогда
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
				СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
			Иначе
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
				СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
			КонецЕсли;
				
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант2(Знач Идентификатор)
	
	СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Идентификатор);
	Значение0		= СтрокаПриемник0.Значение;
	
	СтруктураОтбора = Новый Структура("ИмяМнч", Значение0);
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора)[0];
	
	СхемаЗапроса = Новый СхемаЗапроса();
	Для Каждого СтрокаИсточник0 Из СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы Цикл
		Если ТипЗнч(СтрокаИсточник0) = Тип("ДоступнаяТаблицаСхемыЗапроса") Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаИсточник0.Представление = Значение0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Возможно, зависит от версии платформы
	// Если первая таблица не константы, надо добавить в эту ветку 
	Если Значение0 = "Константы" Тогда
		Если Не (СтрокаИсточник0.Состав[0].Имя = "Константы") Тогда
			ИскомаяТаблица = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы.Найти("Константы");
			Если ТипЗнч(ИскомаяТаблица) = Тип("ДоступнаяТаблицаСхемыЗапроса") Тогда
				СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
				СтрокаПриемник1.ЭтоИсточник	= Истина;
				СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
				СтрокаПриемник1.Значение 	= "Константы";	
				СтрокаПриемник1.Имя			= "Константы";
				СтрокаПриемник1.Псевдоним	= "Константы";
				СтрокаПриемник1.Картинка	= БиблиотекаКартинок.Константа;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		
		Поз = СтрНайти(СтрокаИсточник1.Имя, ".", , , 2);
		Если Поз = 0 Тогда
			Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
			СтрокаПриемник1.ЭтоИсточник	= Истина;
			СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			СтрокаПриемник1.Значение 	= Значение;	
			СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
			СтрокаПриемник1.Псевдоним	= Значение;
			СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;
			
			Значение1 = СтрокаПриемник1.Значение;
			Значение0 = СтрокаПриемник0.Значение;
			
			Если СтрокаОписания.ЕстьТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + "." + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаОписания.ЕстьСТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].СтандартныеТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + "." + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаИсточник0.Представление = "РегистрыРасчета" Тогда
				ДеревоТаблиц_ЗаполнитьПерерасчет(СтрокаПриемник1);
			КонецЕсли;
			
		Иначе
			
			Если СтрокаИсточник0.Представление = "Перерасчеты" Тогда
				Если СтрНачинаетсяС(СтрокаИсточник1.Имя, "РегистрРасчета.") Тогда
					СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
					СтрокаПриемник1.ЭтоИсточник	= Истина;
					СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
					СтрокаПриемник1.Значение 	= ТекстПослеТочкиСНачала(СтрокаИсточник1.Имя);	
					СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
					СтрокаПриемник1.Псевдоним	= СтрЗаменить(СтрокаПриемник1.Значение, ".", "");
					СтрокаПриемник1.Картинка	= БиблиотекаКартинок.РегистрРасчета;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ".") Тогда
				Продолжить;
			КонецЕсли;
			
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
			СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
			Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, ".Изменения") Тогда
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
				СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
			Иначе
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
				СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
			КонецЕсли;
				
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьПерерасчет(Знач СтрокаПриемник1)
	
	Коллекция = Метаданные.РегистрыРасчета[СтрокаПриемник1.Значение].Перерасчеты;
	Если Коллекция.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
	СтрокаПриемник2.Значение = "Перерасчеты";
	СтрокаПриемник2.Картинка = БиблиотекаКартинок.Обновить;
	
	Для Каждого ОМ Из Метаданные.РегистрыРасчета[СтрокаПриемник1.Значение].Перерасчеты Цикл
		СтрокаПриемник3 = СтрокаПриемник2.ПолучитьЭлементы().Добавить();
		СтрокаПриемник3.ЭтоИсточник	= Истина;
		СтрокаПриемник3.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		СтрокаПриемник3.Значение 	= ОМ.Имя;	
		СтрокаПриемник3.Имя			= СтрокаПриемник1.Имя + "." + ОМ.Имя;
		СтрокаПриемник3.Псевдоним	= СтрокаПриемник1.Псевдоним + ОМ.Имя;
		СтрокаПриемник3.Картинка	= БиблиотекаКартинок.РегистрРасчета;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьСостав(Знач Идентификатор)
	
	СтрокаПриемник1 = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Идентификатор);
	Значение1 = СтрокаПриемник1.Значение;
	Значение0 = СтрокаПриемник1.ПолучитьРодителя().Значение;
	
	СтруктураОтбора = Новый Структура("ИмяМнч", Значение0);
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора)[0];
	
	Если СтрокаОписания.ЕстьТЧ Тогда
		Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
			СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
			СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + "." + ТабличнаяЧасть.Имя;					
			СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
			СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
		КонецЦикла;
	КонецЕсли;	
	
	СхемаЗапроса = Новый СхемаЗапроса();                                                  
	// ?
	// Состав = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы.Найти(Представление).Состав
	Для Каждого ГруппаДоступныхТаблицСхемыЗапроса Из СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы Цикл
		Если ГруппаДоступныхТаблицСхемыЗапроса.Представление = Значение0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;		
	Состав = ГруппаДоступныхТаблицСхемыЗапроса.Состав;
	
	// ?
	// Состав.Индекс(Состав.Найти(ТекДанные.Имя))
	Итер = 0;
	Для Каждого ДоступнаяТаблицаСхемыЗапроса Из Состав Цикл
		Если ДоступнаяТаблицаСхемыЗапроса.Имя = СтрокаПриемник1.Имя Тогда
			Прервать;
		КонецЕсли;
		Итер = Итер + 1;
	КонецЦикла;
	Итер = Итер + 1;
		
	Пока Итер < Состав.Количество() Цикл
		СтрокаИсточник1 = Состав[Итер];
		Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ".") Тогда
			Прервать;
		КонецЕсли;
		Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
		СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
		СтрокаПриемник2.ЭтоИсточник	= Истина;
		СтрокаПриемник2.Значение 	= Значение2;			
		СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
		СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
		Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, ".Изменения") Тогда
			СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
			СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
		Иначе
			СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
			СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
		КонецЕсли;
		Итер = Итер +1 ;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьВнешнийИсточникДанных(Знач СтрокаИсточник1) 
	
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(Новый Структура("ИмяМнч", "ВнешниеИсточникиДанных"))[0];
	
	СтрокаПриемник0 = Форма_НайтиСтроку(ЭтотОбъект.ДеревоТаблиц, "ВнешниеИсточникиДанных", "Значение");
	Если СтрокаПриемник0 = Неопределено Тогда
		СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.ПолучитьЭлементы().Добавить();
		СтрокаПриемник0.Значение 	= СтрокаОписания.ИмяМнч;
		СтрокаПриемник0.Картинка	= СтрокаОписания.Картинка;
	КонецЕсли;
	
	СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
	СтрокаПриемник1.Значение = СтрокаИсточник1.Представление;
	СтрокаПриемник1.Картинка = СтрокаОписания.Картинка;
		
	Для Каждого СтрокаИсточник2 Из СтрокаИсточник1.Состав Цикл
		Если ТипЗнч(СтрокаИсточник2) = Тип("ДоступнаяТаблицаСхемыЗапроса") Тогда
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник2.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник2.Имя;			
			СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Значение + Значение2;
			Если СтрНайти(СтрокаИсточник2.Имя, ".Куб.") > 0 Тогда
				СтрокаПриемник2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхКуб;
			ИначеЕсли СтрНайти(СтрокаИсточник2.Имя, ".Таблица.") > 0 Тогда
				СтрокаПриемник2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
			КонецЕсли;
		ИначеЕсли ТипЗнч(СтрокаИсточник2) = Тип("ГруппаДоступныхТаблицСхемыЗапроса") Тогда
			Представление2  = ТекстПередТочкойСНачала(СтрокаИсточник2.Представление) + "ТаблицаИзмерения";
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.Значение 	= СтрокаИсточник2.Представление;
			СтрокаПриемник2.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
			Для Каждого СтрокаИсточникЗ Из СтрокаИсточник2.Состав Цикл
				Значение3 = ТекстПослеТочкиСКонца(СтрокаИсточникЗ.Имя);
				СтрокаПриемник3 = СтрокаПриемник2.ПолучитьЭлементы().Добавить();
				СтрокаПриемник3.ЭтоИсточник	= Истина;
				СтрокаПриемник3.Значение 	= Значение3;			
				СтрокаПриемник3.Имя 		= СтрокаИсточникЗ.Имя;			
				СтрокаПриемник3.Псевдоним 	= СтрокаПриемник1.Значение + Представление2 + Значение3;
				СтрокаПриемник3.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоТаблиц_ЗаполнитьВременныеТаблицы(Знач Форма, Знач МассивЗначений)
	
	Значение 	= "Временные таблицы";	
	Коллекция 	= Форма.ДеревоТаблиц.ПолучитьЭлементы();
	Строка 		= Коллекция[Коллекция.Количество() - 1];
	
	Если Строка.Значение = Значение Тогда
		Коллекция.Удалить(Строка);
	КонецЕсли;
	
	НовСтр0 = Коллекция.Добавить();
	НовСтр0.Значение = Значение;
	НовСтр0.Картинка = БиблиотекаКартинок.КонструкторЗапросаГруппаВременныхТаблиц;
	Коллекция = НовСтр0.ПолучитьЭлементы();
	Для Каждого Значение Из МассивЗначений Цикл
		НовСтр1 = Коллекция.Добавить();
		НовСтр1.Значение 	= Значение;
		НовСтр1.Имя 		= Значение;
		НовСтр1.Псевдоним 	= Значение;
		НовСтр1.ЭтоИсточник = Истина;
		НовСтр1.ТипТаблицы	= Форма.ПеречислениеТипТаблицы.ВремТаблица;
		НовСтр1.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаВременнаяТаблица;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Выражения

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСКонца(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ".", НаправлениеПоиска.СКонца);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ".", НаправлениеПоиска.СНачала);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПередТочкойСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ".");
	Значение = Лев(Текст, Поз - 1);
	Возврат Значение;
		
КонецФункции

#КонецОбласти
