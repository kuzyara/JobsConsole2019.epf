#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс

Функция СведенияОВнешнейОбработке() Экспорт
		
	Если Метаданные.ОбщиеМодули.Найти("ДополнительныеОтчетыИОбработки") = Неопределено Тогда
		Возврат Новый Структура();
	КонецЕсли;
	
	ОМ_ДополнительныеОтчетыИОбработки 				= Вычислить("ДополнительныеОтчетыИОбработки");
	ОМ_ДополнительныеОтчетыИОбработкиКлиентСервер 	= Вычислить("ДополнительныеОтчетыИОбработкиКлиентСервер");
	
	ПараметрыРегистрации = ОМ_ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	
	ПараметрыРегистрации.Вид 				= ОМ_ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия 			= "1.2.1";	
	ПараметрыРегистрации.Наименование 		= "bm Консоль запросов";
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "bm Консоль запросов";
	НоваяКоманда.Идентификатор = "bm_КонсольЗапросов";
	НоваяКоманда.Использование = ОМ_ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();	
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

Функция СписокВТ() Экспорт
	
	СписокВТ = Новый Массив();
	СписокВТ.Добавить("ВидыСубконто");
	
	Возврат СписокВТ;
	
КонецФункции

Процедура СформироватьВремТаблицу(МенеджерВременныхТаблиц, Знач ИспользуемаяВТ) Экспорт
	
	Если ИспользуемаяВТ = "ВидыСубконто" Тогда
		СформироватьВТ_ВидыСубконто(МенеджерВременныхТаблиц);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьВТ_ВидыСубконто(МенеджерВременныхТаблиц)
		
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.ТипЗначения КАК ТипЗначения
	|ИЗ
	|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК Таблица
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Запрос = Новый Запрос();
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК Ссылка,
	|	ТИП(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные) КАК ТипЗначения,
	|	НЕОПРЕДЕЛЕНО КАК ПустоеЗначениеСубконто
	|ПОМЕСТИТЬ ВидыСубконто
	|ГДЕ 
	|	ЛОЖЬ
	|";	
	
	НомерСтроки = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Для Каждого Тип Из Выборка.ТипЗначения.Типы() Цикл
			
			ТипСтрокой = Метаданные.НайтиПоТипу(Тип).ПолноеИмя();
			
			Текст =
			"
			|ВЫБРАТЬ
			|	Таблица.Ссылка,
			|	ТИП(@ТипСтрокой),
			|	@ПустойТипСтрокой
			|ИЗ 
			|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК Таблица
			|ГДЕ 
			|	Таблица.Ссылка = &@ИмяПараметра
			|";
			
			Текст = СтрЗаменить(Текст, "@ТипСтрокой", ТипСтрокой);
			Текст = СтрЗаменить(Текст, "@ПустойТипСтрокой", "ЗНАЧЕНИЕ("+ТипСтрокой+".ПустаяСсылка)");
			ИмяПараметра = "Ссылка" + Формат(НомерСтроки, "ЧГ=0");
			Текст = СтрЗаменить(Текст, "@ИмяПараметра", ИмяПараметра);
			
			ТекстЗапроса = ТекстЗапроса +
			"
			|ОБЪЕДИНИТЬ ВСЕ
			|" + Текст;
			Запрос.УстановитьПараметр(ИмяПараметра, Выборка.Ссылка);
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ВыполнитьВБезопасномРежиме(Знач Алгоритм, Знач Параметры = Неопределено) Экспорт
	
	УстановитьБезопасныйРежим(Истина);
	
	Если Метаданные.ОбщиеМодули.Найти("РаботаВМоделиСервиса") <> Неопределено Тогда
		МодульРаботаВМоделиСервиса = Вычислить("РаботаВМоделиСервиса");
		МассивРазделителей = МодульРаботаВМоделиСервиса.РазделителиКонфигурации();
	Иначе
		МассивРазделителей = Новый Массив;
	КонецЕсли;
	
	Для Каждого ИмяРазделителя Из МассивРазделителей Цикл
		
		УстановитьБезопасныйРежимРазделенияДанных(ИмяРазделителя, Истина);
		
	КонецЦикла;
	
	Выполнить Алгоритм;
	
КонецПроцедуры

Функция ВычислитьВБезопасномРежиме(Знач Выражение, Знач Параметры = Неопределено) Экспорт
	
	УстановитьБезопасныйРежим(Истина);
	
	Если Метаданные.ОбщиеМодули.Найти("РаботаВМоделиСервиса") <> Неопределено Тогда
		МодульРаботаВМоделиСервиса = Вычислить("РаботаВМоделиСервиса");
		МассивРазделителей = МодульРаботаВМоделиСервиса.РазделителиКонфигурации();
	Иначе
		МассивРазделителей = Новый Массив;
	КонецЕсли;
	
	Для Каждого ИмяРазделителя Из МассивРазделителей Цикл
		
		УстановитьБезопасныйРежимРазделенияДанных(ИмяРазделителя, Истина);
		
	КонецЦикла;
	
	Возврат Вычислить(Выражение);
	
КонецФункции

#КонецЕсли

