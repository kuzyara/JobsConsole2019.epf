{3,
{49,0,1,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Выражение"}
},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{116,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОК",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{117,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОКРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{118,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОтмена",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{119,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОтменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{137,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСохранитьБезПроверки",
{1,0},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{138,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСохранитьБезПроверкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},1,0,0,0,3,3,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаФорма",
{1,1,
{"ru","Группа форма"}
},
{1,1,
{"ru","Группа форма"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаИсточникиДоступныеПоля",
{1,1,
{"ru","Группа источники доступные поля"}
},
{1,1,
{"ru","Группа источники доступные поля"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{53,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ИсточникиДоступныеПоля",0,0,1,
{1,0},
{1,0},
{1,
{3}
},0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{1}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{2,1282f000-23b6-4887-87f4-9e8e79db3d32,"ИсточникиДоступныеПоляВыбор",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ИсточникиДоступныеПоляНачалоПеретаскивания",1,0,1282f000-23b6-4887-87f4-9e8e79db3d32,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1},
{0},1,
{22,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ИсточникиДоступныеПоляКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"РазвернутьДоступныеПоля",
{1,1,
{"ru","Развернуть"}
},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGsSURBVDhPY1yw
YMF/BjyAkfHfLwHOp2b+YbUXoUIogImZ6fchKBsrYGL4Ox+XZhBg4mD5VMjI8P8X
lI8CmBj/PuFk+1AO5WIFTKFRxeeYmP6sgvKRwX9W5u+FIZGlH6F8rIAJRDAy/K1i
ZPj3GSwCBSxMv9ZIC1xcC+XiBGADYuIyHgMDqw8sAgRAwz6wMn8rsfOZjTeAQYAR
SjOsWDKJ++df7ov//zMrMTP9yoiNS5u1aNEcT4b/jFWMjH8L//5jO5uQkIBhINgF
IBARk/eVjflbNVDxcWDMLASJ/fvHwvLvP7MNUPNRYIBOWrJopjBYMRKAGwACQtyP
VgtyPvaNisn+CeJzsb5/A5ZgYGADGpTz9z/rtUUL56QsWTyDDSqO8AI2sGlVo8G7
b/LnoVw4AEb7WSam33lAlx1HcQGx4D8DozFQ8yGgt+YRMgBnLABd8RIofQC/AYz/
/0BZSOD/L2CUz2Jl+aYbF5+ykCQvADWeZWb84xgfn5QODOh3IDEiDfj/npnxdzYL
0w+L2PjUY1BBMMBrADCQfgLTxXJgwjIAapwWHZuF5iUGBgCzQpVnBDeV8wAAAABJ
RU5ErkJggg==}
},0,""},1,
{"Pattern"},"",2,0,1,
{11,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РазвернутьДоступныеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{34,
{142,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИсточникиДоступныеПоляЗначение",1,0,
{1,0},
{1,0},
{2,
{3},
{10}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{143,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{11,
{144,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},3,3,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{11,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,0,0,1,
{5,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{11,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},2,
{19,0},0,3,3,0},1,
{5,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ИсточникиДоступныеПоляСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{11,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},2,
{19,1},0,3,3,0},1,
{5,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ИсточникиДоступныеПоляУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{11,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},2,
{19,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0},1,0,1,
{11,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИсточникиДоступныеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВыражение",
{1,1,
{"ru","Группа выражение"}
},
{1,1,
{"ru","Группа выражение"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{112,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаВыражениеКоманднаяПанель",
{1,1,
{"ru","Группа выражение командная панель"}
},
{1,1,
{"ru","Группа выражение командная панель"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{122,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ВыражениеГруппаОчистить",
{1,1,
{"ru","Выражение группа очистить"}
},
{1,1,
{"ru","Выражение группа очистить"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{114,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ОчиститьТекст",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGZSURBVDhPzZG/
SwJhHMa9U1FIOevgQBodKkIQhPYggqa2BhuSaAoa+gdaasuoJSgKEioo+kFQENEQ
OAQNgUNTLU4hiJwOohzp9XnPw+5Ko7EHHp73fb7f73Pv+57nL0in0wqM2VsXZFt7
gsEQcgXvWI9apgO/BjAQQE7gA5yHZ3hJtIOeATT6kD34Atey2WwOnYVH1MZRC15b
XaBB+DvQgMsMm8LP5/PFRCIhTnOIFti/SqLgBMPiVBk4A+MM68J3wj7BKRzpdoWV
YDA4FQ6H3yRJOqa53/YtsB9EtuAc4WVXAMWlQCCQ0jTtUlXVnKIoXkLO8TW7riLX
MMPwrfA6V6CY8vv9G9Fo9ECWZXF3C9VqNVmpVDTTNMVf2IXMZvetInCe4LHZbJZr
tdqQvbfAKZ4jkcg7yyd44RwW6ARQKLRarQld12Piq7bt4cu+RqMxzHKdns22+wXX
G9BQJGSSIw8QNIYll0ql6Xq9fs961Wr6hh+/UYD3CInH403ihmHcYC0S3mxX3ega
IEBIH7IAtxn+sMx/CI/nEzcUkzauBHkXAAAAAElFTkSuQmCC}
},0,""},1,
{"Pattern"},"",2,0,1,
{11,
{115,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОчиститьТекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{120,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ОчиститьВыделенныйТекст",
{1,1,
{"ru","выделеный текст"}
},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHASURBVDhPxZK9
a1pRGIe9V60iEW2EC5LRoS2lIBXilhAowUzZQjFDJHuH/ANd2q0WO6a0ECEJtCQp
gUBCiBBQCHQIOGQyQ1xsBBF1EKV+9XlvT+xVmpAtP3h4z3m/znvOvbb7KJFI+CCk
tiPSlb1VFE5g9uGY9XPTadGdDShwYb7BKazCDr4IdqhbG5DowHyBC3ifTqez2GXY
IjaHNWVXdkQkiH8dfsMaxQPx5/P5cjgclmk2sUX2BU0CVlEsUyVhCV5QXBO/VWqC
7/Dsf1d463a7F7xe76WmadskP1Z+U+ynMJ9ghebVkQYE37hcrrhhGD8CgUDW5/PZ
abKL31DxAOYAkhQfiW94BYJxp9P5MRgMbui6Lnc31Wg0IvV63RgMBvIVPgO16a9m
EFknOOv1etVms/lE7U0xxbnf7//F8ifsWYtFwwYEiv1+/1WtVgvJqcpt42RHu91+
yvIDOam/3n8aeQMSyjSZZ+RJGk3j0iuVymKr1Tph/c5MGtPNG7yEWZA/z85X8MRi
sdeMbpRKpatMJpNlEjnsEcgPJpxDaryBPF4POh6PR4tGozO5XO6w2+22lV/iHbW+
hgI8qGy2P9fOozbdJ14tAAAAAElFTkSuQmCC}
},0,""},1,
{"Pattern"},"",2,0,1,
{11,
{121,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОчиститьВыделенныйТекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},1,0,1,
{11,
{123,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыражениеГруппаОчиститьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,0,1,
{11,
{113,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыражениеКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{34,
{107,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},7,"ВыражениеДокумент",0,0,
{1,0},
{1,0},
{1,
{11}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,2,513,
{-31},"Consolas",1,100},1,0,0,1,0},
{0,1,0},1,
{22,
{108,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВыражениеДокументКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{11,
{109,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыражениеДокументРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},3,3,0},1,0,1,
{11,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,0,1,
{11,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФормаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаКартинки",
{1,1,
{"ru","Группа картинки"}
},
{1,1,
{"ru","Группа картинки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},6,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаВиртТаблица",
{1,1,
{"ru","Картинка вирт таблица"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAABXUExURf///7///2D//3///3f//5///5P//5v//6f/
/9///4v//8P///b3/+Pn//X2/+bp//r6/2V7/6Gv/8jQ/3CF/+7w/2+E/8PL/4qb
/4GT//7+/yxL/9bc/2b9pxIAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABXSURBVChT
lY9JEoAwCARBRcUt7kv0/++0gjmAJ+1jUzNTwAcwSRVBZJQXFBFRclVzRAQCccgG
/ommhc5p0Q8wTiYyL6vt2PbDCn9erxX/rHD8QkC5KABueTYDI8e4Yh4AAAAASUVO
RK5CYII=}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{22,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаВиртТаблицаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка вирт таблица"}
},0},0,1,
{11,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаВиртТаблицаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаПоследовательность",
{1,1,
{"ru","Картинка последовательность"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEZSURBVDhPYyAZ
qP3nBmJGKI+BCUqTAnqAeBLMELhJRAO1/3xAcjsQnwPiPIQBav8LgGQ+hEMQcAKx
OBAXIhsgACRBmBAA6ekFYpABniAB4kE9nxaD3guQ/49CvcLADJYgFjiwFzBI7Ulm
4HjjxHDE9g1ICOKFej7ynN/46RPMALICEGjABEQgEgPq+VCiEGjAf6IS0n+GO6xA
vEr3lcpqIBeuGSxJLAAakPmJ7dLbX0w3NKBCYMAIlJAA0h5AzAbErFDMDqVZgJgD
ie0DxNxA7MjIoHIdSIPzAij0HYDYGIi1gFgBiAWBGKQR5MwPQPwMiO8C8Q8gfgzl
kwaALq0G4ktALAwVAgNiAxEUWyBvuQKd/hYsCAYMDACffkqeYVo2gQAAAABJRU5E
rkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{22,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаПоследовательностьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка последовательность"}
},0},0,1,
{11,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаПоследовательностьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаЗапросВыбораСхемыЗапроса",
{1,1,
{"ru","Картинка запрос выбора схемы запроса"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADfSURBVDhPYxhw
wAgiHBwcGsA80oD8gQMHEsEscgyA6WEC8ygAw8ALtA2D95rXJP6y/eIAsf8z/wWL
wQDLNy717+IvF7FA+QzAAMEwRM2eIQhIrQZiDJf+5fz+H0g14PXCrUaGdUBqPoSH
Av6zfOE+BpTfSUwYFADxLQgTDm4JXdM5BmLAvQAMBwcoExUcZGD4Ivdo/mf5B63/
mf4xMf5j+sf7UH4h029WMZA0zAULoDRWwPNI7gRQwySg5r+Mf1im8zySPw4UXgiS
A8cCMUCtHuzaKUCcD/T7T7AgAwMDAG/yRu3QuqxoAAAAAElFTkSuQmCC}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{22,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаЗапросВыбораСхемыЗапросаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка запрос выбора схемы запроса"}
},0},0,1,
{11,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаЗапросВыбораСхемыЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаОператор",
{1,1,
{"ru","Картинка оператор"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADySURBVDhPYxhw
wAgiHBwcGsA80oD8gQMHEsEscgyA6WEC8ygAdPDClP9gS9ABKV4QAxqyFYiNoXwU
QIwBP4DYCYhPAA1ZBsQqYFEoIBgGf1i5WY57rcr/x8zOwfj/z0/G//9+cXx9tk/n
WN3vk1uXRcINAAYIvnD4BySRw+I/4/+/X/8zMjcRG40/oTQM/Of+eP8ZkF5NrAGg
cACB/0D8CIjDTfakLmfIYXzAAhYGAqA3HKBMDHD054f/f1h5/gm9PHNB6crsRu6P
9z4BhflBcjAXLIDS2AEj83GRZ0cDdI9WFkM1g8BCKE0EwJGYGBgYGADhYVw5Kw7y
UwAAAABJRU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{22,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаОператорКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка оператор"}
},0},0,1,
{11,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаОператорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{139,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаФункция",
{1,1,
{"ru","Картинка функция"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFSSURBVDhPtZGx
SgNBEIb/y90ROBNRYmFARGLrA9j4AnbiG1gLVoKWigiBCCnSaiGpxEIsfRC1sNBK
kVwRkfMul9v1z+7iKdlcofjB3Mz+szOzu4e/4hhv5yRu8LuOcnkBw+Ej0vQSu0FP
JzWTG7TTNbhuF46zaBRAyghCHGLHaxoFJeN/0pEVFl+YYsHCW1rIdUDz9SaNvQEw
xY3zKsqyFuMV9Pt1RNEm4rildIP9Cge9ZdRqD2a1gW3nysRj5A06MuBD3TOqcqLk
FWZ1As+0D+ZeOX0Le9U7LWvyK2RZCZ5Xoc18Kx5RpzWoryIIKlrKyRuEYcIpR4ya
fOkbLZI0PcNgcIokOaf+YtQv7G/Qkcf87rPhOydP8w2kToxj/wtClJV33bCoeIS9
QZbNKS/lm/IF2Bv4/pLyQjwpX8CkEwTKe94vTyBll03aiJNro/wXwCcW+msfOwnF
1AAAAABJRU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{22,
{140,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаФункцияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка функция"}
},0},0,1,
{11,
{141,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаФункцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{145,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаВложЗапрос",
{1,1,
{"ru","Картинка влож запрос"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0}
},1,
{22,
{146,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаВложЗапросКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка влож запрос"}
},0},0,1,
{11,
{147,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаВложЗапросРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},0,0,1,
{11,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКартинкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{11,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"
#Область СвойстваЭлементовФормы

	//Элементы.ФормаСохранитьБезПроверки.ПоложениеВКоманднойПанели=ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
	
	//Элементы.ИсточникиДоступныеПоля.Шапка = Ложь
	//Элементы.ИсточникиДоступныеПоля.ИзменятьСоставСтрок = Ложь;
	//Элементы.ИсточникиДоступныеПоля.ИзменятьПорядокСтрок = Ложь;
	//Элементы.ИсточникиДоступныеПоляЗначение.ТолькоПросмотр = Истина;

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
  	Форма_НастроитьФорму();
	
	НастройкаВыражения_ЗагрузитьСервер(Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// bookmark
	Если ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Количество() = 1 Тогда
		Элементы.ИсточникиДоступныеПоля.Развернуть(ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы()[0].ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

#Область ИсточникиДоступныеПоля

&НаКлиенте
Процедура ИсточникиДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИсточникиДоступныеПоля_РазвернутьДоступныеПоля();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоляНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Идентификатор = ПараметрыПеретаскивания.Значение[0];
	ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(Идентификатор);
	ПараметрыПеретаскивания.Значение = ИсточникиДоступныеПоля_ВыражениеДоступногоПоля(ТекДанные);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОК(Команда)
	
	ПараметрЗакрытия = Новый Структура();
	ПараметрЗакрытия.Вставить(""Выражение"", СокрЛП(ЭтотОбъект.ВыражениеДокумент.ПолучитьТекст()));
	Если ЭтотОбъект.ТаблицаФормы = ""ВыбираемыеПоля"" Тогда
		ПараметрЗакрытия.Вставить(""ЭтоВТ"", 			Ложь);
		ПараметрЗакрытия.Вставить(""ТипЗначения"", 	Неопределено);
		ПараметрЗакрытия.Вставить(""Псевдоним"", 		"""");
		ПараметрЗакрытия.Вставить(""САФ"", 			Ложь);
	КонецЕсли;
	
	Попытка
		НастройкаОператора_ПроверитьВыражение(ПараметрЗакрытия);
		ЭтотОбъект.Закрыть(ПараметрЗакрытия);
	Исключение
		ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьБезПроверки(Команда)
	
	ПараметрЗакрытия = Новый Структура();
	ПараметрЗакрытия.Вставить(""Выражение"", СокрЛП(ЭтотОбъект.ВыражениеДокумент.ПолучитьТекст()));
	Если ЭтотОбъект.ТаблицаФормы = ""ВыбираемыеПоля"" Тогда
		ПараметрЗакрытия.Вставить(""ЭтоВТ"", 			Ложь);
		ПараметрЗакрытия.Вставить(""ТипЗначения"", 	Неопределено);
		ПараметрЗакрытия.Вставить(""Псевдоним"", 		"""");
		ПараметрЗакрытия.Вставить(""САФ"", 			Ложь);
	КонецЕсли;
	
	ЭтотОбъект.Закрыть(ПараметрЗакрытия);
		
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДоступныеПоля(Команда)
	
	ИсточникиДоступныеПоля_РазвернутьДоступныеПоля();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекст(Команда)
	
	ЭтотОбъект.ВыражениеДокумент.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВыделенныйТекст(Команда)
	
	Элементы.ВыражениеДокумент.ВыделенныйТекст = """";
	
КонецПроцедуры

#КонецОбласти  

#Область Форма

&НаСервере
Процедура Форма_НастроитьФорму()
	
	ЭтотОбъект.ПеречислениеТипСтроки = Новый Структура();
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""Источник"", 		""Источник"");
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""ДоступноеПоле"", 	""ДоступноеПоле"");
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""ВыбираемоеПоле"", ""ВыбираемоеПоле"");
	
	ЭтотОбъект.ПеречислениеТипИсточника = Новый Структура();
	ЭтотОбъект.ПеречислениеТипИсточника.Вставить(""ТаблицаСхемыЗапроса"", 					""ТаблицаСхемыЗапроса"");
	ЭтотОбъект.ПеречислениеТипИсточника.Вставить(""ВложенныйЗапросСхемыЗапроса"", 			""ВложенныйЗапросСхемыЗапроса"");
	ЭтотОбъект.ПеречислениеТипИсточника.Вставить(""ОписаниеВременнойТаблицыСхемыЗапроса"", 	""ОписаниеВременнойТаблицыСхемыЗапроса"");
	
	ЭтотОбъект.ПеречислениеТипТаблицы = Новый Структура();
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ОбычнаяТаблица"", 	""ОбычнаяТаблица"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ТабличнаяЧасть"", 	""ТабличнаяЧасть"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ВиртТаблица"", 		""ВиртТаблица"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""Изменения"", 		""Изменения"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ВремТаблица"", 		""ВремТаблица"");
	
	ЭтотОбъект.ПеречислениеКартинки = Новый Структура();
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ВиртТаблица"", 				Элементы.КартинкаВиртТаблица.Картинка);	
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Последовательность"", 			Элементы.КартинкаПоследовательность.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ЗапросВыбораСхемыЗапроса"", 	Элементы.КартинкаЗапросВыбораСхемыЗапроса.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Оператор"", 					Элементы.КартинкаОператор.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Функция"", 					Элементы.КартинкаФункция.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ВложЗапрос"", 					Элементы.КартинкаВложЗапрос.Картинка);
	
	ОписаниеКоллекций_Заполнить();
	
КонецПроцедуры

#КонецОбласти

#Область НастройкаВыражения

&НаСервере
Функция НастройкаВыражения_ЗагрузитьСервер(Знач ПараметрыОткрытия)
	
	ЭтотОбъект.СхемаЗапросаВХ 			= ПараметрыОткрытия.СхемаЗапросаВХ;
	ЭтотОбъект.ПараметрСтруктураСтроки 	= ПараметрыОткрытия.ПараметрСтруктураСтроки;
	ЭтотОбъект.ТаблицаФормы 			= ПараметрыОткрытия.ТаблицаФормы;
	ЭтотОбъект.ВыражениеДокумент.УстановитьТекст(ПараметрыОткрытия.Выражение);
	Если Параметры.Свойство(""СтруктураВыражения"") Тогда
		ЭтотОбъект.СтруктураВыражения = ПараметрыОткрытия.СтруктураВыражения;
	КонецЕсли;
			
	Источники = ПараметрыОткрытия.Источники;
	Если Параметры.ТаблицаФормы <> ""Параметры"" Тогда
		КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
		Для Каждого Строка Из Источники Цикл
			НовСтр = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Строка);
			ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.НайтиПоПсевдониму(НовСтр.Псевдоним);
			ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(НовСтр, ИсточникСхемыЗапроса.Источник);
		КонецЦикла;
	Иначе 
		НовСтр = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Добавить();
		ИскомаяСтрока = НайтиСтрокуКоллекции(Источники, ЭтотОбъект.СтруктураВыражения.Псевдоним, ""Псевдоним"");
		ЗаполнитьЗначенияСвойств(НовСтр, ИскомаяСтрока);
		ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляУсловия(НовСтр, ЭтотОбъект.СтруктураВыражения.ДоступныеПоля);
		Элементы.ИсточникиДоступныеПоля.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НастройкаОператора_ПроверитьВыражение(ПараметрЗакрытия)
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	
	// При добавлении поля с функцией может не сработать, если есть группировка по этому полю
	Оператор.Группировки.Очистить();
	
	ВыражениеСтрока = ПараметрЗакрытия.Выражение;
		
	Попытка
		
		Если ЭтотОбъект.ТаблицаФормы = ""ВыбираемыеПоля"" Тогда
			
			//Исключение не срабатывает+ Уходит в дамп
			// Поэтому проверка через добавление
			//ВыражениеСхемыЗапроса = Новый ВыражениеСхемыЗапроса(ВыражениеСтрока);
			//Оператор.ВыбираемыеПоля[ЭтотОбъект.СтруктураВыражения.ИндексСтроки] = ВыражениеСхемыЗапроса;
			//Оператор.ВыбираемыеПоля.Установить(ЭтотОбъект.СтруктураВыражения.ИндексСтроки, ВыражениеСхемыЗапроса);
			//Исключение не срабатывает-
			
			ТекКоличество = Оператор[ТаблицаФормы].Количество();
			
			Элемент = Оператор[ТаблицаФормы].Добавить(ВыражениеСтрока);
			
			Если ТипЗнч(Элемент) = Тип(""ВыражениеСхемыЗапроса"") Тогда
				
				СтруктураКолонки = СхемаЗапроса_ПолучитьСтруктуруКолонки(Запрос, Элемент);
				ПараметрЗакрытия.Псевдоним = СтруктураКолонки.Псевдоним;
				ТипЗначения = СтруктураКолонки.ТипЗначения;
				ЭтоВТ = СтрНайти(Строка(ТипЗначения), ""табличная часть"") > 0;
				Если ЭтоВТ Тогда
					ПараметрЗакрытия.Выражение 	= Строка(Элемент);
					ПараметрЗакрытия.ЭтоВТ 		= Истина;
				Иначе
					ПараметрЗакрытия.Выражение 		= Строка(Элемент);
					ПараметрЗакрытия.ТипЗначения 	= ТипЗначения; 
					ПараметрЗакрытия.САФ 			= Элемент.СодержитАгрегатнуюФункцию();
				КонецЕсли;
								
			Иначе // ?                  
				ПараметрЗакрытия.Выражение 		= Элемент.Имя;
				ПараметрЗакрытия.ЭтоВТ 			= Истина;			
			КонецЕсли;
			
		ИначеЕсли ЭтотОбъект.ТаблицаФормы = ""Соединения""
			Или ЭтотОбъект.ТаблицаФормы = ""Отбор"" Тогда
			
			ТекКоличество = Оператор[""Отбор""].Количество();
			
			Оператор[""Отбор""].Добавить(ВыражениеСтрока);
			Индекс = Оператор[""Отбор""].Количество() - 1;
			
			Элемент = Оператор[""Отбор""][Индекс];
			ПараметрЗакрытия.Выражение = Строка(Элемент);
			
		ИначеЕсли ЭтотОбъект.ТаблицаФормы = ""Параметры"" Тогда
			
			Источник = Оператор.Источники.НайтиПоПсевдониму(ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы()[0].Значение).Источник;
			Источник.Параметры[ЭтотОбъект.СтруктураВыражения.Индекс].Выражение = Новый ВыражениеСхемыЗапроса(ВыражениеСтрока);
			
			//Текст запроса может быть изменен+          
			ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
			Если ПустаяСтрока(ТекстЗапроса) Тогда
				Оператор.ВыбираемыеПоля.Добавить(""NULL"");
				ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
			КонецЕсли;
			Запрос.УстановитьТекстЗапроса(ТекстЗапроса);
			Оператор = Запрос.Операторы[ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора];
			Источник = Оператор.Источники.НайтиПоПсевдониму(ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы()[0].Значение).Источник;
			//Текст запроса может быть изменен-
	
			ПараметрЗакрытия.Выражение = Строка(Источник.Параметры[ЭтотОбъект.СтруктураВыражения.Индекс].Выражение); 
			
		ИначеЕсли ЭтотОбъект.ТаблицаФормы = ""Порядок""
			Или ЭтотОбъект.ТаблицаФормы = ""КонтрольныеТочкиИтогов"" Тогда
			
			ТекКоличество = Запрос[ТаблицаФормы].Количество();
			
			Запрос[ТаблицаФормы].Добавить(ВыражениеСтрока);
			Если Запрос[ТаблицаФормы].Количество() = ТекКоличество Тогда
				ВызватьИсключение(""Выражение не добавлено"");
			КонецЕсли;
			Индекс = Запрос[ТаблицаФормы].Количество() - 1;
			
			Элемент = Запрос[ТаблицаФормы][Индекс];
			ИмяКолонки = ?(ТаблицаФормы = ""Порядок"", ""Элемент"", ""Выражение"");
			Если ТипЗнч(Элемент[ИмяКолонки]) = Тип(""ВыражениеСхемыЗапроса"") Тогда 
				ПараметрЗакрытия.Выражение = Строка(Элемент[ИмяКолонки]);
			ИначеЕсли ТипЗнч(Элемент[ИмяКолонки]) = Тип(""КолонкаСхемыЗапроса"") Тогда 
				ПараметрЗакрытия.Выражение = Элемент[ИмяКолонки].Псевдоним;
			КонецЕсли;
			
		КонецЕсли;
		
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////
// Служебные функции

#Область ОписаниеКоллекций

&НаСервере
Процедура ОписаниеКоллекций_Заполнить()
	
	ОписаниеКоллекций_ДобавитьОписание(""КритерииОтбора"", 			""КритерийОтбора"", 			БиблиотекаКартинок.КритерийОтбора);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыОбмена"", 				""ПланОбмена"", 				БиблиотекаКартинок.ПланОбмена, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Константы"", 				""Константа"", 				БиблиотекаКартинок.Константа);
	ОписаниеКоллекций_ДобавитьОписание(""Справочники"", 				""Справочник"", 				БиблиотекаКартинок.Справочник, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Документы"", 				""Документ"", 				БиблиотекаКартинок.Документ, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Последовательности"", 		""Последовательность"", 		ЭтотОбъект.ПеречислениеКартинки.Последовательность);
	ОписаниеКоллекций_ДобавитьОписание(""ЖурналыДокументов"", 		""ЖурналДокументов"", 		БиблиотекаКартинок.ЖурналДокументов);
	ОписаниеКоллекций_ДобавитьОписание(""Перечисления"", 				""Перечисление"", 			БиблиотекаКартинок.Перечисление);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыВидовХарактеристик"", 	""ПланВидовХарактеристик"", 	БиблиотекаКартинок.ПланВидовХарактеристик, 	Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыСчетов"", 				""ПланСчетов"", 				БиблиотекаКартинок.ПланСчетов, 				Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыВидовРасчета"", 		""ПланВидовРасчета"", 		БиблиотекаКартинок.ПланВидовРасчета, 		Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыСведений"", 			""РегистрСведений"", 			БиблиотекаКартинок.РегистрСведений);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыНакопления"", 		""РегистрНакопления"", 		БиблиотекаКартинок.РегистрНакопления);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыБухгалтерии"", 		""РегистрБухгалтерии"", 		БиблиотекаКартинок.РегистрБухгалтерии);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыРасчета"", 			""РегистрРасчета"", 			БиблиотекаКартинок.РегистрРасчета);
	ОписаниеКоллекций_ДобавитьОписание(""Перерасчеты"", 				""Перерасчет"", 				БиблиотекаКартинок.Обновить);
	ОписаниеКоллекций_ДобавитьОписание(""БизнесПроцессы"", 			""БизнесПроцесс"", 			БиблиотекаКартинок.БизнесПроцесс, 			Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Задачи"", 					""Задача"", 					БиблиотекаКартинок.Задача, 					Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ВнешниеИсточникиДанных"", 	""ВнешнийИсточникДанных"", 	БиблиотекаКартинок.ВнешнийИсточникДанных, 	Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОписаниеКоллекций_ДобавитьОписание(Знач ИмяМнч, Знач ИмяЕдч, Знач Картинка, Знач ЕстьТЧ = Ложь, Знач ЕстьСТЧ = Ложь)
	
	НовСтр = ЭтотОбъект.ОписаниеКоллекций.Добавить();
	НовСтр.ИмяМнч 	= ИмяМнч;
	НовСтр.ИмяЕдч 	= ИмяЕдч;
	НовСтр.Картинка = Картинка;
	НовСтр.ЕстьТЧ 	= ЕстьТЧ;
	НовСтр.ЕстьСТЧ 	= ЕстьСТЧ;
	
КонецПроцедуры

#КонецОбласти

#Область ИсточникиДоступныеПоля

&НаКлиенте
Процедура ИсточникиДоступныеПоля_РазвернутьДоступныеПоля()
	
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле Тогда
		Возврат;
	КонецЕсли;
	
	Коллекция = ТекДанные.ПолучитьЭлементы();
	
	Если Коллекция.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
		
	МассивЗначений = Новый Массив();
	
	ИскомаяСтрока = ТекДанные;
	Пока ИскомаяСтрока <> Неопределено Цикл
		МассивЗначений.Добавить(ИскомаяСтрока.Значение);
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЦикла;
	
	Если МассивЗначений.Количество() > 1 Тогда
		МассивДоступныхПолей = ИсточникиДоступныеПоля_МассивДоступныхПолей(МассивЗначений);
		Для Каждого Структура Из МассивДоступныхПолей Цикл
			НовСтр = Коллекция.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Структура);
			НовСтр.Картинка = БиблиотекаКартинок.Реквизит;
		КонецЦикла;
		Элементы.ИсточникиДоступныеПоля.Развернуть(ТекДанные.ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(Знач Строка, Знач Источник)
	
	Для Каждого ДоступноеПоле Из Источник.ДоступныеПоля Цикл
		НовСтр = Строка.ПолучитьЭлементы().Добавить();
		НовСтр.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле;
		НовСтр.Имя 			= ДоступноеПоле.Имя;
		НовСтр.Значение 	= ДоступноеПоле.Имя;
		Если ТипЗнч(ДоступноеПоле) = Тип(""ДоступнаяВложеннаяТаблицаСхемыЗапроса"") Тогда
			НовСтр.ЭтоВТ = Истина;
			Для Каждого ДоступноеПолеВТ Из ДоступноеПоле.Поля Цикл
				НовСтрВТ = НовСтр.ПолучитьЭлементы().Добавить();
				НовСтрВТ.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле;
				НовСтрВТ.Имя 			= ДоступноеПолеВТ.Имя;
				НовСтрВТ.Значение 		= ДоступноеПолеВТ.Имя;
				НовСтрВТ.ТипЗначения 	= ДоступноеПолеВТ.ТипЗначения;
				ТаблицаФормы_УстановитьКартинкуДоступногоПоля(НовСтрВТ, ДоступноеПолеВТ);
			КонецЦикла;
		Иначе
			НовСтр.ТипЗначения = ДоступноеПоле.ТипЗначения;
		КонецЕсли;
		ТаблицаФормы_УстановитьКартинкуДоступногоПоля(НовСтр, ДоступноеПоле);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляУсловия(Знач ТекДанные, Знач ДоступныеПоля)
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();	
	ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.НайтиПоПсевдониму(ТекДанные.Псевдоним);
	
	Для Каждого ДоступноеПоле Из ИсточникСхемыЗапроса.Источник.ДоступныеПоля Цикл
		Если ДоступныеПоля.НайтиПоЗначению(ДоступноеПоле.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НовСтр = ТекДанные.ПолучитьЭлементы().Добавить();
		НовСтр.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле;
		НовСтр.Имя			= ДоступноеПоле.Имя;
		НовСтр.Значение 	= ДоступноеПоле.Имя;
		// Не обязательно?
		Если ТипЗнч(ДоступноеПоле) = Тип(""ДоступнаяВложеннаяТаблицаСхемыЗапроса"") Тогда
			НовСтр.ЭтоВТ = Истина;
		Иначе
			НовСтр.ТипЗначения = ДоступноеПоле.ТипЗначения;
		КонецЕсли;
		ТаблицаФормы_УстановитьКартинкуДоступногоПоля(НовСтр, ДоступноеПоле);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИсточникиДоступныеПоля_МассивДоступныхПолей(Знач МассивЗначений)
	
	Результат = Новый Массив();
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	
	Псевдоним = МассивЗначений[МассивЗначений.Количество() - 1];
	ИсточникСхемыЗапроса = Оператор.Источники.НайтиПоПсевдониму(Псевдоним);
	ДоступныеПоля = ИсточникСхемыЗапроса.Источник.ДоступныеПоля;
	
	Если ДоступныеПоля.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Итер = МассивЗначений.Количество() - 2;
	
	Пока Итер >= 0 Цикл
		ДоступноеПоле = ДоступныеПоля.Найти(МассивЗначений[Итер]);
		ДоступныеПоля = ДоступноеПоле.Поля;
		Если Итер = 0 Тогда
			Для Каждого ДоступноеПоле Из ДоступныеПоля Цикл
				Структура = Новый Структура(""ТипСтроки, Значение, ЭтоВТ, ТипЗначения"", ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле, ДоступноеПоле.Имя);
				// Не обязательно?
				Если ТипЗнч(ДоступноеПоле) = Тип(""ДоступнаяВложеннаяТаблицаСхемыЗапроса"") Тогда
					Структура.ЭтоВТ = Истина;
				Иначе
					Структура.ТипЗначения = ДоступноеПоле.ТипЗначения;
				КонецЕсли;
				Результат.Добавить(Структура);			
			КонецЦикла;
			Возврат Результат;
		КонецЕсли;
		Итер = Итер - 1;		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Функция ИсточникиДоступныеПоля_ВыражениеДоступногоПоля(Знач ТекДанные)
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Тогда
		Возврат ТекДанные.Значение;
	КонецЕсли;	
	
	МассивЗначений = Новый Массив();	
	СодержитВТ     = Ложь;
	
	ИскомаяСтрока = ТекДанные;
	Пока ИскомаяСтрока <> Неопределено Цикл
		МассивЗначений.Добавить(ИскомаяСтрока.Значение);
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЦикла;
	
	Значение = """";
	Итер = МассивЗначений.Количество() - 1;
	ПерваяСтрока = Истина;
	Пока Итер >= 0 Цикл
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
		Иначе
			Значение = Значение + ""."";
		КонецЕсли;
		Значение = Значение + МассивЗначений[Итер];
		Итер = Итер - 1;
	КонецЦикла;
	
	Если Найти(ЭтотОбъект.ИмяФормы, ""Выражение"") > 0 И ЭтотОбъект.ТаблицаФормы = ""Параметры"" Тогда
		Значение = ТекстПослеТочкиСНачала(Значение);
		Значение = Значение + "" = &"" + ТекстПослеТочкиСКонца(Значение);
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

&НаКлиенте
Функция ИсточникиДоступныеПоля_СведенияОЗначенииИсточника(Знач Значение)
	
	Результат = Новый Структура(""Источник,ВТ,ТипПоля"", """", """", """");
	
	МассивСтрок = СтрРазделить(Значение, ""."");
	
	Для Каждого СтрокаИсточник Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если СтрокаИсточник.Значение = МассивСтрок[0] Тогда
			Результат.Источник = МассивСтрок[0];
			Если МассивСтрок.Количество() = 1 Тогда
				Результат.ТипПоля = ""Источник"";
				Возврат Результат;
			КонецЕсли;
			Для Каждого Строка Из СтрокаИсточник.ПолучитьЭлементы() Цикл
				Если Строка.Значение = МассивСтрок[1] Тогда
					Если Не Строка.ЭтоВТ Тогда
						Результат.ТипПоля = ""ПолеИсточника"";
					Иначе
						Результат.ВТ = МассивСтрок[1];
						Если МассивСтрок.Количество() = 2 Тогда
							Результат.ТипПоля = ""ВТ"";	         							
						Иначе
							Результат.ТипПоля = ""ПолеВТ""; 
						КонецЕсли;
					КонецЕсли;
					Возврат Результат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ТаблицаФормы

&НаСервере
Процедура ТаблицаФормы_УстановитьКартинкуДоступногоПоля(Знач Строка, Знач ДоступноеПоле)
	
	Если Не Строка.ЭтоВТ Тогда
		Если ДоступноеПоле.Роль.Измерение Тогда
			Картинка = БиблиотекаКартинок.Измерение;
		ИначеЕсли ДоступноеПоле.Роль.Ресурс Тогда
			Картинка = БиблиотекаКартинок.Ресурс;						
		Иначе
			Картинка = БиблиотекаКартинок.Реквизит;
		КонецЕсли;
	Иначе
		Картинка = БиблиотекаКартинок.ВложеннаяТаблица;
	КонецЕсли;
	
	Строка.Картинка = Картинка;
	
КонецПроцедуры

#КонецОбласти

#Область СхемаЗапроса

&НаСервере
Функция СхемаЗапроса_ПолучитьКурсорСЗ()
	
	Возврат СхемаЗапроса_КурсорСЗ(ЭтотОбъект.СхемаЗапросаВХ, ЭтотОбъект.ПараметрСтруктураСтроки);
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_КурсорСЗ(Знач АдресВХ, Знач СтруктураСтроки)
	
	Результат = Новый Структура();
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	ЗапросПакета 	= СхемаЗапроса.ПакетЗапросов[СтруктураСтроки.ИндексЗапроса]; 
	КурсорОператора = СхемаЗапроса_КурсорОператора(ЗапросПакета, СтруктураСтроки.ПозицияОператора);
	Результат.Вставить(""СхемаЗапроса"", 	СхемаЗапроса);
	Результат.Вставить(""ЗапросПакета"", 	ЗапросПакета);
	Результат.Вставить(""Запрос"", 		КурсорОператора.Запрос);
	Результат.Вставить(""Оператор"", 		КурсорОператора.Оператор);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_КурсорОператора(Знач Запрос, Знач ПозицияОператора, ТекПозицияОператора = 0)
	
	Для Каждого Оператор Из Запрос.Операторы Цикл
		Если ТекПозицияОператора = ПозицияОператора Тогда
			Возврат Новый Структура(""Запрос, Оператор"", Запрос, Оператор);
		КонецЕсли;
		ТекПозицияОператора = ТекПозицияОператора + 1;
		Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
			Если ТипЗнч(ИсточникСхемыЗапроса.Источник) = Тип(""ВложенныйЗапросСхемыЗапроса"") Тогда
				Оператор = СхемаЗапроса_КурсорОператора(ИсточникСхемыЗапроса.Источник.Запрос, ПозицияОператора, ТекПозицияОператора);
				Если Оператор <> Неопределено Тогда
					Возврат Оператор;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СхемаЗапроса_ПолучитьСтруктуруКолонки(Знач Запрос, Знач ИскомоеВыражение)
	
	Резт = Новый Структура(""ТипЗначения,Псевдоним"", Неопределено, ""Поле1"");
	
	ИндексОператора = ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора;
	
	Итер = Запрос.Колонки.Количество() - 1;
	Пока Итер >= 0 Цикл
		Колонка = Запрос.Колонки[Итер];
		Если ТипЗнч(Колонка) <> Тип(""КолонкаВложеннаяТаблицаСхемыЗапроса"") Тогда
			Если ИскомоеВыражение = Колонка.Поля[ИндексОператора] Тогда
				ЗаполнитьЗначенияСвойств(Резт, Колонка);
				Возврат Резт;
			КонецЕсли;
		Иначе     
			ИтерВТ = Колонка.Колонки.Количество() - 1;
			Пока ИтерВТ >= 0 Цикл
				КолонкаВТ = Колонка.Колонки[ИтерВТ];
				Если ИскомоеВыражение = КолонкаВТ.Поля[ИндексОператора] Тогда
					ЗаполнитьЗначенияСвойств(Резт, КолонкаВТ);
					Возврат Резт;
				КонецЕсли;
				ИтерВТ = ИтерВТ - 1;
			КонецЦикла;
		КонецЕсли;
		Итер = Итер - 1;
	КонецЦикла;
	
	Возврат Резт;
	
КонецФункции

#КонецОбласти

#Область Выражения

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ПрименитьФункцию(Знач Выражение, Знач ИмяФункции) Экспорт
	
	Выражение 	= Выражения_ОчиститьФункцию(Выражение);
	ИмяФункции 	= СтрЗаменить(ИмяФункции, ""ПрименитьФункцию"", """");
	
	Если ИмяФункции = ""КОЛИЧЕСТВО_РАЗЛИЧНЫЕ"" Тогда
		Выражение = ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "" + Выражение + "")"";
	Иначе
		Выражение = ИмяФункции + ""("" + Выражение + "")""; 
	КонецЕсли;
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ОчиститьФункцию(Знач Выражение) Экспорт
	
	Поз1 = 0;
	Поз2 = 0;
	
	Если СтрНачинаетсяС(Выражение, ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "") Тогда
		Поз1 = СтрДлина(""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "");			
	Иначе
		СтрокаФункций = ""СУММА,МИНИМУМ,МАКСИМУМ,СРЕДНЕЕ,КОЛИЧЕСТВО"";
		МассивФункций = СтрРазделить(СтрокаФункций, "","");
		Для Каждого Элемент Из МассивФункций Цикл
			Если СтрНачинаетсяС(Выражение, Элемент + ""("") Тогда
				Поз1 = СтрДлина(Элемент + ""("");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Поз2 = СтрНайти(Выражение, "")"", НаправлениеПоиска.СКонца);
	
	Если Поз1 > 0 И Поз2 > 0 Тогда
		Выражение = Сред(Выражение, Поз1 + 1, Поз2 - Поз1 - 1);
	КонецЕсли;
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ПрименитьEСТЬNULL(Знач Выражение, Знач ТипЗначения) Экспорт
	
	ПустоеЗначение = ПустоеЗначениеЕСТЬNULL(ТипЗначения);	
	Выражение = ""ЕСТЬNULL("" + Выражение + "", "" + ПустоеЗначение + "")"";
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ОчиститьЕСТЬNULL(Знач Выражение) Экспорт
	
	Если Не СтрНачинаетсяС(Выражение, ""ЕСТЬNULL("") Тогда
		Возврат Выражение;
	КонецЕсли;
	
	Поз1 = СтрДлина(""ЕСТЬNULL("");
	Поз2 = СтрНайти(Выражение, "","", НаправлениеПоиска.СНачала);
	
	Если Поз1 > 0 И Поз2 > 0 Тогда
		Выражение = Сред(Выражение, Поз1 + 1, Поз2 - Поз1 - 1);
	КонецЕсли;
	
	Возврат Выражение;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПустоеЗначениеЕСТЬNULL(Знач ТипЗначения)
	
	Если ТипЗначения = Неопределено
		Или ТипЗначения.Типы().Количество() = 0
		Или ТипЗначения.Типы().Количество() > 1 Тогда
		Возврат ""НЕОПРЕДЕЛЕНО"";
	КонецЕсли;
	
	Тип = ТипЗначения.Типы()[0];
	
	ОМ = Метаданные.НайтиПоТипу(Тип);
	
	Если ОМ <> Неопределено Тогда 
		ПолноеИмя = ОМ.ПолноеИмя();
		Значение = ""ЗНАЧЕНИЕ("" + ПолноеИмя + "".ПустаяСсылка)"";
		Возврат Значение;
	КонецЕсли;
	
	Если Тип = Тип(""Число"") Тогда
		Возврат ""0"";
	ИначеЕсли Тип = Тип(""Строка"") Тогда
		Возврат """""""""""";
	ИначеЕсли Тип = Тип(""Дата"") Тогда
		Возврат ""ДАТАВРЕМЯ(1,1,1)"";
	КонецЕсли;
	
	Возврат ""НЕОПРЕДЕЛЕНО"";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСКонца(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."", НаправлениеПоиска.СКонца);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."", НаправлениеПоиска.СНачала);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПередТочкойСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."");
	Значение = Лев(Текст, Поз - 1);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КорректныйПсевдоним(Коллекция, Знач Псевдоним) Экспорт
	
	Найдено = Ложь;
	Для Каждого Строка Из Коллекция Цикл
		Если Псевдоним = Строка.Псевдоним Тогда
			Найдено = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Если Найдено Тогда
		Псевдоним = ИнкрементПсевдонима(Псевдоним);
		Псевдоним = КорректныйПсевдоним(Коллекция, Псевдоним);
	КонецЕсли;
	
	Возврат Псевдоним;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИнкрементПсевдонима(Знач Псевдоним)
	
	Окончание = Прав(Псевдоним, 1);
	Если СтрНайти(""0123456789"", Окончание) > 0 Тогда
		Значение 	= Число(Окончание);
		Псевдоним 	= Лев(Псевдоним, СтрДлина(Псевдоним) - 1);
	Иначе
		Значение 	= 0;
	КонецЕсли;
	
	Возврат Псевдоним + Строка(Значение + 1);
	 	 
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеПеречисления(Знач Текст) Экспорт
	
	МассивСтрок = СтрРазделить(Текст, "" "");
	Для Каждого Строка Из МассивСтрок Цикл
		Строка = ВРег(Строка);
	КонецЦикла;
	
	Результат = СтрСоединить(МассивСтрок);
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСтрокуКоллекции(Знач Коллекция, Знач Значение, Знач ИмяКолонки)
	
	Для Каждого Строка Из Коллекция Цикл
		Если Строка[ИмяКолонки] = Значение Тогда
			Возврат Строка;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
			
КонецФункции

#КонецОбласти


",
{4,12,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",53424881-bc0c-4dd2-ad50-12ac0f1053a7}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ОписаниеКоллекций",
{1,1,
{"ru","Описание коллекций"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ИмяМнч",
{1,1,
{"ru","Имя мнч"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяЕдч",
{1,1,
{"ru","Имя едч"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ЕстьТЧ",
{1,1,
{"ru","Есть ТЧ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ЕстьСТЧ",
{1,1,
{"ru","Есть СТЧ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{3},0,"ИсточникиДоступныеПоля",
{1,1,
{"ru","Источники доступные поля"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,13,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ТипСтроки",
{1,1,
{"ru","Тип строки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ТипИсточника",
{1,1,
{"ru","Тип источника"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяТаблицы",
{1,1,
{"ru","Имя таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Псевдоним",
{1,1,
{"ru","Псевдоним"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ТипТаблицы",
{1,1,
{"ru","Тип таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ТипЗначения",
{1,1,
{"ru","Тип значения"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"ЭтоВТ",
{1,1,
{"ru","Это ВТ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,10,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,11,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,12,0,"Идентификатор",
{1,1,
{"ru","Идентификатор"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,13,0,"САФ",
{1,1,
{"ru","САФ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{4},0,"ПеречислениеКартинки",
{1,1,
{"ru","Перечисление картинки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ПеречислениеТипИсточника",
{1,1,
{"ru","Перечисление тип источника"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ПеречислениеТипСтроки",
{1,1,
{"ru","Перечисление тип строки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ПеречислениеТипТаблицы",
{1,1,
{"ru","Перечисление тип таблицы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"СхемаЗапросаВХ",
{1,1,
{"ru","Схема запроса ВХ"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"ВыражениеДокумент",
{1,1,
{"ru","Выражение документ"}
},
{"Pattern",
{"#",ebf766b1-f32c-11d3-9851-008048da1252}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"ПараметрСтруктураСтроки",
{1,1,
{"ru","Параметр структура строки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"ТаблицаФормы",
{1,1,
{"ru","Таблица формы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{16},0,"СтруктураВыражения",
{1,1,
{"ru","Структура выражения"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,6,
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"РазвернутьДоступныеПоля",
{1,1,
{"ru","Развернуть доступные поля"}
},
{1,1,
{"ru","Развернуть доступные поля (DblClick)"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"РазвернутьДоступныеПоля",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьТекст",
{1,1,
{"ru","Очистить текст"}
},
{1,1,
{"ru","Очистить текст"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОчиститьТекст",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОК",
{1,1,
{"ru","ОК"}
},
{1,1,
{"ru","ОК"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОК",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Отмена",
{1,1,
{"ru","Отмена"}
},
{1,1,
{"ru","Отмена"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"Отмена",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьВыделенныйТекст",
{1,1,
{"ru","Очистить выделенный текст"}
},
{1,1,
{"ru","Очистить выделенный текст"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОчиститьВыделенныйТекст",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьБезПроверки",
{1,1,
{"ru","Сохранить без проверки"}
},
{1,1,
{"ru","Сохранить без проверки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СохранитьБезПроверки",3,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}