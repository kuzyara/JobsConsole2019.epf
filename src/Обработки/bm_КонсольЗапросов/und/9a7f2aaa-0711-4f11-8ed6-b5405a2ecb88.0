{4,
{50,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Схема запроса"}
},0,0,1,1,1,0,1,0,
{3,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",52dbb775-1631-4fd5-8c55-1615b5881dac,"ПередЗакрытием",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,52dbb775-1631-4fd5-8c55-1615b5881dac,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{607,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСхемаЗапросаОК",
{1,0},1,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{608,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСхемаЗапросаОКРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{609,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаСхемаЗапросаОтмена",
{1,0},1,
{23,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{610,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСхемаЗапросаОтменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{703,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаВыполнитьТекущийЗапрос",
{1,1,
{"ru","Выполнить по тз"}
},1,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{704,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаВыполнитьТекущийЗапросРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{194,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ГруппаФорма",
{1,1,
{"ru","Группа форма"}
},
{1,1,
{"ru","Группа форма"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,1,
{1,526c501f-ed3f-4db4-8731-fd0324707501,"ГруппаФормаПриСменеСтраницы",1,0,526c501f-ed3f-4db4-8731-fd0324707501,0,1},2,0,1},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{198,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаСхемаЗапроса",
{1,1,
{"ru","Схема запроса"}
},
{1,1,
{"ru","Группа схема запроса"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},1,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаДеревоСхемыЗапроса",
{1,1,
{"ru","Группа дерево схемы запроса"}
},
{1,1,
{"ru","Группа дерево схемы запроса"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ДеревоСхемыЗапроса",0,0,1,
{1,0},
{1,0},
{1,
{2}
},0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,2,0,1,1,
{1,
{1}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{8,1282f000-23b6-4887-87f4-9e8e79db3d32,"ДеревоСхемыЗапросаВыбор",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ДеревоСхемыЗапросаПередНачаломДобавления",2ccfdec5-583d-4eca-8319-e55de492665a,"ДеревоСхемыЗапросаПередУдалением",60edb81d-887b-478e-94ee-7fef2b13393d,"ДеревоСхемыЗапросаПриАктивизацииСтроки",8ad48496-8d0b-4f6c-ae48-99d95227884b,"",ab930362-ff94-4dcb-ad16-188805d23e3c,"ДеревоСхемыЗапросаПередНачаломИзменения",b3c10170-c5ff-4cba-b537-679e1c872b45,"",de65638d-a806-4a76-bc10-f62bbc86e0e7,"",1,0,1282f000-23b6-4887-87f4-9e8e79db3d32,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,2ccfdec5-583d-4eca-8319-e55de492665a,0,1,60edb81d-887b-478e-94ee-7fef2b13393d,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1,b3c10170-c5ff-4cba-b537-679e1c872b45,0,1,de65638d-a806-4a76-bc10-f62bbc86e0e7,0,1},
{15,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,2bbe4e12-06d2-409b-a972-eea585125d83,37740564-9e86-44a0-bea9-3f485a5a3f91,51c99108-107c-43e1-8918-e48835bf2495,58b2a785-23f6-4b0e-a324-9a1323285595,7b683784-b474-441a-ba63-3d757bd0ffd4,88078230-1f6b-415f-99e4-ad2ff73810cf,8af6ebff-cd02-4bfe-a984-44a292623708,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,e7216412-03ac-4a81-99c2-1d7c28e88e31,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{22,
{98,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоСхемыЗапросаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{690,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДеревоСхемыЗапросаКонтекстноеМенюСкопироватьСтроку",
{1,0},1,
{24,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{691,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаКонтекстноеМенюСкопироватьСтрокуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},1,
{22,
{99,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоСхемыЗапросаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{143,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ДеревоСхемыЗапросаГруппаДобавить",
{1,1,
{"ru","Дерево схемы запроса группа добавить"}
},
{1,1,
{"ru","Дерево схемы запроса группа добавить"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{145,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДобавитьЗапросВыбора",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADwSURBVDhPY6AU
MIKIhoaGLCAlBmKTAoD6GlAZJACYHiYwjwJAsQGwMJgKpF6D2CQALaC+MDAL5h9S
AEwPxV5ggdJYgVo9AxuQ8gNiEI2Cj/1fZwOUdyEYBtv+T4/4wPBKDajwP5D7H0gA
Xf2fkZGBEcj+rwNzwWtc4QC0ZRmQugTUyA4RAYP/QgzSV443PrlGMAxuNTLcAlIg
F4JcAAN/9BmcDoIYxAZiCxC/gTDBBi2TYFR6C+IQZQDQFe+BFMiLIM1/gBhkIBjA
wuAVrjCAgb///zBtZJjwmpdB+KkrY2IMVJg0AIo2IFaEcoGAgQEAOelK7kVrS/8A
AAAASUVORK5CYII=}
},0,""},1,
{"Pattern"},"",2,0,1,
{12,
{146,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьЗапросВыбораРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{149,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДобавитьОператор",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEISURBVDhPY6AU
MIKIhoaGLCAlBmKTAoD6GlAZJACYHiYwjwJAsQGwMJgKpF6D2CQALaC+MDAL5h9s
gJVllSKUiQJgeojxwmmgIbVAzAblowBiDOAE4kYgPgs0xAYsggRYoLQoLm+0tf7n
+P+fERRWOgwM/w+qKM8/5+f/dA8Dwx9liAogwKUZBIC2/gHi/0j4HxA/cXaeshIk
T4wXmKE0DIBcI/b4MZc80CAOvAYAFYA0/4PwwOA/EB8GYtOoqEc7fv8J+0HIBSB5
kCYQfg7E8UBsD9R4EUiDASwQX2ELh2/fbrJO6Ff7r6j49aS3z7MDfHzggKsHhhpE
ASEA9AIrEOtCuVgAAwMAgPxUh1MMwk0AAAAASUVORK5CYII=}
},0,""},1,
{"Pattern"},"",2,0,1,
{12,
{150,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьОператорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{147,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДобавитьЗапросУничтожения",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{148,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьЗапросУничтоженияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{151,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДобавитьВложенныйЗапрос",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{152,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьВложенныйЗапросРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,1,
{12,
{144,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаГруппаДобавитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{188,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ДеревоСхемыЗапросаГруппаРазвернуть",
{1,1,
{"ru","Дерево схемы запроса группа развернуть"}
},
{1,1,
{"ru","Дерево схемы запроса группа развернуть"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{192,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"СвернутьСтроки",
{1,0},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{193,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвернутьСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{190,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"РазвернутьСтроки",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{191,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РазвернутьСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,1,
{12,
{189,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаГруппаРазвернутьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{159,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ДеревоСхемыЗапросаГруппаПереместить",
{1,1,
{"ru","Дерево схемы запроса группа переместить"}
},
{1,1,
{"ru","Дерево схемы запроса группа переместить"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{161,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ПереместитьВверх",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{162,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПереместитьВверхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,1,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{163,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ПереместитьВниз",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{164,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПереместитьВнизРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,1,0,0,0,0,0,0,1,0},1,0,1,
{12,
{160,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаГруппаПереместитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{155,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НастройкаОператора",
{1,1,
{"ru","Открыть"}
},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEISURBVDhPY6AU
MIKIhoaGLCAlBmKTAoD6GlAZJACYHiYwjwJAsQGwMJgKpF6D2CQALaC+MDAL5h9s
gJVllSKUiQJgeojxwmmgIbVAzAblowBiDOAE4kYgPgs0xAYsggRYoLQoLm+0tf7n
+P+fERRWOgwM/w+qKM8/5+f/dA8Dwx9liAogwKUZBIC2/gHi/0j4HxA/cXaeshIk
T4wXmKE0DIBcI/b4MZc80CAOvAYAFYA0/4PwwOA/EB8GYtOoqEc7fv8J+0HIBSB5
kCYQfg7E8UBsD9R4EUiDASwQX2ELh2/fbrJO6Ff7r6j49aS3z7MDfHzggKsHhhpE
ASEA9AIrEOtCuVgAAwMAgPxUh1MMwk0AAAAASUVORK5CYII=}
},0,""},1,
{"Pattern"},"",2,0,1,
{12,
{156,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкаОператораРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{125,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДеревоСхемыЗапросаИмяТаблицы",1,0,
{1,0},
{1,0},
{2,
{2},
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{126,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоСхемыЗапросаИмяТаблицыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{127,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаИмяТаблицыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{128,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДеревоСхемыЗапросаПсевдоним",1,0,
{1,0},
{1,0},
{2,
{2},
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{129,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоСхемыЗапросаПсевдонимКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{130,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаПсевдонимРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{100,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{102,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоСхемыЗапросаСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{103,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{97,0},0,3,3,0},1,
{5,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоСхемыЗапросаСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{105,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоСхемыЗапросаСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{106,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{97,1},0,3,3,0},1,
{5,
{107,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоСхемыЗапросаУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{108,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоСхемыЗапросаУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{109,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоСхемыЗапросаУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{97,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДеревоСхемыЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{167,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОтображаемыйТекстЗапроса",
{1,1,
{"ru","Текст запроса"}
},
{1,1,
{"ru","Группа отображаемый текст запроса"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{182,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаОтображаемыйТекстЗапросаКоманднаяПанель",
{1,1,
{"ru","Группа отображаемый текст запроса командная панель"}
},
{1,1,
{"ru","Группа отображаемый текст запроса командная панель"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{178,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ИзменитьТекстЗапроса",
{1,1,
{"ru","Изменить"}
},1,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{179,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзменитьТекстЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{184,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ОбновитьТекстЗапроса",
{1,0},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{185,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОбновитьТекстЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,1,
{12,
{183,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтображаемыйТекстЗапросаКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{169,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},7,"ОтображаемыйТекстЗапроса",0,0,
{1,0},
{1,0},
{1,
{22}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,2,513,
{-31},"Consolas",1,100},1,0,0,1,0,
{0,1,0}
},
{0,1,0},1,
{22,
{170,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ОтображаемыйТекстЗапросаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{171,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОтображаемыйТекстЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},1,0,1,
{12,
{168,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтображаемыйТекстЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{199,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСхемаЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{196,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаОператор",
{1,1,
{"ru","Оператор"}
},
{1,1,
{"ru","Группа оператор"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{711,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОператорУправление",
{1,1,
{"ru","Группа оператор управление"}
},
{1,1,
{"ru","Группа оператор управление"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},0,1,0,1,
{12,
{712,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОператорУправлениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{537,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаОператорКоманднаяПанель",
{1,1,
{"ru","Группа оператор командная панель"}
},
{1,1,
{"ru","Группа оператор командная панель"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},0,1,0,1,
{12,
{538,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОператорКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{539,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОператорИсточникиСвойства",
{1,1,
{"ru","Группа оператор источники свойства"}
},
{1,1,
{"ru","Группа оператор источники свойства"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1,
{3,4,
{0}
},0,2,0,3,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{200,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаИсточникиДоступныеПоля",
{1,1,
{"ru","Группа источники доступные поля"}
},
{1,1,
{"ru","Группа источники доступные поля"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0,0},3,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{207,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ИсточникиДоступныеПоля",0,0,1,
{1,0},
{1,0},
{1,
{37}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{1}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{6,0d644ff6-443b-4390-86fa-7f9105e42711,"ИсточникиДоступныеПоляПроверкаПеретаскивания",1282f000-23b6-4887-87f4-9e8e79db3d32,"ИсточникиДоступныеПоляВыбор",2ccfdec5-583d-4eca-8319-e55de492665a,"ИсточникиДоступныеПоляПередУдалением",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ИсточникиДоступныеПоляНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ИсточникиДоступныеПоляПеретаскивание",ab930362-ff94-4dcb-ad16-188805d23e3c,"ИсточникиДоступныеПоляПередНачаломИзменения",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,1282f000-23b6-4887-87f4-9e8e79db3d32,0,1,2ccfdec5-583d-4eca-8319-e55de492665a,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1},
{19,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,2bbe4e12-06d2-409b-a972-eea585125d83,37740564-9e86-44a0-bea9-3f485a5a3f91,44ad3ec9-f3c2-4913-9224-5f9fb6418743,51c99108-107c-43e1-8918-e48835bf2495,58b2a785-23f6-4b0e-a324-9a1323285595,714d44cc-63da-4431-b33a-428e398d2a08,7b683784-b474-441a-ba63-3d757bd0ffd4,88078230-1f6b-415f-99e4-ad2ff73810cf,8af6ebff-cd02-4bfe-a984-44a292623708,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,c0519548-2a9a-44de-a25e-faf01e089d4d,d96b0c03-b209-4d01-a3fc-17a14f873b64,e7216412-03ac-4a81-99c2-1d7c28e88e31,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{22,
{208,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{554,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ПереименоватьТаблицу",
{1,1,
{"ru","Переименовать"}
},1,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{555,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПереименоватьТаблицуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{556,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ИзменитьТаблицу",
{1,0},1,
{207,b41f5bbc-ba5d-4888-8cd1-db246a371418},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{557,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзменитьТаблицуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{558,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"УдалитьТаблицу",
{1,0},1,
{207,8d772f97-c0ef-47c0-9cb0-efea28c61341},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{559,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УдалитьТаблицуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{560,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ЗаменитьТаблицу",
{1,1,
{"ru","Заменить"}
},1,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{561,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаменитьТаблицуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},1,
{22,
{209,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ИсточникиДоступныеПоляКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{223,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"РазвернутьДоступныеПоля",
{1,0},1,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGsSURBVDhPY1yw
YMF/BjyAkfHfLwHOp2b+YbUXoUIogImZ6fchKBsrYGL4Ox+XZhBg4mD5VMjI8P8X
lI8CmBj/PuFk+1AO5WIFTKFRxeeYmP6sgvKRwX9W5u+FIZGlH6F8rIAJRDAy/K1i
ZPj3GSwCBSxMv9ZIC1xcC+XiBGADYuIyHgMDqw8sAgRAwz6wMn8rsfOZjTeAQYAR
SjOsWDKJ++df7ov//zMrMTP9yoiNS5u1aNEcT4b/jFWMjH8L//5jO5uQkIBhINgF
IBARk/eVjflbNVDxcWDMLASJ/fvHwvLvP7MNUPNRYIBOWrJopjBYMRKAGwACQtyP
VgtyPvaNisn+CeJzsb5/A5ZgYGADGpTz9z/rtUUL56QsWTyDDSqO8AI2sGlVo8G7
b/LnoVw4AEb7WSam33lAlx1HcQGx4D8DozFQ8yGgt+YRMgBnLABd8RIofQC/AYz/
/0BZSOD/L2CUz2Jl+aYbF5+ykCQvADWeZWb84xgfn5QODOh3IDEiDfj/npnxdzYL
0w+L2PjUY1BBMMBrADCQfgLTxXJgwjIAapwWHZuF5iUGBgCzQpVnBDeV8wAAAABJ
RU5ErkJggg==}
},0,""},1,
{"Pattern"},"",2,0,1,
{12,
{224,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РазвернутьДоступныеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{567,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ИсточникиДоступныеПоляГруппаФункция",
{1,1,
{"ru","Источники доступные поля группа функция"}
},
{1,1,
{"ru","Источники доступные поля группа функция"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{569,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ИсточникиДоступныеПоляПодменюФункция",
{1,1,
{"ru","Функция"}
},
{1,1,
{"ru","Функция"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADPSURBVDhPtZI/
DgFREId3FehFIUGBxJ+GRkhoKN2AUoFbCIdxA87AHbgBpYJmfe9ldhMb4yU2vuTL
L/vyMpmZfV5SfMk3gvVtS4wx/cGLv8mNSEtKMk4dB9jFNjaxiiUsYIRW4CFpOulg
C2tYxiF+hxF2GOBUjlS0DjKST0kVbYl7YoJnvKMpGC7xwBKXpEXrwFw0mLnNEhtY
wSLmMcI1wgLjS5xjhDbCkehhn3ZP9lBB6yArGf5OFdcIPxcIl5i4A+c70AqscIZX
+/U/PO8FoX8m4S2u5AQAAAAASUVORK5CYII=}
},0,""},
{0},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},0,1,0,1,
{12,
{570,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляПодменюФункцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{571,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыраженияОчиститьФункцию",
{1,0},1,
{20,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{572,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыраженияОчиститьФункциюРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,1,
{12,
{568,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляГруппаФункцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{692,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ОператорТекстЗапроса",
{1,0},1,
{25,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{693,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОператорТекстЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{220,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИсточникиДоступныеПоляЗначение",1,0,
{1,0},
{1,0},
{2,
{37},
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{221,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{222,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{210,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{211,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{212,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{213,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{207,0},0,3,3,0},1,
{5,
{214,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ИсточникиДоступныеПоляСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{215,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{216,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{207,1},0,3,3,0},1,
{5,
{217,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ИсточникиДоступныеПоляУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{218,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИсточникиДоступныеПоляУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{219,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсточникиДоступныеПоляУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{207,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{700,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияНеоднозначности",
{1,1,
{"ru","Декорация неоднозначности"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{701,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияНеоднозначностиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,1,
{"ru","Декорация неоднозначности"}
},0},0,1,
{12,
{702,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияНеоднозначностиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{697,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ДекорацияТекстИсключения",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{1,d710ea07-5c96-4c43-ab6e-e138d3653780,"ДекорацияОператорИсключениеШапкаОбработкаНавигационнойСсылки",1,0,d710ea07-5c96-4c43-ab6e-e138d3653780,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{22,
{698,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДекорацияТекстИсключенияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},0,2,
{1,
{1,0},0},0,1,
{12,
{699,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДекорацияТекстИсключенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},1,0,1,
{12,
{201,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИсточникиДоступныеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{202,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ГруппаСвойства",
{1,1,
{"ru","Группа свойства"}
},
{1,1,
{"ru","Группа свойства"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,1,
{1,526c501f-ed3f-4db4-8731-fd0324707501,"ГруппаСвойстваПриСменеСтраницы",1,0,526c501f-ed3f-4db4-8731-fd0324707501,0,1},2,0,1},9,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{225,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаВыбираемыеПоля",
{1,1,
{"ru","Выбираемые поля"}
},
{1,1,
{"ru","Группа выбираемые поля"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{227,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВыбираемыеПоляВыборка",
{1,1,
{"ru","Группа выбираемые поля выборка"}
},
{1,1,
{"ru","Группа выбираемые поля выборка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1,
{3,4,
{0}
},0,2,0,3,0},6,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{229,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваЗапросаВыбиратьРазрешенные",1,0,
{1,1,
{"ru","Разрешенные"}
},
{1,0},
{1,
{39}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{230,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваЗапросаВыбиратьРазрешенныеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{231,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваЗапросаВыбиратьРазрешенныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{232,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваОператораВыбиратьРазличные",1,0,
{1,1,
{"ru","Различные"}
},
{1,0},
{1,
{41}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{233,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваОператораВыбиратьРазличныеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{234,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваОператораВыбиратьРазличныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{713,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваОператораВыбиратьПервые",2,0,
{1,1,
{"ru","Первые"}
},
{1,0},
{1,
{17}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{714,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваОператораВыбиратьПервыеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{715,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваОператораВыбиратьПервыеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{238,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"СвойстваОператораКоличествоПолучаемыхЗаписей",0,0,
{1,1,
{"ru","Первые"}
},
{1,0},
{1,
{42}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{239,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваОператораКоличествоПолучаемыхЗаписейКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{240,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваОператораКоличествоПолучаемыхЗаписейРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{548,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"СвойстваЗапросаТаблицаДляПомещения",1,0,
{1,1,
{"ru","Поместить"}
},
{1,0},
{1,
{47}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{549,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваЗапросаТаблицаДляПомещенияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{550,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваЗапросаТаблицаДляПомещенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{654,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваОператораСворачивать",1,0,
{1,1,
{"ru","Сворачивать"}
},
{1,0},
{1,
{51}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{655,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваОператораСворачиватьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{656,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваОператораСворачиватьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},1,0,1,
{12,
{228,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыбираемыеПоляВыборкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{562,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаВыбираемыеПоляУправление",
{1,1,
{"ru","Группа выбираемые поля управление"}
},
{1,1,
{"ru","Группа выбираемые поля управление"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{564,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"РежимЗамены",1,0,
{1,0},
{1,1,
{"ru","Не добавлять, а заменять выбираемые поля"}
},
{1,
{48}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{0,1,0},1,
{22,
{565,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"РежимЗаменыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{566,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РежимЗаменыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},1,0,1,
{12,
{563,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыбираемыеПоляУправлениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{241,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияВыбираемыеПоля",0,0,1,
{1,0},
{1,0},
{1,
{29}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{7}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{7,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияВыбираемыеПоляПроверкаПеретаскивания",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ТекущаяКоллекцияВыбираемыеПоляПередНачаломДобавления",2ccfdec5-583d-4eca-8319-e55de492665a,"ТекущаяКоллекцияВыбираемыеПоляПередУдалением",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияВыбираемыеПоляНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияВыбираемыеПоляПеретаскивание",ab930362-ff94-4dcb-ad16-188805d23e3c,"ТекущаяКоллекцияВыбираемыеПоляПередНачаломИзменения",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияВыбираемыеПоляПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,2ccfdec5-583d-4eca-8319-e55de492665a,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{3,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc},1,
{22,
{242,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыбираемыеПоляКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{243,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияВыбираемыеПоляКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{613,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТекущаяКоллекцияВыбираемыеПоляКнопкаУдалить",
{1,0},1,
{241,8d772f97-c0ef-47c0-9cb0-efea28c61341},
{0},1,0,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,08a45a70-c221-4339-b3b1-9f11cb22147d},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{614,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляКнопкаУдалитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,3,1,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{577,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"ТекущаяКоллекцияВыбираемыеПоляГруппаЕСТЬNULL",
{1,1,
{"ru","Текущая коллекция выбираемые поля группа ЕСТЬNULL"}
},
{1,1,
{"ru","Текущая коллекция выбираемые поля группа ЕСТЬNULL"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{573,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыраженияПрименитьEСТЬNULL",
{1,1,
{"ru","ЕСТЬNULL"}
},1,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{574,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыраженияПрименитьEСТЬNULLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{575,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ВыраженияОчиститьЕСТЬNULL",
{1,0},1,
{21,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{576,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыраженияОчиститьЕСТЬNULLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,1,
{12,
{578,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляГруппаЕСТЬNULLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,0,0,3,3,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{257,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияВыбираемыеПоляВыражение",1,0,
{1,0},
{1,0},
{2,
{29},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{258,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыбираемыеПоляВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{259,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{260,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияВыбираемыеПоляПсевдоним",1,0,
{1,0},
{1,0},
{2,
{29},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияВыбираемыеПоляПсевдонимПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{261,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыбираемыеПоляПсевдонимКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{262,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляПсевдонимРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{244,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{245,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{246,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыбираемыеПоляСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{247,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{241,0},0,3,3,0},1,
{5,
{248,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияВыбираемыеПоляСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{249,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыбираемыеПоляСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{250,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{241,1},0,3,3,0},1,
{5,
{251,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияВыбираемыеПоляУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{252,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыбираемыеПоляУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{253,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыбираемыеПоляУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{241,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{226,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыбираемыеПоляРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{273,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаСоединения",
{1,1,
{"ru","Соединения"}
},
{1,1,
{"ru","Группа соединения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{275,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияСоединения",0,0,1,
{1,0},
{1,0},
{1,
{31}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{5,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияСоединенияПроверкаПеретаскивания",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияСоединенияНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияСоединенияПеретаскивание",b3c10170-c5ff-4cba-b537-679e1c872b45,"ТекущаяКоллекцияСоединенияПриНачалеРедактирования",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияСоединенияПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,b3c10170-c5ff-4cba-b537-679e1c872b45,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{3,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc},1,
{22,
{276,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{277,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияСоединенияКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{307,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияСоединенияГруппаВертикально",
{1,1,
{"ru","Текущая коллекция соединения группа вертикально"}
},
{1,1,
{"ru","Текущая коллекция соединения группа вертикально"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,1,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{309,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияСоединенияГруппаГоризонтально",
{1,1,
{"ru","Текущая коллекция соединения группа горизонтально"}
},
{1,1,
{"ru","Текущая коллекция соединения группа горизонтально"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,0,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{291,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияСоединенияИсточник",1,0,
{1,0},
{1,0},
{2,
{31},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{292,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияИсточникКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{293,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияИсточникРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{294,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияСоединенияПриемник",1,0,
{1,0},
{1,0},
{2,
{31},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{295,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияПриемникКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{296,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияПриемникРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{297,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияСоединенияТипСоединения",1,0,
{1,0},
{1,0},
{2,
{31},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{298,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияТипСоединенияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{299,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияТипСоединенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},1,0,1,
{12,
{310,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияГруппаГоризонтальноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{300,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияСоединенияВыражение",1,0,
{1,0},
{1,0},
{2,
{31},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{301,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{302,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},1,0,1,
{12,
{308,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияГруппаВертикальноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{278,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{279,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{280,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{281,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{275,0},0,3,3,0},1,
{5,
{282,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияСоединенияСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{283,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{284,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{275,1},0,3,3,0},1,
{5,
{285,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияСоединенияУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{286,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияСоединенияУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{287,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияСоединенияУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{275,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{274,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСоединенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{311,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаГруппировки",
{1,1,
{"ru","Группировки"}
},
{1,1,
{"ru","Группа группировки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{579,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа1",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0,
{3,4,
{0}
},0,2,0,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{581,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа2",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{313,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияГруппировки",0,0,1,
{1,0},
{1,0},
{1,
{33}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{7,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияГруппировкиПроверкаПеретаскивания",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ТекущаяКоллекцияГруппировкиПередНачаломДобавления",2ccfdec5-583d-4eca-8319-e55de492665a,"ТекущаяКоллекцияГруппировкиПередУдалением",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияГруппировкиНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияГруппировкиПеретаскивание",de65638d-a806-4a76-bc10-f62bbc86e0e7,"ТекущаяКоллекцияГруппировкиПослеУдаления",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияГруппировкиПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,2ccfdec5-583d-4eca-8319-e55de492665a,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,de65638d-a806-4a76-bc10-f62bbc86e0e7,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{3,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc},1,
{22,
{314,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияГруппировкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{315,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияГруппировкиКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{329,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияГруппировкиВыражение",1,0,
{1,0},
{1,0},
{2,
{33},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{330,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияГруппировкиВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{331,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияГруппировкиВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{316,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияГруппировкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{317,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияГруппировкиСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{318,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияГруппировкиСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{319,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияГруппировкиСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{313,0},0,3,3,0},1,
{5,
{320,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияГруппировкиСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{321,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияГруппировкиСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{322,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияГруппировкиСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{313,1},0,3,3,0},1,
{5,
{323,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияГруппировкиУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{324,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияГруппировкиУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{325,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияГруппировкиУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{313,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{582,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{583,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа3",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{585,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияПоляСАФ",0,0,0,
{1,0},
{1,0},
{1,
{50}
},0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{2}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,2,13,
{"U"},19,
{"S",""},
{0,1,0},
{3,37740564-9e86-44a0-bea9-3f485a5a3f91,b0016a68-ec64-4e6d-b905-c71fd62efc4c,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{22,
{586,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПоляСАФКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{587,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияПоляСАФКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{598,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияПоляСАФВыражение",1,0,
{1,0},
{1,0},
{2,
{50},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{599,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПоляСАФВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{600,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПоляСАФВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{588,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПоляСАФРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{589,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПоляСАФСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{590,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПоляСАФСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{591,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПоляСАФСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{585,0},0,3,3,0},1,
{5,
{592,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияПоляСАФСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{593,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПоляСАФСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{594,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПоляСАФСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{585,1},0,3,3,0},1,
{5,
{595,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияПоляСАФУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{596,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПоляСАФУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{597,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПоляСАФУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{585,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{584,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа3РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{580,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{312,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаГруппировкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{332,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаОтбор",
{1,1,
{"ru","Отбор"}
},
{1,1,
{"ru","Группа отбор"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{334,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияОтбор",0,0,1,
{1,0},
{1,0},
{1,
{30}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{6,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияОтборПроверкаПеретаскивания",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ТекущаяКоллекцияОтборПередНачаломДобавления",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияОтборНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияОтборПеретаскивание",ab930362-ff94-4dcb-ad16-188805d23e3c,"ТекущаяКоллекцияОтборПередНачаломИзменения",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияОтборПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{3,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc},1,
{22,
{335,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияОтборКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{336,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияОтборКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{350,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияОтборВыражение",1,0,
{1,0},
{1,0},
{2,
{30},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{351,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияОтборВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{352,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияОтборВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{337,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияОтборРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{338,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияОтборСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{339,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияОтборСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{340,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияОтборСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{334,0},0,3,3,0},1,
{5,
{341,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияОтборСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{342,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияОтборСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{343,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияОтборСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{334,1},0,3,3,0},1,
{5,
{344,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияОтборУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{345,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияОтборУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{346,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияОтборУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{334,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{333,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтборРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{353,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаПараметры",
{1,1,
{"ru","Параметры"}
},
{1,1,
{"ru","Группа параметры"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{355,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияПараметры",0,0,1,
{1,0},
{1,0},
{1,
{32}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{7}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{2,60edb81d-887b-478e-94ee-7fef2b13393d,"ТекущаяКоллекцияПараметрыПриАктивизацииСтроки",f228b12f-d892-4925-b338-695617357b32,"ТекущаяКоллекцияПараметрыПриАктивизацииЯчейки",1,0,60edb81d-887b-478e-94ee-7fef2b13393d,0,1,f228b12f-d892-4925-b338-695617357b32,0,1},
{0},1,
{22,
{356,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{357,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияПараметрыКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{371,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияПараметрыИмя",1,0,
{1,0},
{1,0},
{2,
{32},
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{372,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыИмяКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{373,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыИмяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{374,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияПараметрыТипПараметра",1,0,
{1,0},
{1,0},
{2,
{32},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{375,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыТипПараметраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{376,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыТипПараметраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{377,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияПараметрыВыражение",1,0,
{1,0},
{1,0},
{2,
{32},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{378,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{379,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{358,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{359,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{360,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{361,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{355,0},0,3,3,0},1,
{5,
{362,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияПараметрыСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{363,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{364,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{355,1},0,3,3,0},1,
{5,
{365,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияПараметрыУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{366,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПараметрыУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{367,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПараметрыУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{355,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{354,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПараметрыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{380,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаПорядок",
{1,1,
{"ru","Порядок"}
},
{1,1,
{"ru","Группа порядок"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{382,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваЗапросаАвтопорядок",1,0,
{1,0},
{1,0},
{1,
{38}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{383,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваЗапросаАвтопорядокКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{384,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваЗапросаАвтопорядокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{385,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияПорядок",0,0,1,
{1,0},
{1,0},
{1,
{34}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{7,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияПорядокПроверкаПеретаскивания",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ТекущаяКоллекцияПорядокПередНачаломДобавления",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияПорядокНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияПорядокПеретаскивание",ab930362-ff94-4dcb-ad16-188805d23e3c,"ТекущаяКоллекцияПорядокПередНачаломИзменения",b3c10170-c5ff-4cba-b537-679e1c872b45,"",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияПорядокПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1,b3c10170-c5ff-4cba-b537-679e1c872b45,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{3,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc},1,
{22,
{386,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПорядокКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{387,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияПорядокКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{410,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияПорядокКолонкаВыражение",1,0,
{1,0},
{1,0},
{2,
{34},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{411,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПорядокКолонкаВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{412,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокКолонкаВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{407,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияПорядокНаправление",1,0,
{1,0},
{1,0},
{2,
{34},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{408,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПорядокНаправлениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{409,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокНаправлениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{388,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{389,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{390,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПорядокСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{391,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{385,0},0,3,3,0},1,
{5,
{392,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияПорядокСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{393,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПорядокСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{394,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{385,1},0,3,3,0},1,
{5,
{395,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияПорядокУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{396,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияПорядокУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{397,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияПорядокУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{385,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{381,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПорядокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{413,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаИтоги",
{1,1,
{"ru","Итоги"}
},
{1,1,
{"ru","Группа итоги"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},3,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{490,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияКонтрольныеТочкиИтогов",0,0,1,
{1,0},
{1,0},
{1,
{36}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{7,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияКонтрольныеТочкиИтоговПроверкаПеретаскивания",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ТекущаяКоллекцияКонтрольныеТочкиИтоговПередНачаломДобавления",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияКонтрольныеТочкиИтоговПеретаскивание",ab930362-ff94-4dcb-ad16-188805d23e3c,"ТекущаяКоллекцияКонтрольныеТочкиИтоговПередНачаломИзменения",b3c10170-c5ff-4cba-b537-679e1c872b45,"",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияКонтрольныеТочкиИтоговПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1,b3c10170-c5ff-4cba-b537-679e1c872b45,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{3,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc},1,
{22,
{491,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{492,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},5,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{527,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКолонкаВыражение",1,0,
{1,0},
{1,0},
{2,
{36},
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{528,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКолонкаВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{529,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКолонкаВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{515,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки",1,0,
{1,0},
{1,0},
{2,
{36},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{516,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{517,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{518,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами",1,0,
{1,0},
{1,0},
{2,
{36},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{519,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодамиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{520,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодамиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{521,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополнения",1,0,
{1,0},
{1,0},
{2,
{36},
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{522,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополненияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{523,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополненияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{524,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополнения",1,0,
{1,0},
{1,0},
{2,
{36},
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{525,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополненияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{526,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополненияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{493,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{494,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{495,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{496,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{490,0},0,3,3,0},1,
{5,
{497,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияКонтрольныеТочкиИтоговСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{498,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{499,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{490,1},0,3,3,0},1,
{5,
{500,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияКонтрольныеТочкиИтоговУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{501,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияКонтрольныеТочкиИтоговУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{502,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияКонтрольныеТочкиИтоговУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{490,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{415,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваЗапросаОбщиеИтоги",1,0,
{1,0},
{1,0},
{1,
{40}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{416,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваЗапросаОбщиеИтогиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{417,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваЗапросаОбщиеИтогиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{465,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияВыраженияИтогов",0,0,1,
{1,0},
{1,0},
{1,
{35}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{5,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияВыраженияИтоговПроверкаПеретаскивания",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияВыраженияИтоговНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияВыраженияИтоговПеретаскивание",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияВыраженияИтоговПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{5,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,b0016a68-ec64-4e6d-b905-c71fd62efc4c},1,
{22,
{466,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыраженияИтоговКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{467,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияВыраженияИтоговКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{484,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияВыраженияИтоговПсевдоним",1,0,
{1,0},
{1,0},
{2,
{35},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{485,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыраженияИтоговПсевдонимКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{486,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговПсевдонимРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{534,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияВыраженияИтоговФункция",1,0,
{1,0},
{1,0},
{2,
{35},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{535,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыраженияИтоговФункцияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{536,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговФункцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{468,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{469,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{470,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыраженияИтоговСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{471,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{465,0},0,3,3,0},1,
{5,
{472,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияВыраженияИтоговСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{473,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыраженияИтоговСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{474,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{465,1},0,3,3,0},1,
{5,
{475,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияВыраженияИтоговУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{476,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияВыраженияИтоговУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{477,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияВыраженияИтоговУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{465,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{414,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИтогиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{630,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаПрочее",
{1,1,
{"ru","Прочее"}
},
{1,1,
{"ru","Группа прочее"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{657,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ГруппаПрочееСтраницы",
{1,1,
{"ru","Группа прочее страницы"}
},
{1,1,
{"ru","Группа прочее страницы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,1,
{0,1,0},2,0,1},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{661,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаИндекс",
{1,1,
{"ru","Индекс"}
},
{1,1,
{"ru","Группа индекс"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{663,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияИндекс",0,0,1,
{1,0},
{1,0},
{1,
{57}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{4,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияИндексПроверкаПеретаскивания",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияИндексНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияИндексПеретаскивание",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияИндексПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{6,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418},1,
{22,
{664,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияИндексКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{665,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияИндексКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{685,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияИндексКолонкаВыражение",1,0,
{1,0},
{1,0},
{2,
{57},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{686,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияИндексКолонкаВыражениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{687,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияИндексКолонкаВыражениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{666,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияИндексРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{667,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияИндексСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{668,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияИндексСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{669,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияИндексСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{663,0},0,3,3,0},1,
{5,
{670,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияИндексСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{671,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияИндексСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{672,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияИндексСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{663,1},0,3,3,0},1,
{5,
{673,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияИндексУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{674,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияИндексУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{675,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияИндексУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{663,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{662,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИндексРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{659,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаТаблицыДляИзменения",
{1,1,
{"ru","Таблицы для изменения"}
},
{1,1,
{"ru","Группа таблицы для изменения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0,0,
{3,4,
{0}
},
{7,3,0,1,100}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{651,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СвойстваОператораВыбиратьДляИзменения",1,0,
{1,0},
{1,0},
{1,
{55}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СвойстваЗапросаОператораПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{652,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СвойстваОператораВыбиратьДляИзмененияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{653,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвойстваОператораВыбиратьДляИзмененияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{632,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ТекущаяКоллекцияТаблицыДляИзменения",0,0,1,
{1,0},
{1,0},
{1,
{54}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{2}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{4,0d644ff6-443b-4390-86fa-7f9105e42711,"ТекущаяКоллекцияТаблицыДляИзмененияПроверкаПеретаскивания",6d4d6747-a823-4f61-ab31-a426572f2c6c,"ТекущаяКоллекцияТаблицыДляИзмененияНачалоПеретаскивания",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ТекущаяКоллекцияТаблицыДляИзмененияПеретаскивание",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТекущаяКоллекцияТаблицыДляИзмененияПриИзменении",1,0,0d644ff6-443b-4390-86fa-7f9105e42711,0,1,6d4d6747-a823-4f61-ab31-a426572f2c6c,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{6,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418},1,
{22,
{633,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияТаблицыДляИзмененияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{634,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТекущаяКоллекцияТаблицыДляИзмененияКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{648,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТекущаяКоллекцияТаблицыДляИзмененияИмяТаблицы",1,0,
{1,0},
{1,0},
{2,
{54},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{649,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияТаблицыДляИзмененияИмяТаблицыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{650,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияТаблицыДляИзмененияИмяТаблицыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{635,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияТаблицыДляИзмененияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,0,0,1,
{5,
{636,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияТаблицыДляИзмененияСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{637,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияТаблицыДляИзмененияСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{638,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияТаблицыДляИзмененияСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{632,0},0,3,3,0},1,
{5,
{639,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТекущаяКоллекцияТаблицыДляИзмененияСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{640,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияТаблицыДляИзмененияСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{641,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияТаблицыДляИзмененияСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{632,1},0,3,3,0},1,
{5,
{642,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТекущаяКоллекцияТаблицыДляИзмененияУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{643,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТекущаяКоллекцияТаблицыДляИзмененияУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{644,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТекущаяКоллекцияТаблицыДляИзмененияУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{632,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{660,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаТаблицыДляИзмененияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{658,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПрочееСтраницыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{631,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПрочееРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"ГруппаДеревоТаблиц",
{1,1,
{"ru","Таблицы"}
},
{1,1,
{"ru","Группа дерево таблиц"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{18,
{4,0,
{0},"",-1,-1,1,0,""},1,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ДеревоТаблиц",0,0,1,
{1,0},
{1,0},
{1,
{3}
},0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{1}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{2,60edb81d-887b-478e-94ee-7fef2b13393d,"",7c39b7bc-db0f-4410-9d98-8e5b7896995e,"ДеревоТаблицПередРазворачиванием",1,0,60edb81d-887b-478e-94ee-7fef2b13393d,0,1,7c39b7bc-db0f-4410-9d98-8e5b7896995e,0,1},
{13,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,2bbe4e12-06d2-409b-a972-eea585125d83,37740564-9e86-44a0-bea9-3f485a5a3f91,58b2a785-23f6-4b0e-a324-9a1323285595,8af6ebff-cd02-4bfe-a984-44a292623708,8d772f97-c0ef-47c0-9cb0-efea28c61341,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{22,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоТаблицКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{709,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДобавитьТаблицу",
{1,1,
{"ru","Перенести"}
},1,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{710,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьТаблицуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{532,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ДобавитьОписаниеВТ",
{1,0},1,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{533,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьОписаниеВТРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДеревоТаблицЗначение",1,0,
{1,0},
{1,0},
{2,
{3},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,0,0,1,
{5,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{71,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{72,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{66,0},0,3,3,0},1,
{5,
{73,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоТаблицСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{74,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{66,1},0,3,3,0},1,
{5,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТаблицУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{66,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},1,0,1,
{12,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДеревоТаблицРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{203,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСвойстваРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{540,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОператорИсточникиСвойстваРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{197,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОператорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,0,1,
{12,
{195,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФормаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаКартинки",
{1,1,
{"ru","Группа картинки"}
},
{1,1,
{"ru","Группа картинки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},5,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаВиртТаблица",
{1,1,
{"ru","Картинка вирт таблица"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAABXUExURf///7///2D//3///3f//5///5P//5v//6f/
/9///4v//8P///b3/+Pn//X2/+bp//r6/2V7/6Gv/8jQ/3CF/+7w/2+E/8PL/4qb
/4GT//7+/yxL/9bc/2b9pxIAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABXSURBVChT
lY9JEoAwCARBRcUt7kv0/++0gjmAJ+1jUzNTwAcwSRVBZJQXFBFRclVzRAQCccgG
/ommhc5p0Q8wTiYyL6vt2PbDCn9erxX/rHD8QkC5KABueTYDI8e4Yh4AAAAASUVO
RK5CYII=}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{55,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаВиртТаблицаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка вирт таблица"}
},0},0,1,
{12,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаВиртТаблицаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаПоследовательность",
{1,1,
{"ru","Картинка последовательность"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEZSURBVDhPYyAZ
qP3nBmJGKI+BCUqTAnqAeBLMELhJRAO1/3xAcjsQnwPiPIQBav8LgGQ+hEMQcAKx
OBAXIhsgACRBmBAA6ekFYpABniAB4kE9nxaD3guQ/49CvcLADJYgFjiwFzBI7Ulm
4HjjxHDE9g1ICOKFej7ynN/46RPMALICEGjABEQgEgPq+VCiEGjAf6IS0n+GO6xA
vEr3lcpqIBeuGSxJLAAakPmJ7dLbX0w3NKBCYMAIlJAA0h5AzAbErFDMDqVZgJgD
ie0DxNxA7MjIoHIdSIPzAij0HYDYGIi1gFgBiAWBGKQR5MwPQPwMiO8C8Q8gfgzl
kwaALq0G4ktALAwVAgNiAxEUWyBvuQKd/hYsCAYMDACffkqeYVo2gQAAAABJRU5E
rkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{58,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаПоследовательностьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка последовательность"}
},0},0,1,
{12,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаПоследовательностьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаЗапросВыбораСхемыЗапроса",
{1,1,
{"ru","Картинка запрос выбора схемы запроса"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADwSURBVDhPY6AU
MIKIhoaGLCAlBmKTAoD6GlAZJACYHiYwjwJAsQGwMJgKpF6D2CQALaC+MDAL5h9S
AEwPxV5ggdJYgVo9AxuQ8gNiEI2Cj/1fZwOUdyEYBtv+T4/4wPBKDajwP5D7H0gA
Xf2fkZGBEcj+rwNzwWtc4QC0ZRmQugTUyA4RAYP/QgzSV443PrlGMAxuNTLcAlIg
F4JcAAN/9BmcDoIYxAZiCxC/gTDBBi2TYFR6C+IQZQDQFe+BFMiLIM1/gBhkIBjA
wuAVrjCAgb///zBtZJjwmpdB+KkrY2IMVJg0AIo2IFaEcoGAgQEAOelK7kVrS/8A
AAAASUVORK5CYII=}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаЗапросВыбораСхемыЗапросаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка запрос выбора схемы запроса"}
},0},0,1,
{12,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаЗапросВыбораСхемыЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаОператор",
{1,1,
{"ru","Картинка оператор"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEISURBVDhPY6AU
MIKIhoaGLCAlBmKTAoD6GlAZJACYHiYwjwJAsQGwMJgKpF6D2CQALaC+MDAL5h9s
gJVllSKUiQJgeojxwmmgIbVAzAblowBiDOAE4kYgPgs0xAYsggRYoLQoLm+0tf7n
+P+fERRWOgwM/w+qKM8/5+f/dA8Dwx9liAogwKUZBIC2/gHi/0j4HxA/cXaeshIk
T4wXmKE0DIBcI/b4MZc80CAOvAYAFYA0/4PwwOA/EB8GYtOoqEc7fv8J+0HIBSB5
kCYQfg7E8UBsD9R4EUiDASwQX2ELh2/fbrJO6Ff7r6j49aS3z7MDfHzggKsHhhpE
ASEA9AIrEOtCuVgAAwMAgPxUh1MMwk0AAAAASUVORK5CYII=}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаОператорКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка оператор"}
},0},0,1,
{12,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаОператорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{175,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаФункция",
{1,1,
{"ru","Картинка функция"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADPSURBVDhPtZI/
DgFREId3FehFIUGBxJ+GRkhoKN2AUoFbCIdxA87AHbgBpYJmfe9ldhMb4yU2vuTL
L/vyMpmZfV5SfMk3gvVtS4wx/cGLv8mNSEtKMk4dB9jFNjaxiiUsYIRW4CFpOulg
C2tYxiF+hxF2GOBUjlS0DjKST0kVbYl7YoJnvKMpGC7xwBKXpEXrwFw0mLnNEhtY
wSLmMcI1wgLjS5xjhDbCkehhn3ZP9lBB6yArGf5OFdcIPxcIl5i4A+c70AqscIZX
+/U/PO8FoX8m4S2u5AQAAAAASUVORK5CYII=}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{176,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаФункцияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка функция"}
},0},0,1,
{12,
{177,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаФункцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},0,0,1,
{12,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКартинкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{50,0},1},"//////////////////////////////////////
// ФормаСхемаЗапроса

#Область СвойстваЭлементовФормы

	//Элементы.ДеревоТаблиц.ТолькоПросмотр = Истина	
	//Элементы.ДеревоТаблиц.Шапка = Ложь
	//Элементы.ДеревоТаблиц.ИзменятьПорядокСтрок = Ложь
	//Элементы.ДеревоТаблиц.ИзменятьСоставСтрок = Ложь
	//Элементы.ДеревоТаблиц.ПоложениеСтрокиПоиска = ПоложениеСтрокиПоиска.КоманднаяПанель
	
	//Элементы.ДеревоСхемыЗапроса.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	//Элементы.ДеревоСхемыЗапроса.ИзменятьПорядокСтрок = Ложь;
	//Элементы.ДеревоСхемыЗапроса.СоставКоманд.. = Ложь;
	
	//Элементы.ОтображаемыйТекстЗапроса.ТолькоПросмотр = Истина;

#КонецОбласти

#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФормаСхемаЗапроса_НастроитьФорму();
	ФормаОператор_НастроитьФорму();
	
	СхемаЗапроса = Новый СхемаЗапроса();
	ЭтотОбъект.СхемаЗапросаВХ = ПоместитьВоВременноеХранилище(СхемаЗапроса, ЭтотОбъект.УникальныйИдентификатор);
	Если Параметры.Свойство(""ТекстЗапроса"") И Не ПустаяСтрока(Параметры.ТекстЗапроса) Тогда
		СхемаЗапроса.УстановитьТекстЗапроса(Параметры.ТекстЗапроса);		
	КонецЕсли;
	ДеревоСхемыЗапроса_ЗаполнитьСхемуЗапроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Оповестить(""ФормаСхемаЗапросаПриОткрытии"");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если Не ЗакрытиеФормы И ЭтотОбъект.Модифицированность Тогда
		Отказ = Истина;
		Если Не ЗавершениеРаботы Тогда
			ВопросОЗакрытииФормы();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ГруппаФормаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.ГруппаФорма.ТекущаяСтраница = Элементы.ГруппаСхемаЗапроса И ЭтотОбъект.ОператорИзменения.ЕстьИзменения Тогда
		НастройкаОператора_Загрузить();
	КонецЕсли;
	
КонецПроцедуры

#Область ДеревоТаблиц

&НаКлиенте
Процедура ДеревоТаблицПередРазворачиванием(Элемент, Строка, Отказ)
	
	//bookmark
	//Возврат; // Вариант1
	
	ТекДанные = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Строка);
	ИскомаяСтрока = ТекДанные.ПолучитьЭлементы()[0];
	Если ИскомаяСтрока.Значение = ""@"" Тогда
		ТекДанные.ПолучитьЭлементы().Очистить();
		//ДеревоТаблиц_ЗаполнитьСостав(Строка); // Вариант0
		ДеревоТаблиц_ЗаполнитьКоллекциюВариант2(Строка)
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоСхемыЗапроса

&НаКлиенте
Процедура ДеревоСхемыЗапросаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; // Expanding
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные; 	
	ДеревоСхемыЗапроса_ВыборИзменение(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапросаПриАктивизацииСтроки(Элемент)
	
	ДеревоСхемыЗапроса_ПриАктивизацииСтроки();
	
КонецПроцедуры                                                                                                

&НаКлиенте
Процедура ДеревоСхемыЗапросаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	// prevent F9
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапросаПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;

	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные; 	
	ДеревоСхемыЗапроса_ВыборИзменение(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапросаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элементы.ДеревоСхемыЗапроса.ВыделенныеСтроки.Количество() > 1 Тогда
		Сообщить(""Нельзя удалить несколько строк"");
		Возврат;
	КонецЕсли;  
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	
	Если Не (ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос
		Или ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор) Тогда
		Сообщить(""Можно удалить запрос или оператор"");
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор
		И ТекДанные.ПолучитьРодителя().ПолучитьЭлементы().Количество() = 1 Тогда
		Сообщить(""Нельзя удалить единственный оператор"");
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Тогда
		ДеревоСхемыЗапроса_УдалитьЗапрос(ТекДанные);
	ИначеЕсли ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор Тогда
		ДеревоСхемыЗапроса_УдалитьОператор(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура СхемаЗапросаОК(Команда)
	
	Если Элементы.ГруппаФорма.ТекущаяСтраница = Элементы.ГруппаОператор Тогда
		Результат = Оператор_ВыполнитьОператор();
		Если Не Результат.Результат Тогда
			ПоказатьПредупреждение(, Результат.ТекстЗапроса);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрЗакрытия = СхемаЗапроса_ТекстСхемыЗапроса(ЭтотОбъект.СхемаЗапросаВХ);
	
	ЭтотОбъект.ЗакрытиеФормы = Истина;
	ЭтотОбъект.Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СхемаЗапросаОтмена(Команда)
	
	ЭтотОбъект.ЗакрытиеФормы = Истина;
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьТекущийЗапрос(Команда)
	
	Если Элементы.ГруппаФорма.ТекущаяСтраница = Элементы.ГруппаОператор И ЭтотОбъект.ОператорИзменения.ЕстьИзменения Тогда
		НастройкаОператора_Загрузить();
	КонецЕсли;
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);	
	ПараметрСобытия = СхемаЗапроса_ТекстПоТекущийЗапрос(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки.ИндексЗапроса);
	Оповестить(""ФормаСхемаЗапросаВыполнитьТекущийЗапрос"", ПараметрСобытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗапросВыбора(Команда)
	
	ДеревоСхемыЗапроса_ДобавитьЗапросВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВложенныйЗапрос(Команда)
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);	
	Если Не СтруктураСтроки.ЕстьОператор Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоСхемыЗапроса_ДобавитьВложенныйЗапрос(СтруктураСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗапросУничтожения(Команда)
	
	ДеревоСхемыЗапроса_ВыборВременнойТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОператор(Команда)
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	
	Если СтруктураСтроки.ТипЗапроса = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросУничтоженияТаблицыСхемыЗапроса Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоСхемыЗапроса_ДобавитьОператор(ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(СтруктураСтроки.ИдентификаторИсточникаЗапроса));	
	СхемаЗапроса_ДобавитьОператор(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки);	
	ПодключитьОбработчикОжидания(""ОтображаемыйТекстЗапроса_ОбработчикОжидания"", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьСтроки(Команда)

	Для Каждого Строка Из ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы() Цикл
		Элементы.ДеревоСхемыЗапроса.Свернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтроки(Команда)

	Для Каждого Строка Из ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы() Цикл
		Элементы.ДеревоСхемыЗапроса.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	
	Если Не (ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Или ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Тогда
		Дерево = ЭтотОбъект.ДеревоСхемыЗапроса;
	Иначе
		Дерево = ТекДанные.ПолучитьРодителя();
	КонецЕсли;
	
	Коллекция 	= Дерево.ПолучитьЭлементы();
	Количество	= Коллекция.Количество();
	
	Если Количество = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Индекс 		= Коллекция.Индекс(ТекДанные);
	Направление	= ?(Команда.Имя = ""ПереместитьВверх"", -1, 1);
	
	Если Направление = -1 И Индекс = 0 Тогда
		Возврат;
	ИначеЕсли Направление = 1 И Индекс = Количество - 1 Тогда
		Возврат;
	КонецЕсли;
	
	Коллекция.Сдвинуть(Индекс, Направление);
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Тогда
		ДеревоСхемыЗапроса_ПронумероватьЗапрос(ЭтотОбъект);
	Иначе
		ДеревоСхемыЗапроса_ПронумероватьОператор(ЭтотОбъект, Дерево);
		ЭтотОбъект.ОператорИдентификатор = Null;
		Элементы.ГруппаОператор.Доступность = Ложь;
	КонецЕсли;
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Тогда
		СхемаЗапроса_ПереместитьЗапрос(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки, Направление);
	Иначе
		СхемаЗапроса_ПереместитьОператор(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки, Направление);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтроку(Команда)
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	
	Если Не (ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Или ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор) Тогда
		Сообщить(""Можно скопировать запрос или оператор"");
		Возврат;
	КонецЕсли;
	
	ДеревоСхемыЗапроса_СкопироватьСтроку(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОператора(Команда)
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);	
	Если СтруктураСтроки.ЕстьОператор Тогда
		НастройкаОператора_Выгрузить(СтруктураСтроки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТекстЗапроса(Команда)

	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	
	ПараметрыОткрытия = Новый Структура(""Источник, СхемаЗапросаВХ, ИндексЗапроса"", ""СхемаЗапроса"", ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки.ИндексЗапроса);
	
	ОткрытьФорму(ИмяФормыОбработки(""ТекстЗапроса""), ПараметрыОткрытия, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор, , , 
		Новый ОписаниеОповещения(""ОтображаемыйТекстЗапроса_Завершение"", ЭтотОбъект, Новый Структура(""СтруктураСтроки"", СтруктураСтроки)));
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекстЗапроса(Команда)

	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	ОтображаемыйТекстЗапроса_Выгрузить(СтруктураСтроки.ИндексЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область ФормаСхемаЗапроса

&НаСервере
Процедура ФормаСхемаЗапроса_НастроитьФорму()
	
	ЭтотОбъект.ПеречислениеТипСтроки = Новый Структура();
	// ДеревоСхемыЗапроса.ТипСтроки
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""Запрос"", 			""Запрос"");
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""Оператор"", 			""Оператор"");
	// ДеревоСхемыЗапроса,ИсточникиДоступныеПоля.ТипСтроки
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""Источник"", 			""Источник"");
	// ИсточникиДоступныеПоля.ТипСтроки
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""ДоступноеПоле"", 		""ДоступноеПоле"");
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""ВыбираемыеПоля"", 	""ВыбираемыеПоля"");
	ЭтотОбъект.ПеречислениеТипСтроки.Вставить(""ВыбираемоеПоле"", 	""ВыбираемоеПоле"");
	
	// ДеревоСхемыЗапроса.ТипЗапроса
	ЭтотОбъект.ПеречислениеТипЗапроса = Новый Структура();
	ЭтотОбъект.ПеречислениеТипЗапроса.Вставить(""ЗапросВыбораСхемыЗапроса"", 					""ЗапросВыбораСхемыЗапроса"");
	ЭтотОбъект.ПеречислениеТипЗапроса.Вставить(""ЗапросУничтоженияТаблицыСхемыЗапроса"", 		""ЗапросУничтоженияТаблицыСхемыЗапроса"");
	
	// ДеревоСхемыЗапроса,ИсточникиДоступныеПоля.ТипИсточника
	ЭтотОбъект.ПеречислениеТипИсточника = Новый Структура();
	ЭтотОбъект.ПеречислениеТипИсточника.Вставить(""ТаблицаСхемыЗапроса"", 					""ТаблицаСхемыЗапроса"");
	ЭтотОбъект.ПеречислениеТипИсточника.Вставить(""ВложенныйЗапросСхемыЗапроса"", 			""ВложенныйЗапросСхемыЗапроса"");
	ЭтотОбъект.ПеречислениеТипИсточника.Вставить(""ОписаниеВременнойТаблицыСхемыЗапроса"", 	""ОписаниеВременнойТаблицыСхемыЗапроса"");
	
	// ДеревоТаблиц,ДеревоСхемыЗапроса,ИсточникиДоступныеПоля.ТипТаблицы
	ЭтотОбъект.ПеречислениеТипТаблицы = Новый Структура();
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ОбычнаяТаблица"", 	""ОбычнаяТаблица"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ТабличнаяЧасть"", 	""ТабличнаяЧасть"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ВиртТаблица"", 		""ВиртТаблица"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""Изменения"", 		""Изменения"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ВремТаблица"", 		""ВремТаблица"");
	
	ЭтотОбъект.ПеречислениеКартинки = Новый Структура();
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ВиртТаблица"", 				Элементы.КартинкаВиртТаблица.Картинка);	
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Последовательность"", 			Элементы.КартинкаПоследовательность.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ЗапросВыбораСхемыЗапроса"", 	Элементы.КартинкаЗапросВыбораСхемыЗапроса.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Оператор"", 					Элементы.КартинкаОператор.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Функция"", 					Элементы.КартинкаФункция.Картинка);
	
	ОписаниеКоллекций_Заполнить();	
	ДеревоТаблиц_Заполнить();
	
	ЭтотОбъект.ОтображаемыйТекстЗапросаВариантОтображения = ""Текущий запрос"";
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОЗакрытииФормы()
	
	ПоказатьВопрос(Новый ОписаниеОповещения(""ВопросОЗакрытииФормы_Завершение"", ЭтотОбъект, Новый Структура()), ""Запрос изменен. Закрыть форму?"", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОЗакрытииФормы_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект.ЗакрытиеФормы = Истина;
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоСхемыЗапроса

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ПриАктивизацииСтроки()
			
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ЭтотОбъект.ОтображаемыйТекстЗапроса.УстановитьТекст("""");
		Возврат;
	КонецЕсли;
	
	НовыйИдентификаторСтроки = ТекДанные.ПолучитьИдентификатор();
	Если ЭтотОбъект.ТекущийИдентификаторСтроки <> НовыйИдентификаторСтроки Тогда
		ЭтотОбъект.ТекущийИдентификаторСтроки = НовыйИдентификаторСтроки;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	Если ЭтотОбъект.ТекущийИдентификаторЗапроса <> СтруктураСтроки.ИдентификаторЗапроса Тогда
		ЭтотОбъект.ТекущийИдентификаторЗапроса = СтруктураСтроки.ИдентификаторЗапроса;
		ВременныеТаблицы = ДеревоСхемыЗапроса_ВременныеТаблицы(ЭтотОбъект, СтруктураСтроки.ИдентификаторЗапроса);
		ДеревоТаблиц_ЗаполнитьВременныеТаблицы(ЭтотОбъект, ВременныеТаблицы);
		ОтображаемыйТекстЗапросаЗаполнить = Истина;
	КонецЕсли;
	Если ЭтотОбъект.ТекущийИдентификаторИсточникаЗапроса <> СтруктураСтроки.ИдентификаторИсточникаЗапроса Тогда
		ЭтотОбъект.ТекущийИдентификаторИсточникаЗапроса = СтруктураСтроки.ИдентификаторИсточникаЗапроса;
	КонецЕсли;	
	
	Если СтруктураСтроки.ЕстьОператор Тогда
		Если ЭтотОбъект.ТекущийИдентификаторОператора <> СтруктураСтроки.ИдентификаторОператора Тогда
			ЭтотОбъект.ТекущийИдентификаторОператора = СтруктураСтроки.ИдентификаторОператора;
		КонецЕсли;			
	Иначе
		ЭтотОбъект.ТекущийИдентификаторОператора = Null;
	КонецЕсли;
	
	Если ОтображаемыйТекстЗапросаЗаполнить = Истина Тогда             
		ПодключитьОбработчикОжидания(""ОтображаемыйТекстЗапроса_ОбработчикОжидания"", 0.1, Истина);
	КонецЕсли;
	
	Элементы.ГруппаОператор.Доступность = (СтруктураСтроки.ЕстьОператор И ЭтотОбъект.ОператорИдентификатор = СтруктураСтроки.ИдентификаторОператора);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ВыборИзменение(Знач ТекДанные)
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос
		И ТекДанные.ТипЗапроса = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросУничтоженияТаблицыСхемыЗапроса Тогда
		ДеревоСхемыЗапроса_ВыборВременнойТаблицы(ТекДанные);
	Иначе
		СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
		Если СтруктураСтроки.ЕстьОператор Тогда
			НастройкаОператора_Выгрузить(СтруктураСтроки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ВыборВременнойТаблицы(Знач ТекДанные = Неопределено)
	
	ИдентификаторЗапроса = ?(ТекДанные <> Неопределено, ТекДанные.Идентификатор, -1);
	ВременныеТаблицы = ДеревоСхемыЗапроса_ВременныеТаблицы(ЭтотОбъект, ИдентификаторЗапроса);
	
	ПараметрыОткрытия = Новый Структура(""ВременныеТаблицы"", ВременныеТаблицы);
	ПараметрыОткрытия.Вставить(""МножественныйВыбор"", (ТекДанные = Неопределено));
	Если ТекДанные <> Неопределено Тогда
		ПараметрыОткрытия.Вставить(""ИмяТаблицы"", ТекДанные.Псевдоним);
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормыОбработки(""ВыборВременнойТаблицы""), ПараметрыОткрытия,
		ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор, , ,
		Новый ОписаниеОповещения(""ДеревоСхемыЗапроса_ВыборВременнойТаблицыЗавершение"", ЭтотОбъект, 
		Новый Структура(""ИдентификаторСтроки"", ?(ТекДанные = Неопределено, Неопределено, ТекДанные.ПолучитьИдентификатор()))));
	
КонецПроцедуры
	
&НаКлиенте
Процедура ДеревоСхемыЗапроса_ВыборВременнойТаблицыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ИдентификаторСтроки = Неопределено Тогда
		Для Каждого ИмяТаблицы Из Результат Цикл
			ДеревоСхемыЗапроса_ДобавитьЗапросУничтожения(ИмяТаблицы);
		КонецЦикла;                                                  
		Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы()[ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Количество() - 1].ПолучитьИдентификатор();
	Иначе
		ТекДанные = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		ТекДанные.Псевдоним = Результат[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоСхемыЗапроса_ПронумероватьЗапрос(Знач Форма)
	
	Индекс = 0;
	Для Каждого Строка Из Форма.ДеревоСхемыЗапроса.ПолучитьЭлементы() Цикл
		Строка.ИмяТаблицы = ""Запрос "" + Индекс;
		Если Строка.ТипЗапроса = Форма.ПеречислениеТипЗапроса.ЗапросУничтоженияТаблицыСхемыЗапроса Тогда
			Строка.ИмяТаблицы = Строка.ИмяТаблицы + "" (уничтожение)"";
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоСхемыЗапроса_ПронумероватьОператор(Знач Форма, Знач Дерево)
	
	Индекс = 0;
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл         
		Строка.ИмяТаблицы = ""Оператор "" + Индекс;
		Индекс = Индекс + 1;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ДобавитьЗапросВыбора()
	
	НовСтр = ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Добавить();
	НовСтр.Идентификатор 	= НовСтр.ПолучитьИдентификатор();	
	НовСтр.ТипСтроки 	 	= ЭтотОбъект.ПеречислениеТипСтроки.Запрос;
	НовСтр.ТипЗапроса 	 	= ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросВыбораСхемыЗапроса;
	ИндексЗапроса  			= ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Количество() - 1;
	НовСтр.ИмяТаблицы 	 	= ""Запрос "" + ИндексЗапроса;                             	
	НовСтр.Картинка 	 	= ЭтотОбъект.ПеречислениеКартинки.ЗапросВыбораСхемыЗапроса;
	
	ДеревоСхемыЗапроса_ДобавитьОператор(НовСтр);
	
	СхемаЗапроса_ДобавитьЗапросВыбора(ЭтотОбъект.СхемаЗапросаВХ);
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ДобавитьВложенныйЗапрос(Знач СтруктураСтроки)
	
	НовСтр = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(СтруктураСтроки.ИдентификаторОператора).ПолучитьЭлементы().Добавить();
	НовСтр.Идентификатор = НовСтр.ПолучитьИдентификатор();	
	НовСтр.ТипСтроки 	 = ЭтотОбъект.ПеречислениеТипСтроки.Источник;
	НовСтр.ТипИсточника  = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса;
	НовСтр.ИмяТаблицы 	 = ""ВложенныйЗапрос"";
	НовСтр.Псевдоним 	 = ""ВложенныйЗапрос"";
	НовСтр.Картинка 	 = БиблиотекаКартинок.КонструкторЗапросаВложенныйЗапрос;
	
	ДеревоСхемыЗапроса_ДобавитьОператор(НовСтр);
	
	СхемаЗапроса_ДобавитьВложенныйЗапрос(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки, НовСтр.Псевдоним);
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ДобавитьЗапросУничтожения(Знач ИмяТаблицы)
	
	НовСтр = ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Добавить();
	НовСтр.Идентификатор = НовСтр.ПолучитьИдентификатор();	
	НовСтр.ТипСтроки 	 = ЭтотОбъект.ПеречислениеТипСтроки.Запрос;
	НовСтр.ТипЗапроса 	 = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросУничтоженияТаблицыСхемыЗапроса;
	ИндексЗапроса = ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Количество() - 1;
	НовСтр.ИмяТаблицы 	 = ""Запрос "" + ИндексЗапроса + "" (уничтожение)"";
	НовСтр.Псевдоним 	 = ИмяТаблицы;
	НовСтр.Картинка 	 = БиблиотекаКартинок.КонструкторЗапросаСоздатьЗапросУничтоженияВременнойТаблицы;
	
	СхемаЗапроса_ДобавитьЗапросУничтожения(ЭтотОбъект.СхемаЗапросаВХ, ИмяТаблицы);
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_ДобавитьОператор(Знач ТекДанные)
	
	НовСтр = ТекДанные.ПолучитьЭлементы().Добавить();              
	НовСтр.Идентификатор	= НовСтр.ПолучитьИдентификатор();	
	НовСтр.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.Оператор;
	ИндексОператора 		= ТекДанные.ПолучитьЭлементы().Количество() - 1;
	НовСтр.ИмяТаблицы 	 	= ""Оператор "" + ИндексОператора;
	НовСтр.Картинка 		= ЭтотОбъект.ПеречислениеКартинки.Оператор;
	
	Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = НовСтр.Идентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_СкопироватьСтроку(Знач ТекДанные)
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос Тогда
		ДеревоСхемыЗапроса_СкопироватьЗапрос(СтруктураСтроки);
		Идентификатор = ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы()[СтруктураСтроки.ИндексЗапроса + 1].ПолучитьИдентификатор();
		Элементы.ДеревоСхемыЗапроса.Развернуть(Идентификатор, Истина);
		Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = Идентификатор;
		ПодключитьОбработчикОжидания(""ОтображаемыйТекстЗапроса_ОбработчикОжидания"", 0.1, Истина);
	ИначеЕсли ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор Тогда
		ТекДанныеИсточникаЗапроса = ТекДанные.ПолучитьРодителя();
		ДеревоСхемыЗапроса_СкопироватьОператор(СтруктураСтроки);
		КоличествоОператоров = ТекДанныеИсточникаЗапроса.ПолучитьЭлементы().Количество();
		ТекДанныеОператора = ТекДанныеИсточникаЗапроса.ПолучитьЭлементы()[КоличествоОператоров - 1];
		Идентификатор = ТекДанныеОператора.ПолучитьИдентификатор();
		Элементы.ДеревоСхемыЗапроса.Развернуть(Идентификатор, Истина);
		Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = Идентификатор;
		ПодключитьОбработчикОжидания(""ОтображаемыйТекстЗапроса_ОбработчикОжидания"", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_СкопироватьЗапрос(Знач СтруктураСтроки)
	
	СхемаЗапроса_СкопироватьЗапрос(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки);
	
	СхемаЗапроса  = ПолучитьИзВременногоХранилища(ЭтотОбъект.СхемаЗапросаВХ);
	Запрос = СхемаЗапроса.ПакетЗапросов[СтруктураСтроки.ИндексЗапроса + 1];
	
	ТекДанные = ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Вставить(СтруктураСтроки.ИндексЗапроса + 1);
	ДеревоСхемыЗапроса_ЗаполнитьЗапрос(ТекДанные, Запрос, СтруктураСтроки.ИндексЗапроса + 1);
	ДеревоСхемыЗапроса_ПронумероватьЗапрос(ЭтотОбъект); 
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_СкопироватьОператор(Знач СтруктураСтроки)
	
	СхемаЗапроса_СкопироватьОператор(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки);
	
	КурсорСЗ 	= СхемаЗапроса_КурсорСЗ(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки);
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= Запрос.Операторы[Запрос.Операторы.Количество() - 1];
	
	ТекДанныеИсточникаЗапроса = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(СтруктураСтроки.ИдентификаторИсточникаЗапроса);
	ТекДанныеОператора = ТекДанныеИсточникаЗапроса.ПолучитьЭлементы().Добавить();
	ДеревоСхемыЗапроса_ЗаполнитьОператор(ТекДанныеОператора, Запрос, Оператор, ТекДанныеИсточникаЗапроса.ПолучитьЭлементы().Количество() - 1);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_УдалитьЗапрос(Знач ТекДанные)
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	СхемаЗапроса_УдалитьЗапрос(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки);
	
	ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Удалить(ТекДанные);
	ДеревоСхемыЗапроса_ПронумероватьЗапрос(ЭтотОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСхемыЗапроса_УдалитьОператор(Знач ТекДанные)
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);	
	СхемаЗапроса_УдалитьОператор(ЭтотОбъект.СхемаЗапросаВХ, СтруктураСтроки);
	
	ТекДанныеИсточникаЗапроса = ТекДанные.ПолучитьРодителя();
	Коллекция = ТекДанныеИсточникаЗапроса.ПолучитьЭлементы();
	Коллекция.Удалить(ТекДанные);
	Если СтруктураСтроки.ИндексОператора = Коллекция.Количество() Тогда
		Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = Коллекция[Коллекция.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;
	ДеревоСхемыЗапроса_ПронумероватьОператор(ЭтотОбъект, ТекДанныеИсточникаЗапроса);
	
	ПодключитьОбработчикОжидания(""ОтображаемыйТекстЗапроса_ОбработчикОжидания"", 0.1, Истина);
		
КонецПроцедуры

&НаКлиенте
Функция ДеревоСхемыЗапроса_СтруктураСтроки(Знач ТекДанные)
	
	Результат = Новый Структура(""ИдентификаторЗапроса, ТипЗапроса, ИндексЗапроса, ИдентификаторИсточникаЗапроса, ЭтоЗапросПакета, КоличествоОператоров,
		|ЕстьОператор,ИдентификаторОператора, ИндексОператора, ПозицияОператора"");
	Результат.ЕстьОператор = Ложь;
	Результат.ИдентификаторОператора = Неопределено;
	Результат.ИндексОператора = Неопределено;
	Результат.ПозицияОператора = Неопределено;
	
	ИскомаяСтрока = ТекДанные;
	
	// Поиск запроса+
	// Влож. запрос в п.о. является источником, потом уже — запросом
	Если ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник
		И ИскомаяСтрока.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса Тогда
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЕсли;
	
	Пока Не (ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос
		Или (ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник
			И ИскомаяСтрока.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса)) Цикл
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЦикла;
	
	Если ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник
		И ИскомаяСтрока.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса Тогда
		Результат.ИдентификаторИсточникаЗапроса = ИскомаяСтрока.Идентификатор;
		Пока Не (ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос) Цикл
			ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
		КонецЦикла;	
	КонецЕсли;
	
	ТекДанныеЗапросаПакета = ИскомаяСтрока;
	
	Результат.ИдентификаторЗапроса		= ИскомаяСтрока.Идентификатор;
	Результат.ТипЗапроса 				= ИскомаяСтрока.ТипЗапроса;
	Результат.ИндексЗапроса 			= ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Индекс(ИскомаяСтрока);
	 	
	Если Результат.ИдентификаторИсточникаЗапроса = Неопределено Тогда
		Результат.ИдентификаторИсточникаЗапроса = ИскомаяСтрока.Идентификатор;
	КонецЕсли;
	
	Результат.ЭтоЗапросПакета = (Результат.ИдентификаторЗапроса = Результат.ИдентификаторИсточникаЗапроса);
	
	Если Результат.ТипЗапроса = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросВыбораСхемыЗапроса Тогда
		Коллекция = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(Результат.ИдентификаторИсточникаЗапроса).ПолучитьЭлементы();
		Результат.КоличествоОператоров = Коллекция.Количество();
	Иначе
		Результат.КоличествоОператоров = 0;
	КонецЕсли;
	// Поиск запроса-
	
	ИскомаяСтрока = ТекДанные;
	
	// Поиск оператора+	
	Если ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Запрос
		И ИскомаяСтрока.ТипЗапроса = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросВыбораСхемыЗапроса Тогда
		ИскомаяСтрока = ТекДанные.ПолучитьЭлементы()[0];
	КонецЕсли;
	
	Если Не (ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Оператор
		Или ИскомаяСтрока.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Пока ИскомаяСтрока.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.Оператор Цикл
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЦикла;	
	
	Результат.ЕстьОператор 				= Истина;
	Результат.ИдентификаторОператора	= ИскомаяСтрока.Идентификатор;	
	Результат.ИндексОператора 			= ИскомаяСтрока.ПолучитьРодителя().ПолучитьЭлементы().Индекс(ИскомаяСтрока);	
	КурсорОператора = ДеревоСхемыЗапроса_КурсорОператора(ТекДанныеЗапросаПакета, Результат.ИдентификаторОператора); 
	Результат.ПозицияОператора 			= КурсорОператора.ПозицияОператора;
	// Поиск оператора-
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ДеревоСхемыЗапроса_КурсорОператора(Знач Запрос, Знач ИдентификаторОператора, ТекПозицияОператора = 0)
	
	Для Каждого Оператор Из Запрос.ПолучитьЭлементы() Цикл
		Если Оператор.Идентификатор = ИдентификаторОператора Тогда
			Возврат Новый Структура(""ПозицияОператора"", ТекПозицияОператора);
		КонецЕсли;
		ТекПозицияОператора = ТекПозицияОператора + 1;
		Для Каждого Источник Из Оператор.ПолучитьЭлементы() Цикл
			Если Источник.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса Тогда
				Структура = ДеревоСхемыЗапроса_КурсорОператора(Источник, ИдентификаторОператора, ТекПозицияОператора);
				Если Структура <> Неопределено Тогда
					Возврат Структура;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДеревоСхемыЗапроса_ВременныеТаблицы(Знач Форма, Знач ИдентификаторЗапроса)
	
	МассивЗначений = Новый Массив();
	Для Каждого СтрокаЗапроса Из Форма.ДеревоСхемыЗапроса.ПолучитьЭлементы() Цикл
		Если СтрокаЗапроса.Идентификатор = ИдентификаторЗапроса Тогда
			Прервать;
		КонецЕсли;
		Если СтрокаЗапроса.ТипЗапроса = Форма.ПеречислениеТипЗапроса.ЗапросВыбораСхемыЗапроса И Не ПустаяСтрока(СтрокаЗапроса.Псевдоним) Тогда
			МассивЗначений.Добавить(СтрокаЗапроса.Псевдоним);
		ИначеЕсли СтрокаЗапроса.ТипЗапроса = Форма.ПеречислениеТипЗапроса.ЗапросУничтоженияТаблицыСхемыЗапроса Тогда
			Индекс = МассивЗначений.Найти(СтрокаЗапроса.Псевдоним);
			Если Индекс <> Неопределено Тогда
				МассивЗначений.Удалить(Индекс);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат МассивЗначений;	
	
КонецФункции

&НаСервере
Процедура ДеревоСхемыЗапроса_ЗаполнитьСхемуЗапроса()
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(ЭтотОбъект.СхемаЗапросаВХ);
	
	ИндексЗапроса = 0;
	Для Каждого Запрос Из СхемаЗапроса.ПакетЗапросов Цикл
		ДеревоСхемыЗапроса_ЗаполнитьЗапрос(ЭтотОбъект.ДеревоСхемыЗапроса.ПолучитьЭлементы().Добавить(), Запрос, ИндексЗапроса);
		ИндексЗапроса = ИндексЗапроса + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_ЗаполнитьЗапрос(Знач НовСтр, Знач Запрос, Знач ИндексЗапроса)
	
	НовСтр.Идентификатор	= НовСтр.ПолучитьИдентификатор();
	НовСтр.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.Запрос;
	Если ТипЗнч(Запрос) = Тип(""ЗапросВыбораСхемыЗапроса"") Тогда
		НовСтр.ТипЗапроса = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросВыбораСхемыЗапроса;
		НовСтр.Картинка   = ЭтотОбъект.ПеречислениеКартинки.ЗапросВыбораСхемыЗапроса;
	Иначе
		НовСтр.ТипЗапроса = ЭтотОбъект.ПеречислениеТипЗапроса.ЗапросУничтоженияТаблицыСхемыЗапроса;
		НовСтр.Картинка   = БиблиотекаКартинок.КонструкторЗапросаСоздатьЗапросУничтоженияВременнойТаблицы;
	КонецЕсли;
	НовСтр.ИмяТаблицы		= ""Запрос "" + ИндексЗапроса;
	Если ТипЗнч(Запрос) = Тип(""ЗапросВыбораСхемыЗапроса"") Тогда
		НовСтр.Псевдоним = Запрос.ТаблицаДляПомещения;
		ИндексОператора = 0;
		Для Каждого Оператор Из Запрос.Операторы Цикл
			ДеревоСхемыЗапроса_ЗаполнитьОператор(НовСтр.ПолучитьЭлементы().Добавить(), Запрос, Оператор, ИндексОператора);
			ИндексОператора = ИндексОператора + 1;
		КонецЦикла;
	ИначеЕсли ТипЗнч(Запрос) = Тип(""ЗапросУничтоженияТаблицыСхемыЗапроса"") Тогда
		НовСтр.ИмяТаблицы	= НовСтр.ИмяТаблицы + "" (уничтожение)"";
		НовСтр.Псевдоним 	= Запрос.ИмяТаблицы;		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_ЗаполнитьОператор(Знач НовСтр, Знач Запрос, Знач Оператор, Знач ИндексОператора)
	
	НовСтр.Идентификатор	= НовСтр.ПолучитьИдентификатор();
	НовСтр.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.Оператор;	
	НовСтр.ИмяТаблицы		= ""Оператор "" + ИндексОператора;
	НовСтр.Картинка 		= ЭтотОбъект.ПеречислениеКартинки.Оператор;
	
	Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
		ДеревоСхемыЗапроса_ЗаполнитьИсточник(НовСтр.ПолучитьЭлементы().Добавить(), Запрос, ИсточникСхемыЗапроса);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_ЗаполнитьИсточник(Знач НовСтр, Знач Запрос, Знач ИсточникСхемыЗапроса)
	
	Источник = ИсточникСхемыЗапроса.Источник;

	НовСтр.Идентификатор	= НовСтр.ПолучитьИдентификатор();
	НовСтр.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.Источник;	
	НовСтр.Псевдоним 		= Источник.Псевдоним;
	
	Если ТипЗнч(Источник) = Тип(""ТаблицаСхемыЗапроса"") Тогда
		НовСтр.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ТаблицаСхемыЗапроса;
		НовСтр.ИмяТаблицы 	= Источник.ИмяТаблицы;                      
		ТаблицаФормы_УстановитьТипКартинкуТаблицы(НовСтр);				
	ИначеЕсли ТипЗнч(Источник) = Тип(""ВложенныйЗапросСхемыЗапроса"") Тогда
		НовСтр.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса;		
		НовСтр.ИмяТаблицы 	= ""ВложенныйЗапрос"";
		НовСтр.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаВложенныйЗапрос;
		ИндексОператора = 0;
		Для Каждого Оператор Из Источник.Запрос.Операторы Цикл
			ДеревоСхемыЗапроса_ЗаполнитьОператор(НовСтр.ПолучитьЭлементы().Добавить(), Источник.Запрос, Оператор, ИндексОператора);
			ИндексОператора = ИндексОператора + 1;
		КонецЦикла;
	ИначеЕсли ТипЗнч(Источник) = Тип(""ОписаниеВременнойТаблицыСхемыЗапроса"") Тогда
		НовСтр.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ОписаниеВременнойТаблицыСхемыЗапроса;
		НовСтр.ИмяТаблицы 	= Источник.ИмяТаблицы;
		НовСтр.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаОписаниеВременнойТаблицы;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_ПрочитатьЗапрос(Знач СтруктураСтроки)
	
	ТекДанные = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(СтруктураСтроки.ИдентификаторЗапроса);
	ТекДанные.ПолучитьЭлементы().Очистить();
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(ЭтотОбъект.СхемаЗапросаВХ);
	Запрос = СхемаЗапроса.ПакетЗапросов[СтруктураСтроки.ИндексЗапроса];
	ДеревоСхемыЗапроса_ЗаполнитьЗапрос(ТекДанные, Запрос, СтруктураСтроки.ИндексЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСхемыЗапроса_ПрочитатьОператор(Знач СтруктураСтроки)
	
	ТекДанные = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(СтруктураСтроки.ИдентификаторОператора);
	ТекДанные.ПолучитьЭлементы().Очистить();
	
	КурсорСЗ 	= СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	ДеревоСхемыЗапроса_ЗаполнитьОператор(ТекДанные, Запрос, Оператор, СтруктураСтроки.ИндексОператора);
	
КонецПроцедуры

#КонецОбласти

#Область ОтображаемыйТекстЗапроса

&НаКлиенте
Процедура ОтображаемыйТекстЗапроса_ОбработчикОжидания()
	
	ТекДанные = Элементы.ДеревоСхемыЗапроса.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДеревоСхемыЗапроса_СтруктураСтроки(ТекДанные);
	ОтображаемыйТекстЗапроса_Выгрузить(СтруктураСтроки.ИндексЗапроса);
	
КонецПроцедуры

&НаСервере
Процедура ОтображаемыйТекстЗапроса_Выгрузить(Знач ИндексЗапроса)
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(ЭтотОбъект.СхемаЗапросаВХ);
	Текст = СхемаЗапроса_ТекстЗапроса(СхемаЗапроса, ИндексЗапроса);
	
	ЭтотОбъект.ОтображаемыйТекстЗапроса.УстановитьТекст(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображаемыйТекстЗапроса_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСтроки = ДополнительныеПараметры.СтруктураСтроки;
	
	ОтображаемыйТекстЗапроса_ЗавершениеСервер(СтруктураСтроки);
	
	Элементы.ДеревоСхемыЗапроса.Развернуть(СтруктураСтроки.ИдентификаторЗапроса, Истина);
	Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = СтруктураСтроки.ИдентификаторЗапроса;
	
КонецПроцедуры

&НаСервере
Процедура ОтображаемыйТекстЗапроса_ЗавершениеСервер(Знач СтруктураСтроки)
	
	ДеревоСхемыЗапроса_ПрочитатьЗапрос(СтруктураСтроки);
	
	ОтображаемыйТекстЗапроса_Выгрузить(СтруктураСтроки.ИндексЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область НастройкаОператора

&НаКлиенте
Процедура НастройкаОператора_Выгрузить(Знач СтруктураСтроки)
	
	Если Не (СтруктураСтроки.ИдентификаторОператора = ЭтотОбъект.ОператорИдентификатор) Тогда
		НастройкаОператора_ВыгрузитьСервер(СтруктураСтроки);
	КонецЕсли;
	
	Элементы.ГруппаФорма.ТекущаяСтраница 	= Элементы.ГруппаОператор;
	Элементы.ГруппаОператор.Доступность 	= Истина;
	ЭтотОбъект.ОператорИдентификатор 		= СтруктураСтроки.ИдентификаторОператора;
	
	ЭтотОбъект.ОператорИзменения.ЕстьИзменения = Ложь;
			
КонецПроцедуры

&НаСервере
Процедура НастройкаОператора_ВыгрузитьСервер(Знач СтруктураСтроки)
	
	// Иначе строка поиска дерева таблиц будет не доступна (?)
	Элементы.ГруппаОператор.Доступность = Истина;
	
	Если Не (ЭтотОбъект.ПараметрСтруктураСтроки = Неопределено) И ЭтотОбъект.ПараметрСтруктураСтроки.КоличествоОператоров > 1 Тогда
		УдаляемыеРеквизиты = Новый Массив();
		Для ИндексОператора = 0 По ЭтотОбъект.ПараметрСтруктураСтроки.КоличествоОператоров - 1 Цикл
			УдаляемыеРеквизиты.Добавить(""ТекущаяКоллекцияВыбираемыеПоля.Выражение"" + ИндексОператора);
		КонецЦикла;
		ЭтотОбъект.ИзменитьРеквизиты(, УдаляемыеРеквизиты);
		Для ИндексОператора = 0 По ЭтотОбъект.ПараметрСтруктураСтроки.КоличествоОператоров - 1 Цикл
			Элементы.Удалить(Элементы[""ТекущаяКоллекцияВыбираемыеПоляВыражение"" + ИндексОператора]);
		КонецЦикла;
	КонецЕсли;
	
	ЭтотОбъект.ПараметрСтруктураСтроки = СтруктураСтроки;
	
	Оператор_ЗаполнитьИзСхемыЗапроса();
	
	ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(ЭтотОбъект);
	
	Элементы.СвойстваЗапросаВыбиратьРазрешенные.Видимость 		= (СтруктураСтроки.ЭтоЗапросПакета И СтруктураСтроки.ИндексОператора = 0);
	Элементы.СвойстваЗапросаАвтопорядок.Видимость           	= (СтруктураСтроки.ЭтоЗапросПакета И СтруктураСтроки.ИндексОператора = 0);
	Элементы.ГруппаИтоги.Видимость 								= (СтруктураСтроки.ЭтоЗапросПакета И СтруктураСтроки.ИндексОператора = 0);
	Элементы.СвойстваЗапросаТаблицаДляПомещения.Видимость       = (СтруктураСтроки.ЭтоЗапросПакета И СтруктураСтроки.ИндексОператора = 0);	
	Элементы.СвойстваОператораСворачивать.Видимость				= (СтруктураСтроки.ИндексОператора > 0);
	
	Элементы.ТекущаяКоллекцияВыбираемыеПоля.ИзменятьСоставСтрок 	= (СтруктураСтроки.ИндексОператора = 0);
	Элементы.ТекущаяКоллекцияВыбираемыеПоля.ИзменятьПорядокСтрок 	= (СтруктураСтроки.ИндексОператора = 0);
	Элементы.ТекущаяКоллекцияВыбираемыеПоляПсевдоним.ТолькоПросмотр = Не (СтруктураСтроки.ИндексОператора = 0);
	
	Элементы.ГруппаСвойства.ТекущаяСтраница 						= Элементы.ГруппаВыбираемыеПоля;	
	Элементы.ИсточникиДоступныеПоляГруппаФункция.Доступность		= Ложь; 
	ЭтотОбъект.РежимЗамены 											= Не (СтруктураСтроки.ИндексОператора = 0);
	Элементы.РежимЗамены.ТолькоПросмотр 							= Не (СтруктураСтроки.ИндексОператора = 0);
	Элементы.ТекущаяКоллекцияВыбираемыеПоляКнопкаУдалить.Видимость 	= (СтруктураСтроки.ИндексОператора = 0);
	
	ЭтотОбъект.ОператорТекстИсключения = """";
	Элементы.ДекорацияТекстИсключения.Видимость = Ложь;
	Элементы.ДекорацияНеоднозначности.Видимость = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОператора_Загрузить()
	
	Результат = Оператор_ВыполнитьОператор();
	Если Результат.Результат Тогда
		НастройкаОператора_ЗагрузитьЗавершение();
	Иначе
		Элементы.ГруппаФорма.ТекущаяСтраница = Элементы.ГруппаОператор;
		ВопросОЗакрытииОператора();
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОператора_ЗагрузитьЗавершение()
	
	НастройкаОператора_ЗагрузитьСервер();
	
	Элементы.ДеревоСхемыЗапроса.ТекущаяСтрока = ЭтотОбъект.ПараметрСтруктураСтроки.ИдентификаторОператора;
	Элементы.ДеревоСхемыЗапроса.Развернуть(ЭтотОбъект.ПараметрСтруктураСтроки.ИдентификаторОператора, Истина);
	
	ЭтотОбъект.Модифицированность = Истина;
	
	ЭтотОбъект.ОператорИзменения.ЕстьИзменения = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура НастройкаОператора_ЗагрузитьСервер()
	
	СтруктураСтроки = ЭтотОбъект.ПараметрСтруктураСтроки;
	
	ДеревоСхемыЗапроса_ПрочитатьОператор(СтруктураСтроки);
	ОтображаемыйТекстЗапроса_Выгрузить(СтруктураСтроки.ИндексЗапроса);
	
	Если СтруктураСтроки.ИндексОператора = 0 Тогда
		ТекДанныеЗапроса = ЭтотОбъект.ДеревоСхемыЗапроса.НайтиПоИдентификатору(СтруктураСтроки.ИдентификаторЗапроса);
		ТекДанныеЗапроса.Псевдоним = ЭтотОбъект.СвойстваЗапросаТаблицаДляПомещения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОЗакрытииОператора()
	
	ПоказатьВопрос(Новый ОписаниеОповещения(""ВопросОЗакрытииОператора_Завершение"", ЭтотОбъект, Новый Структура()), ""Возникло исключение при обработке запроса. Продолжить?"", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);

КонецПроцедуры

&НаКлиенте
Процедура ВопросОЗакрытииОператора_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Элементы.ГруппаФорма.ТекущаяСтраница = Элементы.ГруппаСхемаЗапроса;
		НастройкаОператора_ЗагрузитьЗавершение();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////
// ФормаОператор

#Область СвойстваЭлементовФормы
	
	//Элементы.ИсточникиДоступныеПоля.Шапка = Ложь
	//Элементы.ИсточникиДоступныеПоля.СоставКоманд.. = Ложь
	
	//Элементы.ТекущаяКоллекция..СоставКоманд.Список\ИерархическийСписок\Дерево = Ложь
	
	//Элементы.ТекущаяКоллекцияПоляСАФ.СоставКоманд..= Ложь
	//Элементы.ТекущаяКоллекцияПоляСАФ.ПоложениеКоманднойПанели = Нет
	//Элементы.ТекущаяКоллекцияПоляСАФ.ТолькоПросмотр = Истина
	
	//Элементы.ГруппаВыбираемыеПоляВыборка..Заголовок
	
	//Элементы.ТекущаяКоллекцияВыраженияИтогов.СоставКоманд.. = Ложь
	//Элементы.ТекущаяКоллекцияИндекс.СоставКоманд.. = Ложь
	//Элементы.ТекущаяКоллекцияТаблицыДляИзменения.СоставКоманд.. = Ложь
	
#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ГруппаСвойстваПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаГруппировки
		Или Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаПорядок
		Или Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаИтоги
		Или Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаПрочее Тогда
		ИсточникиДоступныеПоля_ОтобразитьВыбираемыеПоля(Истина);
	Иначе                                                     		
		ИсточникиДоступныеПоля_ОтобразитьВыбираемыеПоля(Ложь);	
	КонецЕсли;
	
	Элементы.ИсточникиДоступныеПоляГруппаФункция.Доступность = (Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаГруппировки);
	
	Если Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаГруппировки Тогда
		ТекущаяКоллекцияГруппировки_ЗаполнитьПоляСАФ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваЗапросаОператораПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""СвойстваЗапросаОператора"");
	
КонецПроцедуры

#Область ИсточникиДоступныеПоля

&НаКлиенте
Процедура ИсточникиДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИсточникиДоступныеПоля_РазвернутьДоступныеПоля();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоляПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник
		И ТекДанные.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ОписаниеВременнойТаблицыСхемыЗапроса Тогда
		ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ(ТекДанные.ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоляПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;	
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	
	Если ТекДанные.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.Источник Тогда	
		Возврат;
	КонецЕсли;
	
	ИсточникиДоступныеПоля_УдалитьИсточник(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоляНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Идентификатор = ПараметрыПеретаскивания.Значение[0];
	ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(Идентификатор);
	ПараметрыПеретаскивания.Значение = ИсточникиДоступныеПоля_ВыражениеДоступногоПоля(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоляПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// prevent Cancel (?)
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоляПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Не (Поле = Неопределено) И Поле.Имя = ""ИсточникиДоступныеПоляЗначение"" Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Значение = ПараметрыПеретаскивания.Значение;
	Если ТипЗнч(Значение) = Тип(""Массив"") Тогда
		Значение = Значение[0];
		Если ТипЗнч(Значение) = Тип(""ДанныеФормыЭлементДерева"")
			И Значение.Свойство(""ЭтоИсточник"")
			И Значение.ЭтоИсточник Тогда
			ИсточникиДоступныеПоля_ДобавитьТаблицу(Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыбираемыеПоля

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""ВыбираемыеПоля"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;
	Если ЭтотОбъект.РежимЗамены Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяКоллекцияВыбираемыеПоля_ИзменитьВыражение();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПередНачаломИзменения(Элемент, Отказ)
		
	Если Элемент.ТекущийЭлемент.Имя = ""ТекущаяКоллекцияВыбираемыеПоляВыражение"" Тогда
		Отказ = Истина;
		ТекДанные = Элементы.ТекущаяКоллекцияВыбираемыеПоля.ТекущиеДанные;
		Если ТекДанные.ЭтоВТ Тогда
			Возврат;
		КонецЕсли;
		ТекущаяКоллекцияВыбираемыеПоля_ИзменитьВыражение(ТекДанные);
	КонецЕсли; 
			
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПередУдалением(Элемент, Отказ)
	
	Если ЭтотОбъект.РежимЗамены Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""ВыбираемыеПоля"");
	
	ТекущаяКоллекцияВыбираемыеПоля_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоляПсевдонимПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТекущаяКоллекцияВыбираемыеПоля.ТекущиеДанные;
	ТекущаяКоллекцияВыбираемыеПоля_УстановитьПсевдоним(ТекДанные, ТекДанные.Псевдоним);
	
КонецПроцедуры

#КонецОбласти

#Область Соединения

&НаКлиенте
Процедура ТекущаяКоллекцияСоединенияПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""Соединения"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияСоединенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекДанные = Элементы.ТекущаяКоллекцияСоединения.ТекущиеДанные;
	
	Если НоваяСтрока И Не Копирование Тогда
		ТекДанные.ТипСоединения = ""Левое внешнее"";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияСоединенияНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияСоединенияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияСоединенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""Соединения"");
	
	ТекущаяКоллекцияСоединения_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
		
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияСоединенияВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ТекущаяКоллекцияСоединения.ТекущиеДанные;
	Если ПустаяСтрока(ТекДанные.Источник) Или ПустаяСтрока(ТекДанные.Приемник) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВыражения = Новый Структура();
	СтруктураВыражения.Вставить(""Источник"", 	ТекДанные.Источник);
	СтруктураВыражения.Вставить(""Приемник"", 	ТекДанные.Приемник);
	
	ТаблицаФормы = ""Соединения"";
	ПараметрыОткрытия = НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, ТекДанные.Выражение, ТекДанные.ПолучитьИдентификатор());	
	ПараметрыОткрытия.Вставить(""Выражение"", 			ТекДанные.Выражение);	
	ПараметрыОткрытия.Вставить(""СтруктураВыражения"", 	СтруктураВыражения);
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);
			
КонецПроцедуры

#КонецОбласти

#Область Группировки

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""Группировки"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ 	= Истина;
	Индекс 	= ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы().Количество();
	
	НовСтр = ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы().Добавить();
	НовСтр.Выражение = ""Группировка "" + Индекс;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элементы.ТекущаяКоллекцияГруппировки.ТекущиеДанные;
	
	Если ТекДанные.ПолучитьРодителя() = Неопределено И ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы().Количество() = 1 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиПослеУдаления(Элемент)

	Индекс = 0;	
	Для Каждого Строка Из ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы() Цикл
		Строка.Выражение = ""Группировка "" + Индекс + ?(Индекс = 0, "" Авто"", """");
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""Группировки"");
	
	ТекущаяКоллекцияГруппировки_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

#КонецОбласти

#Область Отбор

&НаКлиенте
Процедура ТекущаяКоллекцияОтборПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""Отбор"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтборПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	//bookmark
	//Отказ = Истина;
	//НовСтр = ЭтотОбъект.ТекущаяКоллекцияОтбор.ПолучитьЭлементы().Добавить();
	//Элементы.ТекущаяКоллекцияОтбор.ТекущаяСтрока = НовСтр.ПолучитьИдентификатор();
	//Элементы.ТекущаяКоллекцияОтбор.ИзменитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтборПередНачаломИзменения(Элемент, Отказ)
	
	//bookmark
	//Отказ = Истина;
	//ТекущаяКоллекцияОтбор_ИзменитьВыражение();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтборНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтборПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтборПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""Отбор"");
	
	ТекущаяКоллекцияОтбор_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтборВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ТекущаяКоллекцияОтбор.ТекущиеДанные;
	
	ТаблицаФормы = ""Отбор"";
	ПараметрыОткрытия = НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, ТекДанные.Выражение, ТекДанные.ПолучитьИдентификатор());
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);
			
КонецПроцедуры

#КонецОбласти

#Область Параметры

&НаКлиенте
Процедура ТекущаяКоллекцияПараметрыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ТекущаяКоллекцияПараметры.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ТекущаяКоллекцияПараметрыВыражение.СписокВыбора.ЗагрузитьЗначения(ТекДанные.Варианты.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПараметрыПриАктивизацииЯчейки(Элемент)
	
	ТекДанные = Элементы.ТекущаяКоллекцияПараметры.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент.Имя = ""ТекущаяКоллекцияПараметрыВыражение"" Тогда
		Если ТекДанные.ТипПараметра = ""Вариант"" Тогда
			Элемент.ТекущийЭлемент.РедактированиеТекста = Ложь;
		Иначе
			Элемент.ТекущийЭлемент.РедактированиеТекста = Истина;		
		КонецЕсли;
		Если ТекДанные.ТипПараметра = """" Тогда 
			Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
		Иначе
			Элемент.ТекущийЭлемент.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если ТекДанные.ТипПараметра = ""Условие"" Тогда
			Элемент.ТекущийЭлемент.КнопкаВыбора = Истина;
		Иначе
			Элемент.ТекущийЭлемент.КнопкаВыбора = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПараметрыВыражениеПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""Параметры"");
	
	ТекДанные = Элементы.ТекущаяКоллекцияПараметры.ТекущиеДанные;
	
	Если ТекДанные.Имя = ""Периодичность"" Тогда
		ТекущаяКоллекцияПараметры_ИзменитьПериодичность(ТекДанные.ПолучитьРодителя().Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПараметрыВыражениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ТекущаяКоллекцияПараметры.ТекущиеДанные;
	
	СтруктураВыражения = Новый Структура();
	СтруктураВыражения.Вставить(""Псевдоним"", 		ТекДанные.ПолучитьРодителя().Имя);
	СтруктураВыражения.Вставить(""ДоступныеПоля"", 	ТекДанные.ДоступныеПоля);
	СтруктураВыражения.Вставить(""Индекс"", 			ТекДанные.ПолучитьРодителя().ПолучитьЭлементы().Индекс(ТекДанные));
	
	ТаблицаФормы = ""Параметры"";
	ПараметрыОткрытия = НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, ТекДанные.Выражение, ТекДанные.ПолучитьИдентификатор());
	ПараметрыОткрытия.Вставить(""Выражение"", 			ТекДанные.Выражение);	
	ПараметрыОткрытия.Вставить(""СтруктураВыражения"", 	СтруктураВыражения);
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);
			
КонецПроцедуры

#КонецОбласти

#Область ТаблицыДляИзменения

&НаКлиенте
Процедура ТекущаяКоллекцияТаблицыДляИзмененияПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""ТаблицыДляИзменения"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияТаблицыДляИзмененияНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияТаблицыДляИзмененияПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияТаблицыДляИзмененияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""ТаблицыДляИзменения"");
	
	ТекущаяКоллекцияТаблицыДляИзменения_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

#КонецОбласти

#Область Порядок

&НаКлиенте
Процедура ТекущаяКоллекцияПорядокПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""Порядок"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;	
	ТекущаяКоллекцияПорядок_ИзменитьВыражение();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядокПередНачаломИзменения(Элемент, Отказ)

	Если Элемент.ТекущийЭлемент.Имя = ""ТекущаяКоллекцияПорядокКолонкаВыражение"" Тогда
		Отказ = Истина;
		ТекДанные = Элементы.ТекущаяКоллекцияПорядок.ТекущиеДанные;
		ТекущаяКоллекцияПорядок_ИзменитьВыражение(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядокНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""Порядок"");
	
	ТекущаяКоллекцияПорядок_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

#КонецОбласти

#Область ВыраженияИтогов

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтоговПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""ВыраженияИтогов"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтоговНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтоговПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтоговПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""ВыраженияИтогов"");
	
	ТекущаяКоллекцияВыраженияИтогов_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтоговФункцияПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""ВыраженияИтогов"");
	
	ТекДанные = Элементы.СписокЗапросВыраженияИтогов.ТекущиеДанные;	
	ТекущаяКоллекцияВыраженияИтоговПсевдонимФункцияПриИзменении(ТекДанные);
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольныеТочкиИтогов

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтоговПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""КонтрольныеТочкиИтогов"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтоговПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;	
	ТекущаяКоллекцияКонтрольныеТочкиИтогов_ИзменитьВыражение();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтоговПередНачаломИзменения(Элемент, Отказ)

	Если Элемент.ТекущийЭлемент.Имя = ""ТекущаяКоллекцияКонтрольныеТочкиИтоговКолонкаВыражение"" Тогда
		Отказ = Истина;
		ТекДанные = Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтогов.ТекущиеДанные;
		ТекущаяКоллекцияКонтрольныеТочкиИтогов_ИзменитьВыражение(ТекДанные);
	КонецЕсли;
				
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры 

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтоговПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтоговПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""КонтрольныеТочкиИтогов"");
	
	ТекущаяКоллекцияКонтрольныеТочкиИтогов_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

#КонецОбласти

#Область Индекс

&НаКлиенте
Процедура ТекущаяКоллекцияИндексПриИзменении(Элемент)
	
	Оператор_ЗафиксироватьИзменение(""Индекс"");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияИндексНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияИндексПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// prevent Cancel (?) 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияИндексПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Оператор_ЗафиксироватьИзменение(""Индекс"");
	
	ТекущаяКоллекцияИндекс_ПеренестиЗначение(ПараметрыПеретаскивания.Значение, Строка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОператорТекстЗапроса(Команда)
		
	Результат = Оператор_ВыполнитьОператор();
	Если Не Результат.Результат Тогда
		ПоказатьПредупреждение(, Результат.ТекстЗапроса);
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура(""Источник, ОтображаемыйТекстЗапроса"", ""Оператор"", Результат.ТекстЗапроса);
	ОткрытьФорму(ИмяФормыОбработки(""ТекстЗапроса""), ПараметрыОткрытия, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДоступныеПоля(Команда)
	
	ИсточникиДоступныеПоля_РазвернутьДоступныеПоля();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТаблицу(Команда)

	ТекДанные = Элементы.ДеревоТаблиц.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Или Не ТекДанные.ЭтоИсточник Тогда
		Возврат;
	КонецЕсли;
	
	ИсточникиДоступныеПоля_ДобавитьТаблицу(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОписаниеВТ(Команда)
	
	ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьТаблицу(Команда)
	
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.Источник Тогда
		Возврат;
	КонецЕсли;
	
	ИсточникиДоступныеПоля_ПереименоватьИсточник(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьТаблицу(Команда)

	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.Источник Тогда
		Возврат;
	КонецЕсли;
	
	ИсточникиДоступныеПоля_ЗаменитьИсточник(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыраженияПрименитьФункцию(Команда)
	
	ТекДанные 	= Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не (ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле И Не ТекДанные.ЭтоВТ) Тогда
		Возврат;
	КонецЕсли;
		
	ТекДанные.Выражение = Выражения_ПрименитьФункцию(ТекДанные.Выражение, Команда.Имя);
	ТекДанные.Значение  = ТекДанные.Выражение;
	ТекДанные.САФ 		= Истина;
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанные);
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ТекДанные.Псевдоним, ""Псевдоним"");
	ИскомаяСтрока.Выражение = ТекДанные.Выражение;
	ИскомаяСтрока.САФ 		= Истина;
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ИскомаяСтрока);
	
	ТекущаяКоллекцияГруппировки_ЗаполнитьПоляСАФ();
	
	Оператор_ЗафиксироватьИзменение(""ВыбираемыеПоля"");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыраженияОчиститьФункцию(Команда)
	
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не (ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле И Не ТекДанные.ЭтоВТ) Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.Выражение = Выражения_ОчиститьФункцию(ТекДанные.Выражение);
	ТекДанные.Значение  = ТекДанные.Выражение;
	ТекДанные.САФ 		= Ложь;                                                 	
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанные);
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ТекДанные.Псевдоним, ""Псевдоним"");
	ИскомаяСтрока.Выражение = ТекДанные.Выражение;
	ИскомаяСтрока.САФ 		= Ложь;
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ИскомаяСтрока);
	
	ТекущаяКоллекцияГруппировки_ЗаполнитьПоляСАФ();
	
	Оператор_ЗафиксироватьИзменение(""ВыбираемыеПоля"");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыраженияПрименитьEСТЬNULL(Команда)
	
	ТекДанные = Элементы.ТекущаяКоллекцияВыбираемыеПоля.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.ЭтоВТ Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.Выражение = Выражения_ОчиститьЕСТЬNULL(ТекДанные.Выражение);
	ТекДанные.Выражение = Выражения_ПрименитьEСТЬNULL(ТекДанные.Выражение, ТекДанные.ТипЗначения);
	
	Оператор_ЗафиксироватьИзменение(""ВыбираемыеПоля"");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыраженияОчиститьЕСТЬNULL(Команда)
	
	ТекДанные = Элементы.ТекущаяКоллекцияВыбираемыеПоля.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.ЭтоВТ Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.Выражение = Выражения_ОчиститьЕСТЬNULL(ТекДанные.Выражение);
	
	Оператор_ЗафиксироватьИзменение(""ВыбираемыеПоля"");
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОператор

&НаСервере
Процедура ФормаОператор_НастроитьФорму()
	
	ЭтотОбъект.ОператорИзменения = Новый Структура(""ЕстьИзменения"", Ложь);
	
	ВыраженияНастроитьФорму(Элементы.ИсточникиДоступныеПоляПодменюФункция);
	
	Элементы.СвойстваЗапросаТаблицаДляПомещения.КнопкаОчистки = Истина;
	
	Элементы.СвойстваОператораКоличествоПолучаемыхЗаписей.КнопкаВыпадающегоСписка = Истина;
	Элементы.СвойстваОператораКоличествоПолучаемыхЗаписей.СписокВыбора.Добавить(1);
	
	// ВыбираемыеПоля
	
	Элементы.ТекущаяКоллекцияВыбираемыеПоляВыражение.РедактированиеТекста = Ложь;
	
	// Соединения
	
	Элементы.ТекущаяКоллекцияСоединения.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияСоединенияИсточник.РежимВыбораИзСписка = Истина;
	Элементы.ТекущаяКоллекцияСоединенияИсточник.РедактированиеТекста = Ложь;
	Элементы.ТекущаяКоллекцияСоединенияПриемник.РежимВыбораИзСписка = Истина;
	Элементы.ТекущаяКоллекцияСоединенияПриемник.РедактированиеТекста = Ложь;
	Элементы.ТекущаяКоллекцияСоединенияТипСоединения.РежимВыбораИзСписка = Истина;
	Элементы.ТекущаяКоллекцияСоединенияТипСоединения.РедактированиеТекста = Ложь;
	// bookmark
	//Элементы.ТекущаяКоллекцияСоединенияВыражение.РедактированиеТекста = Ложь;
	Элементы.ТекущаяКоллекцияСоединенияВыражение.КнопкаВыбора = Истина;
	Элементы.ТекущаяКоллекцияСоединенияВыражение.УстановитьДействие(""НачалоВыбора"", ""ТекущаяКоллекцияСоединенияВыражениеНачалоВыбора"");
	Элементы.ТекущаяКоллекцияСоединенияВыражение.МногострочныйРежим = Истина;
	
	Элементы.ТекущаяКоллекцияСоединенияТипСоединения.СписокВыбора.Добавить(""Левое внешнее"");
	Элементы.ТекущаяКоллекцияСоединенияТипСоединения.СписокВыбора.Добавить(""Правое внешнее"");
	Элементы.ТекущаяКоллекцияСоединенияТипСоединения.СписокВыбора.Добавить(""Полное внешнее"");
	Элементы.ТекущаяКоллекцияСоединенияТипСоединения.СписокВыбора.Добавить(""Внутреннее"");
	
	// Группировки
	
	Элементы.ТекущаяКоллекцияГруппировки.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	
	Элементы.ТекущаяКоллекцияГруппировкиВыражение.ТолькоПросмотр = Истина;
	
	// Отбор
	
	Элементы.ТекущаяКоллекцияОтбор.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияОтборВыражение.КнопкаВыбора = Истина;
	Элементы.ТекущаяКоллекцияОтборВыражение.УстановитьДействие(""НачалоВыбора"", ""ТекущаяКоллекцияОтборВыражениеНачалоВыбора"");
	Элементы.ТекущаяКоллекцияОтборВыражение.МногострочныйРежим = Истина;
	
	// Таблицы для изменения
	
	Элементы.ТекущаяКоллекцияТаблицыДляИзменения.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияТаблицыДляИзмененияИмяТаблицы.ТолькоПросмотр = Истина;
	
	// Параметры
	
	Элементы.ТекущаяКоллекцияПараметры.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	Элементы.ТекущаяКоллекцияПараметры.ИзменятьСоставСтрок = Ложь;
	Элементы.ТекущаяКоллекцияПараметры.ИзменятьПорядокСтрок = Ложь;
	
	Элементы.ТекущаяКоллекцияПараметрыИмя.ТолькоПросмотр = Истина;
	Элементы.ТекущаяКоллекцияПараметрыТипПараметра.ТолькоПросмотр = Истина;
	
	Элементы.ТекущаяКоллекцияПараметрыВыражение.КнопкаВыпадающегоСписка = Истина;
	Элементы.ТекущаяКоллекцияПараметрыВыражение.КнопкаОчистки = Истина;	
	Элементы.ТекущаяКоллекцияПараметрыВыражение.УстановитьДействие(""ПриИзменении"", ""ТекущаяКоллекцияПараметрыВыражениеПриИзменении"");	
	Элементы.ТекущаяКоллекцияПараметрыВыражение.УстановитьДействие(""НачалоВыбора"", ""ТекущаяКоллекцияПараметрыВыражениеНачалоВыбора"");
	Элементы.ТекущаяКоллекцияПараметрыВыражение.МногострочныйРежим = Истина;
	
	// Порядок
	
	Элементы.ТекущаяКоллекцияПорядок.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияПорядокКолонкаВыражение.РедактированиеТекста = Ложь;
	
	Элементы.ТекущаяКоллекцияПорядокНаправление.РежимВыбораИзСписка = Истина; 
	Элементы.ТекущаяКоллекцияПорядокНаправление.СписокВыбора.Добавить(""По возрастанию"");
	Элементы.ТекущаяКоллекцияПорядокНаправление.СписокВыбора.Добавить(""По возрастанию иерархии"");
	Элементы.ТекущаяКоллекцияПорядокНаправление.СписокВыбора.Добавить(""По убыванию"");
	Элементы.ТекущаяКоллекцияПорядокНаправление.СписокВыбора.Добавить(""По убывванию иерархии"");
	
	// ВыраженияИтогов
	
	Элементы.ТекущаяКоллекцияВыраженияИтогов.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияВыраженияИтоговПсевдоним.ТолькоПросмотр = Истина;
	
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.РедактированиеТекста = Ложь;
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.КнопкаВыпадающегоСписка = Истина;	
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.СписокВыбора.Добавить(""СУММА"");
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.СписокВыбора.Добавить(""МИНИМУМ"");
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.СписокВыбора.Добавить(""МАКСИМУМ"");
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.СписокВыбора.Добавить(""СРЕДНЕЕ"");
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.СписокВыбора.Добавить(""КОЛИЧЕСТВО"");
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.СписокВыбора.Добавить(""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ)"");
		
	Элементы.ТекущаяКоллекцияВыраженияИтоговФункция.УстановитьДействие(""ПриИзменении"", ""ТекущаяКоллекцияВыраженияИтоговФункцияПриИзменении"");
	
	// КонтрольныеТочкиИтогов
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтогов.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговКолонкаВыражение.РедактированиеТекста = Ложь;
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.РедактированиеТекста = Ложь;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.КнопкаВыпадающегоСписка = Истина;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.СписокВыбора.Добавить(""Элементы"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.СписокВыбора.Добавить(""Иерархия"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.СписокВыбора.Добавить(""Только иерархия"");
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.РедактированиеТекста = Ложь;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.КнопкаВыпадающегоСписка = Истина;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Без дополнения"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Год"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Полугодие"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Квартал"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Месяц"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Декада"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Неделя"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""День"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Минута"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Час"");
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.СписокВыбора.Добавить(""Секунда"");
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополнения.КнопкаВыпадающегоСписка = Истина;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополнения.КнопкаОчистки = Истина;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополнения.СписокВыбора.Добавить(""&НачалоПериода"");
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополнения.КнопкаВыпадающегоСписка = Истина;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополнения.КнопкаОчистки = Истина;
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополнения.СписокВыбора.Добавить(""&КонецПериода"");
	
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.Заголовок 		= ""Итоги"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипКонтрольнойТочки.Подсказка		= ""Тип контрольной точки"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.Заголовок 	= ""Дополнение"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговТипДополненияПериодами.Подсказка 	= ""Тип дополнения периодами"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополнения.Заголовок 	= ""Начало периода"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговНачалоПериодаДополнения.Подсказка	= ""Начало периода дополнения"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополнения.Заголовок 	= ""Конец периода"";
	Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтоговКонецПериодаДополнения.Подсказка		= ""Конец периода дополнения"";
	
	// Индекс
	
	Элементы.ТекущаяКоллекцияИндекс.Отображение = ОтображениеТаблицы.Список;
	
	Элементы.ТекущаяКоллекцияИндексКолонкаВыражение.ТолькоПросмотр = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ИсточникиДоступныеПоля

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ДобавитьТаблицу(Знач ТекДанныеИсточника)
	
	Оператор_ЗафиксироватьИзменение(""Источники"");
	
	НовСтр = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Добавить();	
	НовСтр.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.Источник;
	НовСтр.ТипИсточника		= ЭтотОбъект.ПеречислениеТипИсточника.ТаблицаСхемыЗапроса; 
	НовСтр.ИмяТаблицы 		= ТекДанныеИсточника.Имя;
	НовСтр.ТипТаблицы		= ТекДанныеИсточника.ТипТаблицы;
	НовСтр.Картинка 		= ТекДанныеИсточника.Картинка;
	
	ИсточникиДоступныеПоля_ДобавитьТаблицуСервер(ТекДанныеИсточника.Имя, НовСтр.ПолучитьИдентификатор());
	
	ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(ЭтотОбъект);
	
	ИсточникиДоступныеПоля_ПроверитьНеоднозначности();
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ДобавитьТаблицуСервер(Знач ИмяТаблицы, Знач ИдентификаторИсточника) 
	
	ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ИдентификаторИсточника);
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();	
	ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.Добавить(ИмяТаблицы);

	ТекДанные.Псевдоним = ИсточникСхемыЗапроса.Источник.Псевдоним;
	ТекДанные.Значение  = ТекДанные.Псевдоним;
	
	ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(ТекДанные, ИсточникСхемыЗапроса.Источник);
	
	Если ИсточникСхемыЗапроса.Источник.Параметры.Количество() > 0 Тогда
		КоллекцияПараметры_Заполнить(ИсточникСхемыЗапроса.Источник, ТекДанные.Картинка);
	КонецЕсли;
	
	КоллекцияСоединения_ОбновитьСоединенияПриемника(КурсорСЗ.Оператор, ИсточникСхемыЗапроса.Источник.Псевдоним);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ(Знач ИдентификаторИсточника = Неопределено)
	
	Если ИдентификаторИсточника <> Неопределено Тогда
		Результат = Оператор_ВыполнитьОператор(Истина);
	КонецЕсли;
	
	ПараметрыОткрытия = ОписаниеВТ_ПараметрыОткрытия(ИдентификаторИсточника);                                      
		
	ОткрытьФорму(ИмяФормыОбработки(""ОписаниеВТ""), ПараметрыОткрытия,
		ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор, , ,
		Новый ОписаниеОповещения(""ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ_Завершение"", ЭтотОбъект,
			Новый Структура(""ИдентификаторИсточника"", ИдентификаторИсточника)));
		
КонецПроцедуры
		
&НаКлиенте
Процедура ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оператор_ЗафиксироватьИзменение(""Источники"");
	
	Если ДополнительныеПараметры.ИдентификаторИсточника = Неопределено Тогда		
		ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Добавить();
		ТекДанные.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.Источник;
		ТекДанные.ТипИсточника 	= ЭтотОбъект.ПеречислениеТипИсточника.ОписаниеВременнойТаблицыСхемыЗапроса;	
	Иначе	
		ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторИсточника);
	КонецЕсли;
	
	ТекДанные.ИмяТаблицы 	= Результат.ИмяТаблицы;
	ТекДанные.Псевдоним		= Результат.Псевдоним;
	ТекДанные.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОписаниеВременнойТаблицы;
	ТекДанные.Значение 		= ТекДанные.Псевдоним;
		
	ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ_ЗавершениеСервер(Результат.ДоступныеПоля, ТекДанные.ПолучитьИдентификатор());
	
	ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(ЭтотОбъект);
	
	ИсточникиДоступныеПоля_ПроверитьНеоднозначности();
			
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ДобавитьИзменитьОписаниеВТ_ЗавершениеСервер(Знач АдресВХ, Знач ИдентификаторИсточника)
	
	ОписаниеВТ_ЗагрузитьДоступныеПоляВХ(АдресВХ, ИдентификаторИсточника);
	Оператор_ОбновитьИзСхемыЗапроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ПереименоватьИсточник(Знач ТекДанные)
	
	Результат = Оператор_ВыполнитьОператор(Истина);
	
	Оповещение = Новый ОписаниеОповещения(""ИсточникиДоступныеПоля_ПереименоватьИсточникЗавершение"", ЭтотОбъект, Новый Структура(""ИдентификаторИсточника"", ТекДанные.ПолучитьИдентификатор()));
	ПоказатьВводСтроки(Оповещение, ТекДанные.Псевдоним, ""Новый псевдоним"");
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ПереименоватьИсточникЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не (ТипЗнч(Результат) = Тип(""Строка"") И Не ПустаяСтрока(Результат)) Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторИсточника);
	Если Результат = ТекДанные.Псевдоним Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если Строка = ТекДанные Тогда
			Продолжить;
		КонецЕсли;
		Если Результат = Строка.Псевдоним Тогда
			Сообщить(""Повторящийся псевдоним"");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Оператор_ЗафиксироватьИзменение(""Источники"");
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияПараметры, ТекДанные.Псевдоним, ""Имя"");
	Если ИскомаяСтрока <> Неопределено Тогда
		ИскомаяСтрока.Имя = Результат;
	КонецЕсли;
	
	ИсточникиДоступныеПоля_ПереименоватьИсточникСервер(ТекДанные.Псевдоним, Результат);
	
	ТекДанные.Псевдоним = Результат;
	ТекДанные.Значение 	= Результат;
		
	ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(ЭтотОбъект);
	
	ИсточникиДоступныеПоля_ПроверитьНеоднозначности();
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ПереименоватьИсточникСервер(Знач СтарыйПсевдоним, Знач НовыйПсевдоним)
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();	
	ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.НайтиПоПсевдониму(СтарыйПсевдоним);
	ИсточникСхемыЗапроса.Источник.Псевдоним = НовыйПсевдоним;
	
	Оператор_ОбновитьИзСхемыЗапроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ЗаменитьИсточник(Знач ТекДанные)
	
	Результат = Оператор_ВыполнитьОператор(Истина);
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить(""ВременныеТаблицы"", ДеревоСхемыЗапроса_ВременныеТаблицы(ЭтотОбъект, ЭтотОбъект.ПараметрСтруктураСтроки.ИдентификаторЗапроса));
	Оповещение = Новый ОписаниеОповещения(""ИсточникиДоступныеПоля_ЗаменитьИсточникЗавершение"", ЭтотОбъект, Новый Структура());
	ОткрытьФорму(ИмяФормыОбработки(""ВыборТаблицы""), ПараметрыОткрытия, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор, , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ЗаменитьИсточникЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оператор_ЗафиксироватьИзменение(""Источники"");
	
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	ТекДанные.ИмяТаблицы 	= Результат.ИмяТаблицы;
	ТекДанные.ТипТаблицы 	= Результат.ТипТаблицы;
	ТекДанные.Картинка 		= Результат.Картинка;
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияПараметры, ТекДанные.Псевдоним, ""Имя"");
	Если ИскомаяСтрока <> Неопределено Тогда
		ЭтотОбъект.ТекущаяКоллекцияПараметры.ПолучитьЭлементы().Удалить(ИскомаяСтрока);
	КонецЕсли;
		
	ИсточникиДоступныеПоля_ЗаменитьИсточникСервер(Результат, ТекДанные.ПолучитьИдентификатор());
	
	ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(ЭтотОбъект);
	
	ИсточникиДоступныеПоля_ПроверитьНеоднозначности();
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ЗаменитьИсточникСервер(Знач Результат, Знач ИдентификаторИсточника) 
	
	ТекДанные = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ИдентификаторИсточника);
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.НайтиПоПсевдониму(ТекДанные.Псевдоним);
	Индекс = КурсорСЗ.Оператор.Источники.Индекс(ИсточникСхемыЗапроса);	
	ДоступнаяТаблица = КурсорСЗ.Запрос.ДоступныеТаблицы.Найти(Результат.ИмяТаблицы);
	КурсорСЗ.Оператор.Источники.Заменить(Индекс, ДоступнаяТаблица);
		
	Если ИсточникСхемыЗапроса.Источник.Параметры.Количество() > 0 Тогда
		КоллекцияПараметры_Заполнить(ИсточникСхемыЗапроса.Источник, Результат.Картинка);
	КонецЕсли;
	
	ТекДанные.Псевдоним 	= ИсточникСхемыЗапроса.Источник.Псевдоним;
	ТекДанные.Значение 		= ТекДанные.Псевдоним;
	
	ТекДанные.ПолучитьЭлементы().Очистить();	
	ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(ТекДанные, ИсточникСхемыЗапроса.Источник);
	
	Оператор_ОбновитьИзСхемыЗапроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_УдалитьИсточник(Знач ТекДанные)
	
	Оператор_ЗафиксироватьИзменение(""Источники"");
	
	Результат = Оператор_ВыполнитьОператор(Истина);
	
	ИндексТекДанных = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Индекс(ТекДанные);
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияПараметры, ТекДанные.Псевдоним, ""Имя"");
	Если ИскомаяСтрока <> Неопределено Тогда
		ЭтотОбъект.ТекущаяКоллекцияПараметры.ПолучитьЭлементы().Удалить(ИскомаяСтрока);
	КонецЕсли;
	
	ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Удалить(ИндексТекДанных);
	ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(ЭтотОбъект);
	
	ИсточникиДоступныеПоля_УдалитьИсточникСервер(ТекДанные.Псевдоним);
	
	ИсточникиДоступныеПоля_ПроверитьНеоднозначности();
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_УдалитьИсточникСервер(Знач Псевдоним)
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	КурсорСЗ.Оператор.Источники.Удалить(Псевдоним);
	
	Оператор_ОбновитьИзСхемыЗапроса();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ПроверитьНеоднозначности()
	
	МассивСтрок = Новый Массив();
	
	Для Каждого ТекДанные Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемыеПоля Тогда
			Продолжить;
		КонецЕсли;
		ТекМассивСтрок = ИсточникиДоступныеПоля_НайтиНеоднозначности(ТекДанные);
		ДобавитьМассив(МассивСтрок, ТекМассивСтрок);
	КонецЦикла;
	
	Если МассивСтрок.Количество() > 0 Тогда
		МассивСтрок.Вставить(0, Новый ФорматированнаяСтрока(""Обнаружены неоднозначности. Рекомендуется переименовать таблицу"", , WebЦвета.Красный));
		МассивСтрок.Вставить(1, Символы.ПС);
	КонецЕсли;
	
	ЕстьНеоднозначности = (МассивСтрок.Количество() > 0);
	Если ЕстьНеоднозначности Тогда
		Элементы.ДекорацияНеоднозначности.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	Иначе
		Элементы.ДекорацияНеоднозначности.Заголовок = """";
	КонецЕсли; 
	
	Элементы.ДекорацияНеоднозначности.Видимость = ЕстьНеоднозначности;
	
КонецПроцедуры

&НаКлиенте
Функция ИсточникиДоступныеПоля_НайтиНеоднозначности(Знач ТекДанные)
	
	МассивСтрок = Новый Массив();
	
	Для Каждого Источник Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если Источник = ТекДанные Или Источник.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемыеПоля Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого Поле Из Источник.ПолучитьЭлементы() Цикл
			Если Поле.Имя = ТекДанные.Псевдоним Тогда
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(""Таблица: "", Новый ФорматированнаяСтрока(ТекДанные.Псевдоним, , WebЦвета.ТемноСиний)));
				МассивСтрок.Добавить(Символы.ПС);
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(""Поле: "" + Источник.Псевдоним + ""."", Новый ФорматированнаяСтрока(Поле.Имя, , WebЦвета.ТемноСиний)));
				МассивСтрок.Добавить(Символы.ПС);
			КонецЕсли;                                                                                                                                 		
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивСтрок;
	
КонецФункции

#КонецОбласти

#Область ВыбираемыеПоля

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ИзменитьВыражение(Знач ТекДанные = Неопределено)
			
	ИндексВТ 		= Неопределено; // уже не нужно
	ИндексСтроки 	= Неопределено;
	Если ТекДанные <> Неопределено Тогда
		СтрокаВТ = ТекДанные.ПолучитьРодителя();
		Если СтрокаВТ = Неопределено Тогда
			ИндексВТ = Неопределено;
			ИндексСтроки  = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Индекс(ТекДанные);
		Иначе
			ИндексВТ = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Индекс(СтрокаВТ);
			ИндексСтроки  = СтрокаВТ.ПолучитьЭлементы().Индекс(ТекДанные);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаФормы 		= ""ВыбираемыеПоля"";
	Выражение 			= ?(ТекДанные <> Неопределено, ТекДанные.Выражение, Неопределено);
	Идентификатор		= ?(ТекДанные <> Неопределено, ТекДанные.ПолучитьИдентификатор(), Неопределено);
	ПараметрыОткрытия 	= НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, Выражение, Идентификатор);
	ПараметрыОткрытия.Вставить(""СтруктураВыражения"", Новый Структура(""ИндексСтроки,ИндексВТ"", ИндексСтроки, ИндексВТ));		                       
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);
			
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры)
	
	ЭтоИзменение = (ДополнительныеПараметры.Идентификатор <> Неопределено);	
	ТекДанные = ?(ДополнительныеПараметры.Идентификатор <> Неопределено, ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.НайтиПоИдентификатору(ДополнительныеПараметры.Идентификатор), Неопределено);
	ТекСтрока = Элементы.ТекущаяКоллекцияВыбираемыеПоля.ТекущиеДанные;
	
	СписокВТ 			= ИсточникиДоступныеПоля_СписокВТ();
	ПроверкаПриемника 	= ТекущаяКоллекцияВыбираемыеПоля_ПроверкаПриемника(СписокВТ, Результат.Выражение);
	
	Если ЭтоИзменение Тогда
		Если ПроверкаПриемника.Результат Тогда
			Если Не (ТекДанные.ПолучитьРодителя() <> Неопределено И ТекДанные.ПолучитьРодителя().Выражение = ПроверкаПриемника.ВыражениеПриемник) Тогда
				Сообщить(""Некорректная замена"");
				Возврат; // Отказ
			Иначе
				ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(ТекДанные, Результат); // Выражение принимается
			КонецЕсли;
		ИначеЕсли Результат.ЭтоВТ Тогда
			Если Не (ТекДанные.ПолучитьРодителя() = Неопределено) Тогда
				Сообщить(""Некорректная замена"");
				Возврат; // Отказ
			КонецЕсли;
			Если ЭтотОбъект.РежимЗамены И Не ТекДанные.ЭтоВТ Тогда
				Сообщить(""Некорректная замена"");
				Возврат; // Отказ
			КонецЕсли;
			ТаблицаПриемник = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, Результат.Выражение, ""Выражение"");
			Если Не (ТаблицаПриемник = Неопределено) Тогда
				Сообщить(""Добавление той же вложенной таблицы"");
				Возврат; // Отказ
			Иначе
				ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(ТекДанные, Результат); // Выражение принимается
			КонецЕсли;
		Иначе
			Если ЭтотОбъект.РежимЗамены И ТекДанные.ЭтоВТ Тогда // false
				Сообщить(""Некорректная замена"");
				Возврат; // Отказ
			КонецЕсли;
			ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(ТекДанные, Результат); // Выражение принимается
		КонецЕсли;
	Иначе
		Если ПроверкаПриемника.Результат Тогда
			ТаблицаПриемник = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ПроверкаПриемника.ВыражениеПриемник, ""Выражение"");
			Если ТаблицаПриемник = Неопределено Тогда
				ТаблицаПриемник = ТекущаяКоллекцияВыбираемыеПоля_ДобавитьВТ(ПроверкаПриемника.ВыражениеПриемник);
			КонецЕсли;
			НовСтр = ТаблицаПриемник.ПолучитьЭлементы().Добавить(); 
			ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(НовСтр, Результат); // Выражение принимается
		ИначеЕсли Результат.ЭтоВТ Тогда
			ТаблицаПриемник = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, Результат.Выражение, ""Выражение"");
			Если Не (ТаблицаПриемник = Неопределено) Тогда
				Сообщить(""Добавление той же вложенной таблицы"");
				Возврат; // Отказ
			Иначе
				НовСтр = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Добавить();
				ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(НовСтр, Результат); // Выражение принимается
			КонецЕсли;
		Иначе
			Дерево = ?(Не (ТекСтрока <> Неопределено И ТекСтрока.ПолучитьРодителя() <> Неопределено), ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ТекСтрока.ПолучитьРодителя());
			НовСтр = Дерево.ПолучитьЭлементы().Добавить();
			ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(НовСтр, Результат); // Выражение принимается
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Функция ТекущаяКоллекцияВыбираемыеПоля_ПроверкаПриемника(Знач СписокВТ, Знач Выражение)
	
	Для Каждого Значение Из СписокВТ Цикл
		Если СтрНайти(Выражение, Значение + ""."") > 0 Тогда
			Возврат Новый Структура(""Результат, ВыражениеПриемник"", Истина, Значение);
		КонецЕсли;
	КонецЦикла;   
	
	Возврат Новый Структура(""Результат, ВыражениеПриемник"", Ложь, """");	
	
КонецФункции

&НаКлиенте
Функция ТекущаяКоллекцияВыбираемыеПоля_ДобавитьВТ(Знач Выражение)
	
	ТаблицаПриемник = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Добавить();
	ТаблицаПриемник.Выражение = Выражение;
	ТаблицаПриемник.ЭтоВТ = Истина;
	ТекущаяКоллекцияВыбираемыеПоля_УстановитьПсевдоним(ТаблицаПриемник, Выражение);
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТаблицаПриемник);
	Возврат ТаблицаПриемник;
					
КонецФункции

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ПрисвоитьРезультатВыражения(Знач ТекДанные, Знач Результат)
	
	ЗаполнитьЗначенияСвойств(ТекДанные, Результат, , ""Псевдоним"");
	Если ПустаяСтрока(ТекДанные.Псевдоним) Тогда
		ТекДанные.Псевдоним = Результат.Псевдоним;
	КонецЕсли;
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
		
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	
	ТекДанные = Неопределено;	
	Если Идентификатор <> Неопределено Тогда
		ТекДанные = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.НайтиПоИдентификатору(Идентификатор);
	КонецЕсли;
	
	Сведения = ИсточникиДоступныеПоля_СведенияОЗначенииИсточника(Значение);
	
	Если Сведения.ТипПоля = ""Источник"" Тогда
		ТекущаяКоллекцияВыбираемыеПоля_ПеренестиИсточник(ТекДанныеИсточника, Значение, ТекДанные);
	ИначеЕсли Сведения.ТипПоля = ""ВТ"" Тогда
		ТекущаяКоллекцияВыбираемыеПоля_ПеренестиВТ(ТекДанныеИсточника, Значение, ТекДанные);
	ИначеЕсли Сведения.ТипПоля = ""ПолеВТ"" Тогда
		ТекущаяКоллекцияВыбираемыеПоля_ПеренестиПолеВТ(ТекДанныеИсточника, Значение, ТекДанные);
	Иначе
		ТекущаяКоллекцияВыбираемыеПоля_ПеренестиПолеИсточника(ТекДанныеИсточника, Значение, ТекДанные);
	КонецЕсли;	
		
КонецПроцедуры 

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ПеренестиИсточник(Знач ТекДанныеИсточника, Знач Значение, Знач ТекДанные)
	
	Если ЭтотОбъект.РежимЗамены Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора = 0 Тогда
		Для Каждого Строка Из ТекДанныеИсточника.ПолучитьЭлементы() Цикл
			// Исключаем вложенные таблицы
			Если Строка.ЭтоВТ Тогда
				Продолжить;
			КонецЕсли;
			НовСтр = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Добавить();
			ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(НовСтр, Значение + ""."" + Строка.Значение, ТекДанныеИсточника);
		КонецЦикла;
	Иначе // false
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ПеренестиВТ(Знач ТекДанныеИсточника, Знач Значение, Знач ТекДанные)
	
	Если ЭтотОбъект.РежимЗамены И ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора = 0 Тогда
		Если Не ЭтотОбъект.РежимЗамены Тогда
			ТаблицаПриемник = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, Значение, ""Выражение"");
			Если ТаблицаПриемник = Неопределено Тогда
				ТаблицаПриемник = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Добавить();
				ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначениеВТ(ТаблицаПриемник, Значение);
			КонецЕсли;
			Для Каждого СтрокаВТ Из ТекДанныеИсточника.ПолучитьЭлементы() Цикл
				НовСтрВТ = ТаблицаПриемник.ПолучитьЭлементы().Добавить();
				ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(НовСтрВТ, Значение + ""."" + СтрокаВТ.Значение, СтрокаВТ);
			КонецЦикла;
		Иначе
			ТекДанные.ПолучитьЭлементы().Очистить();
			ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначениеВТ(ТекДанные, Значение);
			Для Каждого СтрокаВТ Из ТекДанныеИсточника.ПолучитьЭлементы() Цикл
				НовСтрВТ = ТекДанные.ПолучитьЭлементы().Добавить();
				ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(НовСтрВТ, Значение + ""."" + СтрокаВТ.Значение, СтрокаВТ);
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если Не ТекДанные.ЭтоВТ Тогда
			Возврат;
		КонецЕсли;                                                                        
		ТекущаяКоллекцияВыбираемыеПоля_ОбнулитьЗначение(ТекДанные);
		ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначениеВТ(ТекДанные, Значение);
		Для Каждого СтрокаВТ Из ТекДанныеИсточника.ПолучитьЭлементы() Цикл
			ТекДанныеВТ = Форма_НайтиСтроку(ТекДанные, ""NULL"", ""Выражение"");
			Если ТекДанныеВТ <> Неопределено Тогда
				ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(ТекДанныеВТ, Значение + ""."" + СтрокаВТ.Значение, СтрокаВТ);
			Иначе
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ПеренестиПолеВТ(Знач ТекДанныеИсточника, Знач Значение, Знач ТекДанные)
	
	Если ЭтотОбъект.РежимЗамены И ТекДанные = Неопределено Тогда                                
		Возврат;
	КонецЕсли;
	
	МассивСтрок = СтрРазделить(Значение, ""."");
	ТаблицаВыражение = МассивСтрок[0] + ""."" + МассивСтрок[1];
	
	ТаблицаПриемник = Неопределено;
	Если ТекДанные <> Неопределено Тогда
		Если ТекДанные.Выражение = ТаблицаВыражение Тогда
			ТаблицаПриемник = ТекДанные;
		ИначеЕсли ТекДанные.ПолучитьРодителя() <> Неопределено И ТекДанные.ПолучитьРодителя().Выражение = ТаблицаВыражение Тогда
			ТаблицаПриемник = ТекДанные.ПолучитьРодителя();
		КонецЕсли;
	КонецЕсли;
	Если ТаблицаПриемник = Неопределено Тогда
		ТаблицаПриемник = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ТаблицаВыражение, ""Выражение"");
	КонецЕсли;
			
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора = 0 Тогда
		Если Не ЭтотОбъект.РежимЗамены Тогда
			Если ТаблицаПриемник = Неопределено Тогда
				ТаблицаПриемник = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Добавить();
				ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначениеВТ(ТаблицаПриемник, ТаблицаВыражение);
			КонецЕсли;
			НовСтрВТ = ТаблицаПриемник.ПолучитьЭлементы().Добавить();
			ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(НовСтрВТ, Значение, ТекДанныеИсточника);
		Иначе
			Если ТекДанные.ПолучитьРодителя() <> Неопределено И ТекДанные.ПолучитьРодителя().Выражение = ТаблицаВыражение Тогда
				ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(ТекДанные, Значение, ТекДанныеИсточника);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ТекДанные.ПолучитьРодителя() <> Неопределено И ТекДанные.ПолучитьРодителя().Выражение = ТаблицаВыражение Тогда
			ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(ТекДанные, Значение, ТекДанныеИсточника);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ПеренестиПолеИсточника(Знач ТекДанныеИсточника, Знач Значение, Знач ТекДанные)
	
	Если ЭтотОбъект.РежимЗамены И ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЭтотОбъект.РежимЗамены И ТекДанные.ПолучитьРодителя() <> Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора = 0 Тогда
		Если Не ЭтотОбъект.РежимЗамены Тогда
			НовСтр = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Добавить();
			ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(НовСтр, Значение, ТекДанныеИсточника);
		Иначе
			ТекДанные.ПолучитьЭлементы().Очистить();
			ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(ТекДанные, Значение, ТекДанныеИсточника);
		КонецЕсли;
	Иначе
		Если ТекДанные.ЭтоВТ Тогда
			Возврат;
		КонецЕсли;
		ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(ТекДанные, Значение, ТекДанныеИсточника);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначение(Знач ТекДанные, Знач Значение, Знач ТекДанныеИсточника)
	
	ТекДанные.Выражение 	= Значение;
	ТекДанные.ТипЗначения 	= ТекДанныеИсточника.ТипЗначения;
	ТекДанные.ЭтоВТ 		= ТекДанныеИсточника.ЭтоВТ;
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора = 0 Тогда
		ТекущаяКоллекцияВыбираемыеПоля_УстановитьПсевдоним(ТекДанные, Значение);
	КонецЕсли;
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанные);
			
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_УстановитьЗначениеВТ(Знач ТекДанные, Знач Значение)
	
	ТекДанные.Выражение = Значение;
	ТекДанные.ТипЗначения = Новый ОписаниеТипов();
	ТекДанные.ЭтоВТ = Истина;
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора = 0 Тогда
		ТекущаяКоллекцияВыбираемыеПоля_УстановитьПсевдоним(ТекДанные, Значение);
	КонецЕсли;
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанные);
			
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_ОбнулитьЗначение(Знач ТекДанныеПриемника)
	
	ТекДанныеПриемника.Выражение = ?(Не ТекДанныеПриемника.ЭтоВТ, ""NULL"", ""ПУСТАЯТАБЛИЦА"");
	ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанныеПриемника);
	Для Каждого ТекДанныеПриемникаВТ Из ТекДанныеПриемника.ПолучитьЭлементы() Цикл
		ТекДанныеПриемникаВТ.Выражение = ""NULL"";
		ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, ТекДанныеПриемникаВТ);
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыбираемыеПоля_УстановитьПсевдоним(Знач ТекДанные, Знач Значение)
	
	Значение = ТекстПослеТочкиСНачала(Значение);
	Если ТекДанные.ПолучитьРодителя() <> Неопределено Тогда
		Значение = ТекстПослеТочкиСНачала(Значение);
	КонецЕсли;
	Значение = СтрЗаменить(Значение, ""."", """");
	Дерево = ?(ТекДанные.ПолучитьРодителя() = Неопределено, ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ТекДанные.ПолучитьРодителя());
	ТекДанные.Псевдоним = """";
	ТекДанные.Псевдоним = КорректныйПсевдоним(Дерево.ПолучитьЭлементы(), Значение);
			
КонецПроцедуры

#КонецОбласти

#Область Соединения

&НаКлиентеНаСервереБезКонтекста
Процедура ТекущаяКоллекцияСоединения_ОбновитьСписокВыбора(Знач Форма)
	
	Форма.Элементы.ТекущаяКоллекцияСоединенияИсточник.СписокВыбора.Очистить();
	Форма.Элементы.ТекущаяКоллекцияСоединенияПриемник.СписокВыбора.Очистить();
	Для Каждого Строка Из Форма.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Форма.Элементы.ТекущаяКоллекцияСоединенияИсточник.СписокВыбора.Добавить(Строка.Значение);
		Форма.Элементы.ТекущаяКоллекцияСоединенияПриемник.СписокВыбора.Добавить(Строка.Значение);
	КонецЦикла;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ТекущаяКоллекцияСоединения_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле) Тогда
		Возврат;
	КонецЕсли;
	
	ПсевдонимИсточника = ТекстПередТочкойСНачала(Значение);
		
	Если Идентификатор = Неопределено Тогда
		ИскомаяСтрока = ЭтотОбъект.ТекущаяКоллекцияСоединения.ПолучитьЭлементы().Добавить();
		ИскомаяСтрока.Источник 			= ПсевдонимИсточника;
		ИскомаяСтрока.Выражение 		= Значение + "" = "";
		ИскомаяСтрока.ТипСоединения 	= ""Левое внешнее"";
	Иначе
		ИскомаяСтрока = ЭтотОбъект.ТекущаяКоллекцияСоединения.НайтиПоИдентификатору(Идентификатор);
		МассивСтрок = СтрРазделить(ИскомаяСтрока.Выражение, "" = "", Ложь);
		Если МассивСтрок.Количество() = 1 Тогда
			ИскомаяСтрока.Приемник 			= ПсевдонимИсточника;
			ИскомаяСтрока.Выражение 		= ИскомаяСтрока.Выражение + Значение;
		Иначе
			ИскомаяСтрока.Источник 			= ПсевдонимИсточника;
			ИскомаяСтрока.Выражение 		= Значение + "" = "";
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Группировки

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировки_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Или ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле) Тогда
		Возврат;
	КонецЕсли;
	
	Коллекция = ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы();
	
	Если Идентификатор <> Неопределено Тогда
		ИскомаяСтрока = ЭтотОбъект.ТекущаяКоллекцияГруппировки.НайтиПоИдентификатору(Идентификатор);
		Если ИскомаяСтрока.ПолучитьРодителя() <> Неопределено Тогда
			ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
		КонецЕсли;
	ИначеЕсли Коллекция.Количество() > 0 Тогда
		ИскомаяСтрока = Коллекция[Коллекция.Количество() - 1];
	Иначе
		ИскомаяСтрока = Коллекция.Добавить();
		ИскомаяСтрока.Выражение = ""Группировка 0"";
	КонецЕсли;
	
	НовСтр = ИскомаяСтрока.ПолучитьЭлементы().Добавить();
	НовСтр.Выражение = Значение;
	
	Элементы.ТекущаяКоллекцияГруппировки.Развернуть(ИскомаяСтрока.ПолучитьИдентификатор());
		
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияГруппировки_ЗаполнитьПоляСАФ()
	
	ЭтотОбъект.ТекущаяКоллекцияПоляСАФ.Очистить();
	Для Каждого Строка Из ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы() Цикл
		Если Строка.САФ Тогда
			НовСтр = ЭтотОбъект.ТекущаяКоллекцияПоляСАФ.Добавить();
			НовСтр.Выражение = Строка.Выражение; 
			НовСтр.Картинка  = ЭтотОбъект.ПеречислениеКартинки.Функция;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Отбор

&НаКлиенте
Процедура ТекущаяКоллекцияОтбор_ИзменитьВыражение()  
	
	ТекДанные = Элементы.ТекущаяКоллекцияОтбор.ТекущиеДанные;
	
	ТаблицаФормы = ""Отбор"";
	ПараметрыОткрытия = НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, ТекДанные.Выражение);		
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);
			
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияОтбор_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле) Тогда
		Возврат;
	КонецЕсли;
	
	Коллекция = ЭтотОбъект.ТекущаяКоллекцияОтбор.ПолучитьЭлементы();
	
	Если Идентификатор <> Неопределено Тогда
		ИскомаяСтрока = ЭтотОбъект.ТекущаяКоллекцияОтбор.НайтиПоИдентификатору(Идентификатор);
	Иначе
		ИскомаяСтрока = Коллекция.Добавить();
	КонецЕсли;
	
	Если Не (ТекДанныеИсточника.ТипЗначения.Типы().Количество() = 1 И ТекДанныеИсточника.ТипЗначения.Типы()[0] = Тип(""Булево"")) Тогда
		Значение = Значение + "" = &"" + ТекстПослеТочкиСКонца(ТекДанныеИсточника.Значение);
	КонецЕсли;
	
	ИскомаяСтрока.Выражение = Значение;
		
КонецПроцедуры

#КонецОбласти

#Область ТаблицыДляИзменения

&НаКлиенте
Процедура ТекущаяКоллекцияТаблицыДляИзменения_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Значение = ТекДанныеИсточника.ИмяТаблицы;
	
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник
		И ТекДанныеИсточника.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ТаблицаСхемыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанныеИсточника.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ВремТаблица Тогда
		Возврат;
	КонецЕсли;
    Если ТекДанныеИсточника.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть Тогда
		ИмяТабличнойЧасти = ТекстПослеТочкиСКонца(Значение);
		Значение = СтрЗаменить(Значение, ""."" + ИмяТабличнойЧасти, """");
	КонецЕсли;
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияТаблицыДляИзменения, Значение, ""ИмяТаблицы"");
	Если ИскомаяСтрока = Неопределено Тогда
		НовСтр = ЭтотОбъект.ТекущаяКоллекцияТаблицыДляИзменения.ПолучитьЭлементы().Добавить();
		НовСтр.ИмяТаблицы = Значение;
		НовСтр.Картинка = ТекДанныеИсточника.Картинка;
	КонецЕсли;
		
КонецПроцедуры
	
&НаСервере
Функция ТекущаяКоллекцияТаблицыДляИзменения_НайтиТаблицуДляИзменения(Знач ИмяТаблицы)
	
	Для Каждого Строка Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если Не (Строка.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.Источник
			И Строка.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ТаблицаСхемыЗапроса) Тогда
			Продолжить;
		КонецЕсли;
		Если Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ВремТаблица Тогда
			Продолжить;
		КонецЕсли;
		Если Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть Тогда
			Если СтрНачинаетсяС(Строка.ИмяТаблицы, ИмяТаблицы + ""."") Тогда
				Возврат Строка;
			КонецЕсли;
		Иначе
			Если Строка.ИмяТаблицы = ИмяТаблицы Тогда
				Возврат Строка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область Параметры

&НаСервере
Процедура ТекущаяКоллекцияПараметры_ИзменитьПериодичность(Знач Псевдоним)
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	
	ИсточникСхемыЗапроса  = Оператор.Источники.НайтиПоПсевдониму(Псевдоним);
	Источник = ИсточникСхемыЗапроса.Источник;
	
	СтрокаИсточник 	= Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияПараметры, Источник.Псевдоним, ""Имя"");
	СтрокаПараметр 	= Форма_НайтиСтроку(СтрокаИсточник, ""Периодичность"", ""Имя"");
	ИндексПараметра = СтрокаИсточник.ПолучитьЭлементы().Индекс(СтрокаПараметр);
	Источник.Параметры[ИндексПараметра].Выражение = Новый ВыражениеСхемыЗапроса(СтрокаПараметр.Выражение);
	
	СтрокаИсточник = Форма_НайтиСтроку(ЭтотОбъект.ИсточникиДоступныеПоля, Псевдоним, ""Значение"");	
	СтрокаИсточник.ПолучитьЭлементы().Очистить();
	
	ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(СтрокаИсточник, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область Порядок

&НаКлиенте
Процедура ТекущаяКоллекцияПорядок_ИзменитьВыражение(Знач ТекДанные = Неопределено)
	
	ТаблицаФормы 		= ""Порядок"";
	Выражение 			= ?(ТекДанные <> Неопределено, ТекДанные.КолонкаВыражение, Неопределено);
	Идентификатор		= ?(ТекДанные <> Неопределено, ТекДанные.ПолучитьИдентификатор(), Неопределено);
	ПараметрыОткрытия 	= НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, Выражение, Идентификатор);
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);
					
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядок_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры)
	
	ЭтоИзменение = (ДополнительныеПараметры.Идентификатор <> Неопределено);	
	ТекДанные = ?(ДополнительныеПараметры.Идентификатор <> Неопределено, ЭтотОбъект.ТекущаяКоллекцияПорядок.НайтиПоИдентификатору(ДополнительныеПараметры.Идентификатор), Неопределено);
	ТекСтрока = Элементы.ТекущаяКоллекцияПорядок.ТекущиеДанные;
	
	Если ЭтоИзменение Тогда
		ТекДанные.КолонкаВыражение 	= Результат.Выражение;
	Иначе
		ТекДанные = ЭтотОбъект.ТекущаяКоллекцияПорядок.ПолучитьЭлементы().Добавить();
		ТекДанные.Направление 		= ""По возрастанию"";                                   
		ТекДанные.КолонкаВыражение 	= Результат.Выражение;
		ТаблицаФормы_ЗаполнитьКолонкуВыражение(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияПорядок_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Или ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле) Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Тогда
		Значение = ТекДанныеИсточника.Псевдоним;
	КонецЕсли;
	
	Коллекция = ЭтотОбъект.ТекущаяКоллекцияПорядок.ПолучитьЭлементы();
	
	Если Идентификатор <> Неопределено Тогда
		ИскомаяСтрока = ЭтотОбъект.ТекущаяКоллекцияПорядок.НайтиПоИдентификатору(Идентификатор);
	Иначе
		ИскомаяСтрока = Коллекция.Добавить();
	КонецЕсли; 
	
	ИскомаяСтрока.КолонкаВыражение = Значение;
	ИскомаяСтрока.Направление = ""По возрастанию"";
	
	ТаблицаФормы_ЗаполнитьКолонкуВыражение(ИскомаяСтрока);
		
КонецПроцедуры

#КонецОбласти

#Область ВыраженияИтогов

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтогов_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанныеИсточника.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Тогда
		Возврат;
	КонецЕсли;
	
	Коллекция = ЭтотОбъект.ТекущаяКоллекцияВыраженияИтогов.ПолучитьЭлементы();
	
	Если Идентификатор <> Неопределено Тогда
		ТекДанные = ЭтотОбъект.ТекущаяКоллекцияВыраженияИтогов.НайтиПоИдентификатору(Идентификатор);
	Иначе
		ТекДанные = Коллекция.Добавить();
	КонецЕсли;
	
	ТекДанные.Псевдоним = ТекДанныеИсточника.Псевдоним;
	Если ТекДанныеИсточника.ТипЗначения.Типы().Количество() > 0
		И ТекДанныеИсточника.ТипЗначения.Типы()[0] = Тип(""Число"") Тогда
		ТекДанные.Функция = ""СУММА"";
	Иначе
		ТекДанные.Функция = ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ)"";		
	КонецЕсли;
	ТекущаяКоллекцияВыраженияИтоговПсевдонимФункцияПриИзменении(ТекДанные);
		
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияВыраженияИтоговПсевдонимФункцияПриИзменении(Знач ТекДанные)
	
	Если ТекДанные.Функция = ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ)"" Тогда
		ТекДанные.Выражение = ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "" + ТекДанные.Псевдоним + "")"";
	Иначе
		ТекДанные.Выражение = ТекДанные.Функция + ""("" + ТекДанные.Псевдоним + "")"";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольныеТочкиИтогов

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтогов_ИзменитьВыражение(Знач ТекДанные = Неопределено)
	
	ТаблицаФормы 		= ""КонтрольныеТочкиИтогов"";
	Выражение 			= ?(ТекДанные <> Неопределено, ТекДанные.КолонкаВыражение, Неопределено);
	Идентификатор		= ?(ТекДанные <> Неопределено, ТекДанные.ПолучитьИдентификатор(), Неопределено);
	ПараметрыОткрытия 	= НастройкаВыражения_ПараметрыОткрытия(ТаблицаФормы, Выражение, Идентификатор);
	НастройкаВыражения_ОткрытьФорму(ПараметрыОткрытия);

КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтогов_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры)
	
	ЭтоИзменение = (ДополнительныеПараметры.Идентификатор <> Неопределено);	
	ТекДанные = ?(ДополнительныеПараметры.Идентификатор <> Неопределено, ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов.НайтиПоИдентификатору(ДополнительныеПараметры.Идентификатор), Неопределено);
	ТекСтрока = Элементы.ТекущаяКоллекцияКонтрольныеТочкиИтогов.ТекущиеДанные;
	
	Если ЭтоИзменение Тогда
		ТекДанные.КолонкаВыражение 			= Результат.Выражение;
	Иначе
		ТекДанные = ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов.ПолучитьЭлементы().Добавить();                                  
		ТекДанные.КолонкаВыражение 			= Результат.Выражение; 
		ТекДанные.ТипКонтрольнойТочки 		= ""Элементы"";
		ТекДанные.ТипДополненияПериодами 	= ""Без дополнения"";
		ТаблицаФормы_ЗаполнитьКолонкуВыражение(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяКоллекцияКонтрольныеТочкиИтогов_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Или ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле) Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Тогда
		Значение = ТекДанныеИсточника.Псевдоним;
	КонецЕсли;
	
	Коллекция = ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов.ПолучитьЭлементы();
	
	Если Идентификатор <> Неопределено Тогда
		ТекДанные = ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов.НайтиПоИдентификатору(Идентификатор);
	Иначе
		ТекДанные = Коллекция.Добавить();
	КонецЕсли;

	ТекДанные.КолонкаВыражение 			= Значение;
	ТекДанные.ТипКонтрольнойТочки 		= ""Элементы"";
	ТекДанные.ТипДополненияПериодами 	= ""Без дополнения"";
	
	ТаблицаФормы_ЗаполнитьКолонкуВыражение(ТекДанные);	
		
КонецПроцедуры

#КонецОбласти

#Область Индекс

&НаКлиенте
Процедура ТекущаяКоллекцияИндекс_ПеренестиЗначение(Знач Значение, Знач Идентификатор = Неопределено)
	
	ТекДанныеИсточника = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если Не (ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Или ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле) Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанныеИсточника.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Тогда
		Значение = ТекДанныеИсточника.Псевдоним;
	КонецЕсли;
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияИндекс, Значение, ""КолонкаВыражение"");
	Если ИскомаяСтрока = Неопределено Тогда
		НовСтр = ЭтотОбъект.ТекущаяКоллекцияИндекс.ПолучитьЭлементы().Добавить();
		НовСтр.КолонкаВыражение = Значение;
		ТаблицаФормы_ЗаполнитьКолонкуВыражение(НовСтр);
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область ОписаниеВТ

&НаСервере
Функция ОписаниеВТ_ПараметрыОткрытия(Знач ИдентификаторИсточника = Неопределено)
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить(""СхемаЗапросаВХ"", 			ЭтотОбъект.СхемаЗапросаВХ); 
	ПараметрыОткрытия.Вставить(""ПараметрСтруктураСтроки"", 	ЭтотОбъект.ПараметрСтруктураСтроки);
	ПараметрыОткрытия.Вставить(""Источники"", 				ОписаниеВТ_ПоместитьИсточникиВХ());
	Если ИдентификаторИсточника <> Неопределено Тогда
		Строка = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ИдентификаторИсточника);	
		ПараметрыОткрытия.Вставить(""ИмяТаблицы"", 	Строка.ИмяТаблицы);
		ПараметрыОткрытия.Вставить(""Псевдоним"", 	Строка.Псевдоним);
		ПараметрыОткрытия.Вставить(""ДоступныеПоля"", ОписаниеВТ_ПоместитьДоступныеПоляВХ(ИдентификаторИсточника));
	КонецЕсли;
	
	Возврат ПараметрыОткрытия;

КонецФункции

&НаСервере
Функция ОписаниеВТ_ПоместитьИсточникиВХ()
	
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить(""Псевдоним"");
	
	Коллекция = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы();
	
	Для Каждого Строка Из Коллекция Цикл
		Если Строка.ТипСтроки = ""ВыбираемыеПоля"" Тогда
			Продолжить;
		КонецЕсли;
		НовСтр = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Строка);
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТЗ);
	
КонецФункции

&НаСервере
Функция ОписаниеВТ_ПоместитьДоступныеПоляВХ(Знач ИдентификаторИсточника)
	
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить(""Имя"");
	ТЗ.Колонки.Добавить(""ТипЗначения"");
	
	Коллекция = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ИдентификаторИсточника).ПолучитьЭлементы();
	
	Для Каждого Строка Из Коллекция Цикл
		НовСтр = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Строка);
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТЗ);
	
КонецФункции

&НаСервере
Процедура ОписаниеВТ_ЗагрузитьДоступныеПоляВХ(Знач АдресВХ, Знач ИдентификаторИсточника)
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресВХ);
	
	СтрокаИсточник = ЭтотОбъект.ИсточникиДоступныеПоля.НайтиПоИдентификатору(ИдентификаторИсточника);
	СтрокаИсточник.ПолучитьЭлементы().Очистить();
	
	Для Каждого Строка Из ТЗ Цикл
		НовСтр = СтрокаИсточник.ПолучитьЭлементы().Добавить();
		НовСтр.Имя 			= Строка.Имя;
		НовСтр.ТипЗначения 	= Строка.ТипЗначения;
		НовСтр.Картинка 	= БиблиотекаКартинок.Реквизит;
		НовСтр.Значение 	= Строка.Имя;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Оператор

&НаКлиенте
Процедура Оператор_ЗафиксироватьИзменение(Источник)
	
	ЭтотОбъект.ОператорИзменения.ЕстьИзменения = Истина;
	
КонецПроцедуры

&НаСервере
Функция Оператор_ВыполнитьОператор(Знач ТаблицаФормы = """")
	
	Попытка
		Результат = Оператор_ВыполнитьОператорВнутр(ТаблицаФормы);
	Исключение                    
		Результат = Новый Структура(""Результат,ТекстЗапроса"", Ложь, """");
		Результат.ТекстЗапроса = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Если Результат.Результат Тогда          
		ЭтотОбъект.ОператорТекстИсключения = """";
		Элементы.ДекорацияТекстИсключения.Заголовок = """";
	Иначе                                         
		ЭтотОбъект.ОператорТекстИсключения = Результат.ТекстЗапроса;
		МассивСтрок = Новый Массив();
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(""Возникло исключение при обработке запроса"", , ЦветаСтиля.ЦветОсобогоТекста));
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Результат.ТекстЗапроса);
		Элементы.ДекорацияТекстИсключения.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	КонецЕсли;
	Элементы.ДекорацияТекстИсключения.Видимость = Не Результат.Результат;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция Оператор_ВыполнитьОператорВнутр(Знач ТаблицаФормы)
	
	ЭтоАктуализация = Не ПустаяСтрока(ТаблицаФормы);
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	СхемаЗапроса 	= КурсорСЗ.СхемаЗапроса;
	Запрос 			= КурсорСЗ.Запрос;
	Оператор 		= КурсорСЗ.Оператор;
	ИндексОператора = ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора;
	КоличествоОператоров = ЭтотОбъект.ПараметрСтруктураСтроки.КоличествоОператоров;
	ЭтоЗапросПакета = ЭтотОбъект.ПараметрСтруктураСтроки.ЭтоЗапросПакета;
	ЕстьВТ 			= Не (Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, Истина, ""ЭтоВТ"") = Неопределено);
	
	// Свойства оператора
	Оператор.ВыбиратьРазличные = ЭтотОбъект.СвойстваОператораВыбиратьРазличные;
	Если ЭтотОбъект.СвойстваОператораВыбиратьПервые Тогда
		Оператор.КоличествоПолучаемыхЗаписей = ЭтотОбъект.СвойстваОператораКоличествоПолучаемыхЗаписей;
	Иначе
		Оператор.КоличествоПолучаемыхЗаписей = Неопределено;
	КонецЕсли; 
	Оператор.ВыбиратьДляИзменения = ЭтотОбъект.СвойстваОператораВыбиратьДляИзменения;
	Если ЭтотОбъект.СвойстваОператораСворачивать Тогда
		Оператор.ТипОбъединения = ТипОбъединенияСхемыЗапроса.Объединить;
	КонецЕсли;
	
	Если Не ЭтоАктуализация Тогда
		
		// Соединения
		КонструкторСЗ_ЗаполнитьСоединения(Оператор);
		
		// Группировки
		Оператор.Группировки.Очистить(); // bookmark
		КонструкторСЗ_ЗаполнитьГруппировки(Оператор);
		
		// Отбор
		Оператор.Отбор.Очистить();
		КонструкторСЗ_ЗаполнитьОтбор(Оператор);
		
		// Параметры
		Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл 
			КонструкторСЗ_ЗаполнитьПараметрыИсточника(ИсточникСхемыЗапроса.Источник);
		КонецЦикла;
		
		// Таблицы для изменения
		Оператор.ТаблицыДляИзменения.Очистить();
		КонструкторСЗ_ЗаполнитьТаблицыДляИзменения(Оператор);
		
	КонецЕсли;
	
	// ВыбираемыеПоля
	Если КоличествоОператоров > 1 Тогда
		Для Каждого Строка Из ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы() Цикл
			Строка[""Выражение"" + ИндексОператора] = Строка.Выражение;
			Для Каждого СтрокаВТ Из Строка.ПолучитьЭлементы() Цикл
				СтрокаВТ[""Выражение"" + ИндексОператора] = СтрокаВТ.Выражение;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
	Если КоличествоОператоров > 1 И (ИндексОператора = 0 Или ЕстьВТ) Тогда
		ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
		Если ПустаяСтрока(ТекстЗапроса) Тогда
			Оператор.ВыбираемыеПоля.Добавить(""NULL"");
			ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
		КонецЕсли;         
		Если Не (ЭтоАктуализация И ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Количество() = 0) Тогда
			ТекстЗапроса = КонструкторСЗ_ЗаменитьТекстВыборкиЗапроса(ТекстЗапроса, КоличествоОператоров); 
		КонецЕсли;
		Запрос.УстановитьТекстЗапроса(ТекстЗапроса);
		Оператор = Запрос.Операторы[ИндексОператора];
	ИначеЕсли ЕстьВТ Тогда
		ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
		Если ПустаяСтрока(ТекстЗапроса) Тогда
			Оператор.ВыбираемыеПоля.Добавить(""NULL"");
			ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
		КонецЕсли;
		Если Не (ЭтоАктуализация И ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Количество() = 0) Тогда
			ТекстЗапроса = КонструкторСЗ_ЗаменитьТекстВыборкиОператора(ТекстЗапроса, ИндексОператора);
		КонецЕсли;
		Запрос.УстановитьТекстЗапроса(ТекстЗапроса);
		Оператор = Запрос.Операторы[ИндексОператора];
	Иначе
		Оператор.ВыбираемыеПоля.Очистить();
		КонструкторСЗ_ЗаполнитьВыбираемыеПоля(Запрос, Оператор, ИндексОператора);
	КонецЕсли;
	
	Если ЭтоЗапросПакета Тогда
		
		// Свойства запроса
		Запрос.ВыбиратьРазрешенные 	= ЭтотОбъект.СвойстваЗапросаВыбиратьРазрешенные;
		Запрос.Автопорядок 			= ЭтотОбъект.СвойстваЗапросаАвтопорядок;
		Запрос.ОбщиеИтоги 			= ЭтотОбъект.СвойстваЗапросаОбщиеИтоги;
		Запрос.ТаблицаДляПомещения	= ЭтотОбъект.СвойстваЗапросаТаблицаДляПомещения;
		
	КонецЕсли;
	
	Если Не ЭтоАктуализация Или ТаблицаФормы = ""Порядок"" Тогда 
		// Порядок
		Запрос.Порядок.Очистить();
		КонструкторСЗ_ЗаполнитьПорядок(Запрос);
	КонецЕсли;
	
	Если ЭтоЗапросПакета Тогда
		
		Если Не ЭтоАктуализация Тогда
			// ВыраженияИтогов
			Запрос.ВыраженияИтогов.Очистить();
			КонструкторСЗ_ЗаполнитьВыраженияИтогов(Запрос);
		КонецЕсли;
		
		Если Не ЭтоАктуализация Или ТаблицаФормы = ""КонтрольныеТочкиИтогов"" Тогда
			// КонтрольныеТочкиИтогов
			Запрос.КонтрольныеТочкиИтогов.Очистить();
			КонструкторСЗ_ЗаполнитьКонтрольныеТочкиИтогов(Запрос);
		КонецЕсли;
		
		Если Не ЭтоАктуализация Тогда
			// Индекс
			Запрос.Индекс.Очистить();
			КонструкторСЗ_ЗаполнитьИндекс(Запрос);
		КонецЕсли;
		
	КонецЕсли;
	
	//Текст запроса может быть изменен+
	Если Не ЭтоАктуализация Тогда
		ТекстЗапроса = Запрос.ПолучитьТекстЗапроса();
		Запрос.УстановитьТекстЗапроса(ТекстЗапроса);
	КонецЕсли;
	//Текст запроса может быть изменен-
	
	Результат = Новый Структура(""Результат,ТекстЗапроса"", Истина, Запрос.ПолучитьТекстЗапроса());
	
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура Оператор_ЗаполнитьИзСхемыЗапроса()
	
	СтруктураСтроки = ЭтотОбъект.ПараметрСтруктураСтроки;
	
	КурсорСЗ 	= СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	
	Если СтруктураСтроки.ЭтоЗапросПакета Тогда
		ЭтотОбъект.СвойстваЗапросаВыбиратьРазрешенные 	= Запрос.ВыбиратьРазрешенные;
		ЭтотОбъект.СвойстваЗапросаАвтопорядок 			= Запрос.Автопорядок;        
		ЭтотОбъект.СвойстваЗапросаОбщиеИтоги 			= Запрос.ОбщиеИтоги;
		ЭтотОбъект.СвойстваЗапросаТаблицаДляПомещения	= Запрос.ТаблицаДляПомещения;
	Иначе
		ЭтотОбъект.СвойстваЗапросаВыбиратьРазрешенные = Ложь;
		ЭтотОбъект.СвойстваЗапросаАвтопорядок = Ложь;
		ЭтотОбъект.СвойстваЗапросаОбщиеИтоги = Ложь;
		ЭтотОбъект.СвойстваЗапросаТаблицаДляПомещения = """";
	КонецЕсли;
	
	ЭтотОбъект.СвойстваОператораВыбиратьРазличные 				= Оператор.ВыбиратьРазличные;
	ЭтотОбъект.СвойстваОператораВыбиратьПервые 					= Не (Оператор.КоличествоПолучаемыхЗаписей = Неопределено);
	ЭтотОбъект.СвойстваОператораКоличествоПолучаемыхЗаписей 	= ?(Оператор.КоличествоПолучаемыхЗаписей = Неопределено, 0, Оператор.КоличествоПолучаемыхЗаписей);
	ЭтотОбъект.СвойстваОператораВыбиратьДляИзменения			= Оператор.ВыбиратьДляИзменения;
	ЭтотОбъект.СвойстваОператораСворачивать 					= ?(Оператор.ТипОбъединения = ТипОбъединенияСхемыЗапроса.Объединить, Истина, Ложь);
	
	ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияСоединения.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияОтбор.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияПараметры.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияТаблицыДляИзменения.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияПорядок.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияВыраженияИтогов.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияИндекс.ПолучитьЭлементы().Очистить();
	
	ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоля(Оператор);
	КоллекцияВыбираемыеПоля_ЗаполнитьИзСхемыЗапроса(Запрос, СтруктураСтроки.ИндексОператора);
	Если СтруктураСтроки.КоличествоОператоров > 1 Тогда
		КоллекцияВыбираемыеПоля_ЗаполнитьВыраженияОператоров(Запрос, СтруктураСтроки.КоличествоОператоров, СтруктураСтроки.ИндексОператора);
	КонецЕсли;
	КоллекцияСоединения_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияГруппировки_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияОтбор_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияПараметры_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияТаблицыДляИзменения_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияПорядок_ЗаполнитьИзСхемыЗапроса(Запрос);
	Если СтруктураСтроки.ЭтоЗапросПакета Тогда
		КоллекцияВыраженияИтогов_ЗаполнитьИзСхемыЗапроса(Запрос);
		КоллекцияКонтрольныеТочкиИтогов_ЗаполнитьИзСхемыЗапроса(Запрос);
		КоллекцияИндекс_ЗаполнитьИзСхемыЗапроса(Запрос);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Оператор_ОбновитьИзСхемыЗапроса()
	
	КурсорСЗ 	= СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
		
	ЭтотОбъект.ТекущаяКоллекцияСоединения.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияГруппировки.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияОтбор.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияПорядок.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияВыраженияИтогов.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов.ПолучитьЭлементы().Очистить();
	ЭтотОбъект.ТекущаяКоллекцияИндекс.ПолучитьЭлементы().Очистить();
	
	КоллекцияВыбираемыеПоля_ОбновитьИзСхемыЗапроса(Запрос, ЭтотОбъект.ПараметрСтруктураСтроки.ИндексОператора);
	КоллекцияСоединения_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияГруппировки_ЗаполнитьИзСхемыЗапроса(Оператор, Истина);
	КоллекцияОтбор_ЗаполнитьИзСхемыЗапроса(Оператор);
	КоллекцияПорядок_ЗаполнитьИзСхемыЗапроса(Запрос);
	Если ЭтотОбъект.ПараметрСтруктураСтроки.ЭтоЗапросПакета Тогда
		КоллекцияВыраженияИтогов_ЗаполнитьИзСхемыЗапроса(Запрос);
		КоллекцияКонтрольныеТочкиИтогов_ЗаполнитьИзСхемыЗапроса(Запрос);
		КоллекцияИндекс_ЗаполнитьИзСхемыЗапроса(Запрос);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область НастройкаВыражения

&НаКлиенте
Процедура НастройкаВыражения_ОткрытьФорму(Знач ПараметрыОткрытия)
	
	НужноОбновитьОператор = Ложь;
	Если ПараметрыОткрытия.ТаблицаФормы = ""ВыбираемыеПоля""
		Или ПараметрыОткрытия.ТаблицаФормы = ""Порядок""
		Или ПараметрыОткрытия.ТаблицаФормы = ""КонтрольныеТочкиИтогов"" Тогда
		НужноОбновитьОператор = Истина;
	КонецЕсли;
	
	Если НужноОбновитьОператор Тогда
		Результат = Оператор_ВыполнитьОператор(Истина);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура(""ТаблицаФормы,Идентификатор"", ПараметрыОткрытия.ТаблицаФормы, ПараметрыОткрытия.Идентификатор);
	ОткрытьФорму(ИмяФормыОбработки(""Выражение""), ПараметрыОткрытия,
		ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор, , ,
		Новый ОписаниеОповещения(""НастройкаВыражения_ИзменитьВыражениеЗавершение"", ЭтотОбъект, ДополнительныеПараметры));
			
КонецПроцедуры

&НаКлиенте
Функция НастройкаВыражения_ПараметрыОткрытия(Знач ТаблицаФормы, Знач Выражение = """", Знач Идентификатор = Неопределено)
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить(""ТаблицаФормы"",			ТаблицаФормы);
	ПараметрыОткрытия.Вставить(""Выражение"",				Выражение);
	ПараметрыОткрытия.Вставить(""Идентификатор"",			Идентификатор);
	ПараметрыОткрытия.Вставить(""Источники"",				НастройкаВыражения_ПоместитьИсточникиВХ());
	ПараметрыОткрытия.Вставить(""СхемаЗапросаВХ"", 		ЭтотОбъект.СхемаЗапросаВХ);
	ПараметрыОткрытия.Вставить(""ПараметрСтруктураСтроки"", ЭтотОбъект.ПараметрСтруктураСтроки);
		
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаКлиенте
Функция НастройкаВыражения_ПоместитьИсточникиВХ()
	
	ТЗ = Новый Массив();
	
	Для Каждого Строка Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если Строка.ТипСтроки = ""ВыбираемыеПоля"" Тогда
			Продолжить;
		КонецЕсли;
		НовСтр = Новый Структура(""Картинка,ТипИсточника,ИмяТаблицы,Псевдоним,ТипТаблицы,Значение"");
		ЗаполнитьЗначенияСвойств(НовСтр, Строка);
		ТЗ.Добавить(НовСтр);	
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции

&НаКлиенте
Процедура НастройкаВыражения_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТаблицаФормы 	= ДополнительныеПараметры.ТаблицаФормы;
	Идентификатор 	= ДополнительныеПараметры.Идентификатор;
	ТекДанные 		= ?(ДополнительныеПараметры.Идентификатор <> Неопределено, ЭтотОбъект[""ТекущаяКоллекция"" + ТаблицаФормы].НайтиПоИдентификатору(ДополнительныеПараметры.Идентификатор), Неопределено);
	ТекСтрока 		= Элементы[""ТекущаяКоллекция"" + ТаблицаФормы].ТекущиеДанные;
	Дерево 			= ЭтотОбъект[""ТекущаяКоллекция"" + ТаблицаФормы];
	
	Оператор_ЗафиксироватьИзменение(ТаблицаФормы);
	
	Если ТаблицаФормы = ""ВыбираемыеПоля"" Тогда
		ТекущаяКоллекцияВыбираемыеПоля_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры);	
	ИначеЕсли ТаблицаФормы = ""Соединения"" Тогда		
		ТекДанные.Выражение = Результат.Выражение;
	ИначеЕсли ТаблицаФормы = ""Отбор"" Тогда
		ТекДанные.Выражение = Результат.Выражение;
	ИначеЕсли ТаблицаФормы = ""Параметры"" Тогда
		ТекДанные.Выражение = Результат.Выражение;
	ИначеЕсли ТаблицаФормы = ""Порядок"" Тогда
		ТекущаяКоллекцияПорядок_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры);
	ИначеЕсли ТаблицаФормы = ""КонтрольныеТочкиИтогов"" Тогда
		ТекущаяКоллекцияКонтрольныеТочкиИтогов_ИзменитьВыражениеЗавершение(Результат, ДополнительныеПараметры);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ЭтотОбъект.ОператорТекстИсключения) Тогда
		Результат = Оператор_ВыполнитьОператор(ТаблицаФормы);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////
// Служебные функции

#Область Форма

&НаКлиентеНаСервереБезКонтекста
Функция Форма_НайтиСтроку(Знач Дерево, Знач Значение, Знач ИмяКолонки)
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если Строка[ИмяКолонки] = Значение Тогда
			Возврат Строка;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Функция ИмяФормыОбработки(Знач Имя)
	
	ТипМетаданных = ?(СтрНачинаетсяС(ЭтотОбъект.ИмяФормы, ""ВнешняяОбработка""), ""ВнешняяОбработка"", ""Обработка"");
	Возврат ТипМетаданных + "".bm_КонсольЗапросов.Форма."" + Имя;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьМассив(Знач Источник, Знач Приемник)
	
	Для Каждого Элемент Из Приемник Цикл
		Источник.Добавить(Элемент);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеКоллекций

&НаСервере
Процедура ОписаниеКоллекций_Заполнить()
	
	ОписаниеКоллекций_ДобавитьОписание(""КритерииОтбора"", 			""КритерийОтбора"", 			БиблиотекаКартинок.КритерийОтбора);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыОбмена"", 				""ПланОбмена"", 				БиблиотекаКартинок.ПланОбмена, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Константы"", 				""Константа"", 				БиблиотекаКартинок.Константа);
	ОписаниеКоллекций_ДобавитьОписание(""Справочники"", 				""Справочник"", 				БиблиотекаКартинок.Справочник, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Документы"", 				""Документ"", 				БиблиотекаКартинок.Документ, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Последовательности"", 		""Последовательность"", 		ЭтотОбъект.ПеречислениеКартинки.Последовательность);
	ОписаниеКоллекций_ДобавитьОписание(""ЖурналыДокументов"", 		""ЖурналДокументов"", 		БиблиотекаКартинок.ЖурналДокументов);
	ОписаниеКоллекций_ДобавитьОписание(""Перечисления"", 				""Перечисление"", 			БиблиотекаКартинок.Перечисление);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыВидовХарактеристик"", 	""ПланВидовХарактеристик"", 	БиблиотекаКартинок.ПланВидовХарактеристик, 	Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыСчетов"", 				""ПланСчетов"", 				БиблиотекаКартинок.ПланСчетов, 				Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыВидовРасчета"", 		""ПланВидовРасчета"", 		БиблиотекаКартинок.ПланВидовРасчета, 		Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыСведений"", 			""РегистрСведений"", 			БиблиотекаКартинок.РегистрСведений);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыНакопления"", 		""РегистрНакопления"", 		БиблиотекаКартинок.РегистрНакопления);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыБухгалтерии"", 		""РегистрБухгалтерии"", 		БиблиотекаКартинок.РегистрБухгалтерии);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыРасчета"", 			""РегистрРасчета"", 			БиблиотекаКартинок.РегистрРасчета);
	ОписаниеКоллекций_ДобавитьОписание(""Перерасчеты"", 				""Перерасчет"", 				БиблиотекаКартинок.Обновить);
	ОписаниеКоллекций_ДобавитьОписание(""БизнесПроцессы"", 			""БизнесПроцесс"", 			БиблиотекаКартинок.БизнесПроцесс, 			Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Задачи"", 					""Задача"", 					БиблиотекаКартинок.Задача, 					Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ВнешниеИсточникиДанных"", 	""ВнешнийИсточникДанных"", 	БиблиотекаКартинок.ВнешнийИсточникДанных, 	Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОписаниеКоллекций_ДобавитьОписание(Знач ИмяМнч, Знач ИмяЕдч, Знач Картинка, Знач ЕстьТЧ = Ложь, Знач ЕстьСТЧ = Ложь)
	
	НовСтр = ЭтотОбъект.ОписаниеКоллекций.Добавить();
	НовСтр.ИмяМнч 	= ИмяМнч;
	НовСтр.ИмяЕдч 	= ИмяЕдч;
	НовСтр.Картинка = Картинка;
	НовСтр.ЕстьТЧ 	= ЕстьТЧ;
	НовСтр.ЕстьСТЧ 	= ЕстьСТЧ;
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоТаблиц

&НаСервере
Процедура ДеревоТаблиц_Заполнить()
	
	СхемаЗапроса = Новый СхемаЗапроса();
	
	ДоступныеТаблицы = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы;
	Для Каждого СтрокаИсточник0 Из ДоступныеТаблицы Цикл
		Если ТипЗнч(СтрокаИсточник0) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
			Продолжить;
		КонецЕсли;
		СтруктураОтбора = Новый Структура(""ИмяМнч"", СтрокаИсточник0.Представление);
		МассивСтрок = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора);
		Если МассивСтрок.Количество() = 0 Тогда
			Если Метаданные.ВнешниеИсточникиДанных.Найти(СтрокаИсточник0.Представление) <> Неопределено Тогда
				ДеревоТаблиц_ЗаполнитьВнешнийИсточникДанных(СтрокаИсточник0);
			КонецЕсли;
			Продолжить;		
		КонецЕсли;
		СтрокаОписания  = МассивСтрок[0];
		СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.ПолучитьЭлементы().Добавить();
		СтрокаПриемник0.Значение 	= СтрокаИсточник0.Представление;
		СтрокаПриемник0.Картинка	= СтрокаОписания.Картинка;
		//ДеревоТаблиц_ЗаполнитьКоллекциюВариант0(СтрокаПриемник0, СтрокаИсточник0, СтрокаОписания)
		//ДеревоТаблиц_ЗаполнитьКоллекциюВариант1(СтрокаПриемник0, СтрокаИсточник0, СтрокаОписания);
		СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
		СтрокаПриемник1.Значение 	= ""@"";
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант0(Знач СтрокаПриемник0, Знач СтрокаИсточник0, Знач СтрокаОписания)
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		Поз = СтрНайти(СтрокаИсточник1.Имя, ""."", , , 2);
		Если Поз > 0 Тогда
			Продолжить;
		КонецЕсли;
		Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
		СтрокаПриемник1 = СтрокаПриемник0.Строки.Добавить();
		СтрокаПриемник1.ЭтоИсточник	= Истина;
		СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		СтрокаПриемник1.Значение 	= Значение;	
		СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
		СтрокаПриемник1.Псевдоним	= Значение;
		СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;			
		СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
		СтрокаПриемник2.Значение 	= ""@"";
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант1(Знач СтрокаПриемник0, Знач СтрокаИсточник0, Знач СтрокаОписания)
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		
		Поз = СтрНайти(СтрокаИсточник1.Имя, ""."", , , 2);
		Если Поз = 0 Тогда
			Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник1 = СтрокаПриемник0.Строки.Добавить();
			СтрокаПриемник1.ЭтоИсточник	= Истина;
			СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			СтрокаПриемник1.Значение 	= Значение;	
			СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
			СтрокаПриемник1.Псевдоним	= Значение;
			СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;
			
			Значение1 = СтрокаПриемник1.Значение;
			Значение0 = СтрокаПриемник0.Значение;
			
			Если СтрокаОписания.ЕстьТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ""."") Тогда
				Продолжить;
			КонецЕсли;
			
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
			СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
			Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, "".Изменения"") Тогда
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
				СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
			Иначе
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
				СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
			КонецЕсли;
				
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант2(Знач Идентификатор)
	
	СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Идентификатор);
	Значение0		= СтрокаПриемник0.Значение;
	
	СтруктураОтбора = Новый Структура(""ИмяМнч"", Значение0);
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора)[0];
	
	СхемаЗапроса = Новый СхемаЗапроса();
	Для Каждого СтрокаИсточник0 Из СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы Цикл
		Если ТипЗнч(СтрокаИсточник0) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаИсточник0.Представление = Значение0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Возможно, зависит от версии платформы
	// Если первая таблица не константы, надо добавить в эту ветку 
	Если Значение0 = ""Константы"" Тогда
		Если Не (СтрокаИсточник0.Состав[0].Имя = ""Константы"") Тогда
			ИскомаяТаблица = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы.Найти(""Константы"");
			Если ТипЗнч(ИскомаяТаблица) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
				СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
				СтрокаПриемник1.ЭтоИсточник	= Истина;
				СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
				СтрокаПриемник1.Значение 	= ""Константы"";	
				СтрокаПриемник1.Имя			= ""Константы"";
				СтрокаПриемник1.Псевдоним	= ""Константы"";
				СтрокаПриемник1.Картинка	= БиблиотекаКартинок.Константа;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		
		Поз = СтрНайти(СтрокаИсточник1.Имя, ""."", , , 2);
		Если Поз = 0 Тогда
			Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
			СтрокаПриемник1.ЭтоИсточник	= Истина;
			СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			СтрокаПриемник1.Значение 	= Значение;	
			СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
			СтрокаПриемник1.Псевдоним	= Значение;
			СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;
			
			Значение1 = СтрокаПриемник1.Значение;
			Значение0 = СтрокаПриемник0.Значение;
			
			Если СтрокаОписания.ЕстьТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаОписания.ЕстьСТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].СтандартныеТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаИсточник0.Представление = ""РегистрыРасчета"" Тогда
				ДеревоТаблиц_ЗаполнитьПерерасчет(СтрокаПриемник1);
			КонецЕсли;
			
		Иначе
			
			Если СтрокаИсточник0.Представление = ""Перерасчеты"" Тогда
				Если СтрНачинаетсяС(СтрокаИсточник1.Имя, ""РегистрРасчета."") Тогда
					СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
					СтрокаПриемник1.ЭтоИсточник	= Истина;
					СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
					СтрокаПриемник1.Значение 	= ТекстПослеТочкиСНачала(СтрокаИсточник1.Имя);	
					СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
					СтрокаПриемник1.Псевдоним	= СтрЗаменить(СтрокаПриемник1.Значение, ""."", """");
					СтрокаПриемник1.Картинка	= БиблиотекаКартинок.РегистрРасчета;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ""."") Тогда
				Продолжить;
			КонецЕсли;
			
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
			СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
			Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, "".Изменения"") Тогда
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
				СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
			Иначе
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
				СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
			КонецЕсли;
				
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьПерерасчет(Знач СтрокаПриемник1)
	
	Коллекция = Метаданные.РегистрыРасчета[СтрокаПриемник1.Значение].Перерасчеты;
	Если Коллекция.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
	СтрокаПриемник2.Значение = ""Перерасчеты"";
	СтрокаПриемник2.Картинка = БиблиотекаКартинок.Обновить;
	
	Для Каждого ОМ Из Метаданные.РегистрыРасчета[СтрокаПриемник1.Значение].Перерасчеты Цикл
		СтрокаПриемник3 = СтрокаПриемник2.ПолучитьЭлементы().Добавить();
		СтрокаПриемник3.ЭтоИсточник	= Истина;
		СтрокаПриемник3.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		СтрокаПриемник3.Значение 	= ОМ.Имя;	
		СтрокаПриемник3.Имя			= СтрокаПриемник1.Имя + ""."" + ОМ.Имя;
		СтрокаПриемник3.Псевдоним	= СтрокаПриемник1.Псевдоним + ОМ.Имя;
		СтрокаПриемник3.Картинка	= БиблиотекаКартинок.РегистрРасчета;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьСостав(Знач Идентификатор)
	
	СтрокаПриемник1 = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Идентификатор);
	Значение1 = СтрокаПриемник1.Значение;
	Значение0 = СтрокаПриемник1.ПолучитьРодителя().Значение;
	
	СтруктураОтбора = Новый Структура(""ИмяМнч"", Значение0);
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора)[0];
	
	Если СтрокаОписания.ЕстьТЧ Тогда
		Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
			СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
			СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
			СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
			СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
		КонецЦикла;
	КонецЕсли;	
	
	СхемаЗапроса = Новый СхемаЗапроса();                                                  
	// ?
	// Состав = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы.Найти(Представление).Состав
	Для Каждого ГруппаДоступныхТаблицСхемыЗапроса Из СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы Цикл
		Если ГруппаДоступныхТаблицСхемыЗапроса.Представление = Значение0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;		
	Состав = ГруппаДоступныхТаблицСхемыЗапроса.Состав;
	
	// ?
	// Состав.Индекс(Состав.Найти(ТекДанные.Имя))
	Итер = 0;
	Для Каждого ДоступнаяТаблицаСхемыЗапроса Из Состав Цикл
		Если ДоступнаяТаблицаСхемыЗапроса.Имя = СтрокаПриемник1.Имя Тогда
			Прервать;
		КонецЕсли;
		Итер = Итер + 1;
	КонецЦикла;
	Итер = Итер + 1;
		
	Пока Итер < Состав.Количество() Цикл
		СтрокаИсточник1 = Состав[Итер];
		Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ""."") Тогда
			Прервать;
		КонецЕсли;
		Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
		СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
		СтрокаПриемник2.ЭтоИсточник	= Истина;
		СтрокаПриемник2.Значение 	= Значение2;			
		СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
		СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
		Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, "".Изменения"") Тогда
			СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
			СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
		Иначе
			СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
			СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
		КонецЕсли;
		Итер = Итер +1 ;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьВнешнийИсточникДанных(Знач СтрокаИсточник1) 
	
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(Новый Структура(""ИмяМнч"", ""ВнешниеИсточникиДанных""))[0];
	
	СтрокаПриемник0 = Форма_НайтиСтроку(ЭтотОбъект.ДеревоТаблиц, ""ВнешниеИсточникиДанных"", ""Значение"");
	Если СтрокаПриемник0 = Неопределено Тогда
		СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.ПолучитьЭлементы().Добавить();
		СтрокаПриемник0.Значение 	= СтрокаОписания.ИмяМнч;
		СтрокаПриемник0.Картинка	= СтрокаОписания.Картинка;
	КонецЕсли;
	
	СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
	СтрокаПриемник1.Значение = СтрокаИсточник1.Представление;
	СтрокаПриемник1.Картинка = СтрокаОписания.Картинка;
		
	Для Каждого СтрокаИсточник2 Из СтрокаИсточник1.Состав Цикл
		Если ТипЗнч(СтрокаИсточник2) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник2.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник2.Имя;			
			СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Значение + Значение2;
			Если СтрНайти(СтрокаИсточник2.Имя, "".Куб."") > 0 Тогда
				СтрокаПриемник2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхКуб;
			ИначеЕсли СтрНайти(СтрокаИсточник2.Имя, "".Таблица."") > 0 Тогда
				СтрокаПриемник2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
			КонецЕсли;
		ИначеЕсли ТипЗнч(СтрокаИсточник2) = Тип(""ГруппаДоступныхТаблицСхемыЗапроса"") Тогда
			Представление2  = ТекстПередТочкойСНачала(СтрокаИсточник2.Представление) + ""ТаблицаИзмерения"";
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.Значение 	= СтрокаИсточник2.Представление;
			СтрокаПриемник2.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
			Для Каждого СтрокаИсточникЗ Из СтрокаИсточник2.Состав Цикл
				Значение3 = ТекстПослеТочкиСКонца(СтрокаИсточникЗ.Имя);
				СтрокаПриемник3 = СтрокаПриемник2.ПолучитьЭлементы().Добавить();
				СтрокаПриемник3.ЭтоИсточник	= Истина;
				СтрокаПриемник3.Значение 	= Значение3;			
				СтрокаПриемник3.Имя 		= СтрокаИсточникЗ.Имя;			
				СтрокаПриемник3.Псевдоним 	= СтрокаПриемник1.Значение + Представление2 + Значение3;
				СтрокаПриемник3.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоТаблиц_ЗаполнитьВременныеТаблицы(Знач Форма, Знач МассивЗначений)
	
	Значение 	= ""Временные таблицы"";	
	Коллекция 	= Форма.ДеревоТаблиц.ПолучитьЭлементы();
	Строка 		= Коллекция[Коллекция.Количество() - 1];
	
	Если Строка.Значение = Значение Тогда
		Коллекция.Удалить(Строка);
	КонецЕсли;
	
	НовСтр0 = Коллекция.Добавить();
	НовСтр0.Значение = Значение;
	НовСтр0.Картинка = БиблиотекаКартинок.КонструкторЗапросаГруппаВременныхТаблиц;
	Коллекция = НовСтр0.ПолучитьЭлементы();
	Для Каждого Значение Из МассивЗначений Цикл
		НовСтр1 = Коллекция.Добавить();
		НовСтр1.Значение 	= Значение;
		НовСтр1.Имя 		= Значение;
		НовСтр1.Псевдоним 	= Значение;
		НовСтр1.ЭтоИсточник = Истина;
		НовСтр1.ТипТаблицы	= Форма.ПеречислениеТипТаблицы.ВремТаблица;
		НовСтр1.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаВременнаяТаблица;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ИсточникиДоступныеПоля

&НаКлиенте
Процедура ИсточникиДоступныеПоля_РазвернутьДоступныеПоля()
	
	ТекДанные = Элементы.ИсточникиДоступныеПоля.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.ТипСтроки <> ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле Тогда
		Возврат;
	КонецЕсли;
	
	Коллекция = ТекДанные.ПолучитьЭлементы();
	
	Если Коллекция.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
		
	МассивЗначений = Новый Массив();
	
	ИскомаяСтрока = ТекДанные;
	Пока ИскомаяСтрока <> Неопределено Цикл
		МассивЗначений.Добавить(ИскомаяСтрока.Значение);
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЦикла;
	
	Если МассивЗначений.Количество() > 1 Тогда
		МассивДоступныхПолей = ИсточникиДоступныеПоля_МассивДоступныхПолей(МассивЗначений);
		Для Каждого Структура Из МассивДоступныхПолей Цикл
			НовСтр = Коллекция.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Структура);
			Если Не НовСтр.ЭтоВТ Тогда
				НовСтр.Картинка = БиблиотекаКартинок.Реквизит; 
			Иначе     
				НовСтр.Картинка = БиблиотекаКартинок.ВложеннаяТаблица;
			КонецЕсли;
		КонецЦикла;
		Элементы.ИсточникиДоступныеПоля.Развернуть(ТекДанные.ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоля(Знач Оператор)
	
	Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
		Источник = ИсточникСхемыЗапроса.Источник;
		
		НовСтр = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы().Добавить();
		НовСтр.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.Источник;	
		НовСтр.Псевдоним 		= Источник.Псевдоним;
		НовСтр.Значение 		= Источник.Псевдоним;
		
		Если ТипЗнч(Источник) = Тип(""ТаблицаСхемыЗапроса"") Тогда
			НовСтр.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ТаблицаСхемыЗапроса;
			НовСтр.ИмяТаблицы 	= Источник.ИмяТаблицы;                      
			ТаблицаФормы_УстановитьТипКартинкуТаблицы(НовСтр);				
		ИначеЕсли ТипЗнч(Источник) = Тип(""ВложенныйЗапросСхемыЗапроса"") Тогда
			НовСтр.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ВложенныйЗапросСхемыЗапроса;		
			НовСтр.ИмяТаблицы 	= ""ВложенныйЗапрос"";
			НовСтр.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаВложенныйЗапрос;
		ИначеЕсли ТипЗнч(Источник) = Тип(""ОписаниеВременнойТаблицыСхемыЗапроса"") Тогда
			НовСтр.ТипИсточника = ЭтотОбъект.ПеречислениеТипИсточника.ОписаниеВременнойТаблицыСхемыЗапроса;
			НовСтр.ИмяТаблицы 	= Источник.ИмяТаблицы;
			НовСтр.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаОписаниеВременнойТаблицы;
		КонецЕсли;		
		
		ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(НовСтр, Источник);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляИсточника(Знач Строка, Знач Источник)
	
	Для Каждого ДоступноеПоле Из Источник.ДоступныеПоля Цикл
		НовСтр = Строка.ПолучитьЭлементы().Добавить();
		НовСтр.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле;
		НовСтр.Имя 			= ДоступноеПоле.Имя;
		НовСтр.Значение 	= ДоступноеПоле.Имя;
		Если ТипЗнч(ДоступноеПоле) = Тип(""ДоступнаяВложеннаяТаблицаСхемыЗапроса"") Тогда
			НовСтр.ЭтоВТ = Истина;
			Для Каждого ДоступноеПолеВТ Из ДоступноеПоле.Поля Цикл
				НовСтрВТ = НовСтр.ПолучитьЭлементы().Добавить();
				НовСтрВТ.ТипСтроки 		= ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле;
				НовСтрВТ.Имя 			= ДоступноеПолеВТ.Имя;
				НовСтрВТ.Значение 		= ДоступноеПолеВТ.Имя;
				НовСтрВТ.ТипЗначения 	= ДоступноеПолеВТ.ТипЗначения;
				ТаблицаФормы_УстановитьКартинкуДоступногоПоля(НовСтрВТ, ДоступноеПолеВТ);
			КонецЦикла;
		Иначе
			НовСтр.ТипЗначения = ДоступноеПоле.ТипЗначения;
		КонецЕсли;
		ТаблицаФормы_УстановитьКартинкуДоступногоПоля(НовСтр, ДоступноеПоле);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ИсточникиДоступныеПоля_ЗаполнитьДоступныеПоляУсловия(Знач ТекДанные, Знач ДоступныеПоля)
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();	
	ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.НайтиПоПсевдониму(ТекДанные.Псевдоним);
	
	Для Каждого ДоступноеПоле Из ИсточникСхемыЗапроса.Источник.ДоступныеПоля Цикл
		Если ДоступныеПоля.НайтиПоЗначению(ДоступноеПоле.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НовСтр = ТекДанные.ПолучитьЭлементы().Добавить();
		НовСтр.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле;
		НовСтр.Имя			= ДоступноеПоле.Имя;
		НовСтр.Значение 	= ДоступноеПоле.Имя;
		// Не обязательно?
		Если ТипЗнч(ДоступноеПоле) = Тип(""ДоступнаяВложеннаяТаблицаСхемыЗапроса"") Тогда
			НовСтр.ЭтоВТ = Истина;
		Иначе
			НовСтр.ТипЗначения = ДоступноеПоле.ТипЗначения;
		КонецЕсли;
		ТаблицаФормы_УстановитьКартинкуДоступногоПоля(НовСтр, ДоступноеПоле);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИсточникиДоступныеПоля_МассивДоступныхПолей(Знач МассивЗначений)
	
	Результат = Новый Массив();
	
	КурсорСЗ = СхемаЗапроса_ПолучитьКурсорСЗ();
	Запрос 		= КурсорСЗ.Запрос;
	Оператор 	= КурсорСЗ.Оператор;
	
	Псевдоним = МассивЗначений[МассивЗначений.Количество() - 1];
	ИсточникСхемыЗапроса = Оператор.Источники.НайтиПоПсевдониму(Псевдоним);
	ДоступныеПоля = ИсточникСхемыЗапроса.Источник.ДоступныеПоля;
	
	Если ДоступныеПоля.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Итер = МассивЗначений.Количество() - 2;
	
	Пока Итер >= 0 Цикл
		ДоступноеПоле = ДоступныеПоля.Найти(МассивЗначений[Итер]);
		ДоступныеПоля = ДоступноеПоле.Поля;
		Если Итер = 0 Тогда
			Для Каждого ДоступноеПоле Из ДоступныеПоля Цикл
				Структура = Новый Структура(""ТипСтроки, Значение, ЭтоВТ, ТипЗначения"", ЭтотОбъект.ПеречислениеТипСтроки.ДоступноеПоле, ДоступноеПоле.Имя);
				// Не обязательно?
				Если ТипЗнч(ДоступноеПоле) = Тип(""ДоступнаяВложеннаяТаблицаСхемыЗапроса"") Тогда
					Структура.ЭтоВТ = Истина;
				Иначе
					Структура.ТипЗначения = ДоступноеПоле.ТипЗначения;
				КонецЕсли;
				Результат.Добавить(Структура);			
			КонецЦикла;
			Возврат Результат;
		КонецЕсли;
		Итер = Итер - 1;		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Функция ИсточникиДоступныеПоля_ВыражениеДоступногоПоля(Знач ТекДанные)
	
	Если ТекДанные.ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле Тогда
		Возврат ТекДанные.Значение;
	КонецЕсли;	
	
	МассивЗначений = Новый Массив();	
	СодержитВТ     = Ложь;
	
	ИскомаяСтрока = ТекДанные;
	Пока ИскомаяСтрока <> Неопределено Цикл
		МассивЗначений.Добавить(ИскомаяСтрока.Значение);
		ИскомаяСтрока = ИскомаяСтрока.ПолучитьРодителя();
	КонецЦикла;
	
	Значение = """";
	Итер = МассивЗначений.Количество() - 1;
	ПерваяСтрока = Истина;
	Пока Итер >= 0 Цикл
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
		Иначе
			Значение = Значение + ""."";
		КонецЕсли;
		Значение = Значение + МассивЗначений[Итер];
		Итер = Итер - 1;
	КонецЦикла;
	
	Если Найти(ЭтотОбъект.ИмяФормы, ""Выражение"") > 0 И ЭтотОбъект.ТаблицаФормы = ""Параметры"" Тогда
		Значение = ТекстПослеТочкиСНачала(Значение);
		Значение = Значение + "" = &"" + ТекстПослеТочкиСКонца(Значение);
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

&НаКлиенте
Функция ИсточникиДоступныеПоля_СведенияОЗначенииИсточника(Знач Значение)
	
	Результат = Новый Структура(""Источник,ВТ,ТипПоля"", """", """", """");
	
	МассивСтрок = СтрРазделить(Значение, ""."");
	
	Для Каждого СтрокаИсточник Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Если СтрокаИсточник.Значение = МассивСтрок[0] Тогда
			Результат.Источник = МассивСтрок[0];
			Если МассивСтрок.Количество() = 1 Тогда
				Результат.ТипПоля = ""Источник"";
				Возврат Результат;
			КонецЕсли;
			Для Каждого Строка Из СтрокаИсточник.ПолучитьЭлементы() Цикл
				Если Строка.Значение = МассивСтрок[1] Тогда
					Если Не Строка.ЭтоВТ Тогда
						Результат.ТипПоля = ""ПолеИсточника"";
					Иначе
						Результат.ВТ = МассивСтрок[1];
						Если МассивСтрок.Количество() = 2 Тогда
							Результат.ТипПоля = ""ВТ"";	         							
						Иначе
							Результат.ТипПоля = ""ПолеВТ""; 
						КонецЕсли;
					КонецЕсли;
					Возврат Результат;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ИсточникиДоступныеПоля_ОтобразитьВыбираемыеПоля(Знач Отображать)
	
	Коллекция = ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы();
	
	Если Отображать Тогда
		Если Элементы.ГруппаСвойства.ТекущаяСтраница = Элементы.ГруппаГруппировки Тогда
			ИмяКолонки = ""Выражение"";
		Иначе
			ИмяКолонки = ""Псевдоним"";
		КонецЕсли;
		Если Коллекция.Количество() > 0 И Коллекция[0].ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемыеПоля Тогда
			Для Каждого Строка Из Коллекция[0].ПолучитьЭлементы() Цикл
				Строка.Значение = Строка[ИмяКолонки];
			КонецЦикла;
			Возврат;
		КонецЕсли;
		СтрокаИсточник = Коллекция.Вставить(0);         
		СтрокаИсточник.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемыеПоля;
		СтрокаИсточник.Значение 	= ""Выбираемые поля"";
		СтрокаИсточник.Картинка 	= БиблиотекаКартинок.РежимПросмотраСпискаСписок;
		Для Каждого Строка Из ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы() Цикл
			Если Строка.ЭтоВТ Тогда
				Продолжить;
			КонецЕсли;
			НовСтр = СтрокаИсточник.ПолучитьЭлементы().Добавить();
			НовСтр.ТипСтроки 	= ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемоеПоле;
			НовСтр.Выражение 	= Строка.Выражение;
			НовСтр.Псевдоним 	= Строка.Псевдоним;
			НовСтр.Значение 	= Строка[ИмяКолонки];
			НовСтр.Картинка 	= Строка.Картинка;
			НовСтр.ТипЗначения 	= Строка.ТипЗначения;
			НовСтр.САФ 			= Строка.САФ;
		КонецЦикла;
		Элементы.ИсточникиДоступныеПоля.Развернуть(СтрокаИсточник.ПолучитьИдентификатор());
		Элементы.ИсточникиДоступныеПоля.ТекущаяСтрока = СтрокаИсточник.ПолучитьИдентификатор();
	Иначе
		Если Коллекция.Количество() > 0 И Коллекция[0].ТипСтроки = ЭтотОбъект.ПеречислениеТипСтроки.ВыбираемыеПоля Тогда
			Коллекция.Удалить(0);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИсточникиДоступныеПоля_СписокВТ()
	
	Резт = Новый Массив();
	Для Каждого СтрокаИсточник Из ЭтотОбъект.ИсточникиДоступныеПоля.ПолучитьЭлементы() Цикл
		Для Каждого СтрокаПоле Из СтрокаИсточник.ПолучитьЭлементы() Цикл
			Если СтрокаПоле.ЭтоВТ Тогда
				Резт.Добавить(СтрокаИсточник.Значение + ""."" + СтрокаПоле.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат Резт;
	
КонецФункции

#КонецОбласти

#Область СхемаЗапроса

&НаСервере
Функция СхемаЗапроса_ПолучитьКурсорСЗ()
	
	Возврат СхемаЗапроса_КурсорСЗ(ЭтотОбъект.СхемаЗапросаВХ, ЭтотОбъект.ПараметрСтруктураСтроки);
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_КурсорСЗ(Знач АдресВХ, Знач СтруктураСтроки)
	
	Результат = Новый Структура();
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	ЗапросПакета 	= СхемаЗапроса.ПакетЗапросов[СтруктураСтроки.ИндексЗапроса]; 
	КурсорОператора = СхемаЗапроса_КурсорОператора(ЗапросПакета, СтруктураСтроки.ПозицияОператора);
	Результат.Вставить(""СхемаЗапроса"", 	СхемаЗапроса);
	Результат.Вставить(""ЗапросПакета"", 	ЗапросПакета);
	Результат.Вставить(""Запрос"", 		КурсорОператора.Запрос);
	Результат.Вставить(""Оператор"", 		КурсорОператора.Оператор);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_КурсорОператора(Знач Запрос, Знач ПозицияОператора, ТекПозицияОператора = 0)
	
	Для Каждого Оператор Из Запрос.Операторы Цикл
		Если ТекПозицияОператора = ПозицияОператора Тогда
			Возврат Новый Структура(""Запрос, Оператор"", Запрос, Оператор);
		КонецЕсли;
		ТекПозицияОператора = ТекПозицияОператора + 1;
		Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
			Если ТипЗнч(ИсточникСхемыЗапроса.Источник) = Тип(""ВложенныйЗапросСхемыЗапроса"") Тогда
				Оператор = СхемаЗапроса_КурсорОператора(ИсточникСхемыЗапроса.Источник.Запрос, ПозицияОператора, ТекПозицияОператора);
				Если Оператор <> Неопределено Тогда
					Возврат Оператор;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СхемаЗапроса_ДобавитьЗапросВыбора(Знач АдресВХ)
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	СхемаЗапроса.ПакетЗапросов.Добавить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_ДобавитьВложенныйЗапрос(Знач АдресВХ, Знач СтруктураСтроки, Псевдоним)
	
	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	ИсточникСхемыЗапроса = КурсорСЗ.Оператор.Источники.Добавить(Тип(""ВложенныйЗапросСхемыЗапроса""));
	Псевдоним = ИсточникСхемыЗапроса.Источник.Псевдоним;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_ДобавитьЗапросУничтожения(Знач АдресВХ, Знач ИмяТаблицы)
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	Запрос = СхемаЗапроса.ПакетЗапросов.Добавить(Тип(""ЗапросУничтоженияТаблицыСхемыЗапроса""));
	Запрос.ИмяТаблицы = ИмяТаблицы;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_УдалитьЗапрос(Знач АдресВХ, Знач СтруктураСтроки)
	
	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	КурсорСЗ.СхемаЗапроса.ПакетЗапросов.Удалить(СтруктураСтроки.ИндексЗапроса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_ДобавитьОператор(Знач АдресВХ, Знач СтруктураСтроки)
	
	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	КурсорСЗ.Запрос.Операторы.Добавить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_УдалитьОператор(Знач АдресВХ, Знач СтруктураСтроки)
	
	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	КурсорСЗ.Запрос.Операторы.Удалить(СтруктураСтроки.ИндексОператора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_СкопироватьЗапрос(Знач АдресВХ, Знач СтруктураСтроки)
	
	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	КурсорСЗ.СхемаЗапроса.ПакетЗапросов.ДобавитьКопию(СтруктураСтроки.ИндексЗапроса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_СкопироватьОператор(Знач АдресВХ, Знач СтруктураСтроки)
	
	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	КурсорСЗ.Запрос.Операторы.Добавить(КурсорСЗ.Оператор);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_ПереместитьЗапрос(Знач АдресВХ, Знач СтруктураСтроки, Знач Смещение)

	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	СхемаЗапроса.ПакетЗапросов.Сдвинуть(СтруктураСтроки.ИндексЗапроса, Смещение); 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СхемаЗапроса_ПереместитьОператор(Знач АдресВХ, Знач СтруктураСтроки, Знач Смещение)

	КурсорСЗ = СхемаЗапроса_КурсорСЗ(АдресВХ, СтруктураСтроки);
	КурсорСЗ.Запрос.Операторы.Сдвинуть(СтруктураСтроки.ИндексОператора, Смещение);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СхемаЗапроса_ТекстЗапроса(Знач СхемаЗапроса, Знач ИндексЗапроса)
	
	Элемент = СхемаЗапроса.ПакетЗапросов[ИндексЗапроса];
	
	Если ТипЗнч(Элемент) = Тип(""ЗапросВыбораСхемыЗапроса"") Тогда
		Текст = СхемаЗапроса.ПакетЗапросов[ИндексЗапроса].ПолучитьТекстЗапроса(); 
	ИначеЕсли ТипЗнч(Элемент) = Тип(""ЗапросУничтоженияТаблицыСхемыЗапроса"") Тогда
		Текст = ""УНИЧТОЖИТЬ "" + Элемент.ИмяТаблицы;
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_ТекстСхемыЗапроса(Знач АдресВХ)
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	Возврат Текст;
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_УстановитьТекстЗапроса(Знач АдресВХ, Знач ИндексЗапроса, Знач Текст)
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	СхемаЗапроса.ПакетЗапросов[ИндексЗапроса].УстановитьТекстЗапроса(Текст);
	
КонецФункции

&НаСервереБезКонтекста
Функция СхемаЗапроса_ТекстПоТекущийЗапрос(Знач АдресВХ, Знач ИндексЗапроса)
	
	Разделитель = 
	""
	|;
    |
	|////////////////////////////////////////////////////////////////////////////////"";
	
	СхемаЗапроса = ПолучитьИзВременногоХранилища(АдресВХ);
	Результат = """";
	Для Индекс = 0 По ИндексЗапроса Цикл
		Элемент = СхемаЗапроса.ПакетЗапросов[Индекс];
		Если ТипЗнч(Элемент) = Тип(""ЗапросВыбораСхемыЗапроса"") Тогда
			Текст = Элемент.ПолучитьТекстЗапроса(); 
		ИначеЕсли ТипЗнч(Элемент) = Тип(""ЗапросУничтоженияТаблицыСхемыЗапроса"") Тогда
			Текст = ""УНИЧТОЖИТЬ "" + Элемент.ИмяТаблицы;
		КонецЕсли;
		Если Не ПустаяСтрока(Результат) Тогда
			Результат = Результат + Разделитель + Символы.ПС;
		КонецЕсли;
		Результат = Результат + Текст;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Коллекция

&НаСервере
Процедура КоллекцияВыбираемыеПоля_ЗаполнитьИзСхемыЗапроса(Знач Запрос, Знач ИндексОператора)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля;
	
	Для Каждого Колонка Из Запрос.Колонки Цикл
		Если ТипЗнч(Колонка) <> Тип(""КолонкаВложеннаяТаблицаСхемыЗапроса"") Тогда
			САФ = Ложь;
			Выражение = Колонка.Поля[ИндексОператора];
			Если Выражение <> Неопределено Тогда
				САФ = Выражение.СодержитАгрегатнуюФункцию();
			Иначе
				Выражение = ""NULL"";
			КонецЕсли;
			НовСтр = Дерево.ПолучитьЭлементы().Добавить();
			НовСтр.Выражение 	= Выражение;
			НовСтр.Псевдоним 	= Колонка.Псевдоним;
			НовСтр.ТипЗначения 	= Колонка.ТипЗначения;
			НовСтр.САФ 			= САФ;
			ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, НовСтр);
		Иначе                   
			Выражение = Колонка.Поля[ИндексОператора];
			Если Выражение <> Неопределено Тогда
				Выражение = Выражение.Имя;
			Иначе
				Выражение = ""ПУСТАЯТАБЛИЦА"";
			КонецЕсли;
			НовСтр = Дерево.ПолучитьЭлементы().Добавить();
			НовСтр.ЭтоВТ 		= Истина;		
			НовСтр.Выражение 	= Выражение;
			НовСтр.Псевдоним 	= Колонка.Псевдоним;
			ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, НовСтр);
			Для Каждого КолонкаВТ Из Колонка.Колонки Цикл
				Выражение = КолонкаВТ.Поля[ИндексОператора];
				Если Выражение = Неопределено Тогда
					Выражение = ""NULL"";
				КонецЕсли;
				НовСтрВТ = НовСтр.ПолучитьЭлементы().Добавить();
				НовСтрВТ.Выражение 		= Выражение;
				НовСтрВТ.Псевдоним 		= КолонкаВТ.Псевдоним;
				НовСтрВТ.ТипЗначения 	= КолонкаВТ.ТипЗначения;
				ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(ЭтотОбъект, НовСтрВТ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияВыбираемыеПоля_ОбновитьИзСхемыЗапроса(Знач Запрос, Знач ИндексОператора)
	
	Итер = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Количество() - 1;
	Пока Итер >= 0 Цикл
		Строка = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы()[Итер];
		ИскомаяКолонка = Запрос.Колонки.Найти(Строка.Псевдоним);
		Если ИскомаяКолонка = Неопределено Тогда
			ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы().Удалить(Итер);
		Иначе
			Если ТипЗнч(ИскомаяКолонка) <> Тип(""КолонкаВложеннаяТаблицаСхемыЗапроса"") Тогда
				Выражение = ИскомаяКолонка.Поля[ИндексОператора];
				Если Выражение = Неопределено Тогда
					Строка.Выражение = ""NULL"";
				Иначе
					Строка.Выражение = Выражение;
				КонецЕсли;			
			Иначе
				Выражение = ИскомаяКолонка.Поля[ИндексОператора];
				Если Выражение = Неопределено Тогда
					Строка.Выражение = ""ПУСТАЯТАБЛИЦА"";
					Для Каждого СтрокаВТ Из Строка.ПолучитьЭлементы() Цикл
						СтрокаВТ.Выражение = ""NULL"";
					КонецЦикла;
				Иначе
					Строка.Выражение = Выражение.Имя;
				КонецЕсли;
				ИтерВТ = Строка.ПолучитьЭлементы().Количество() - 1;
				Пока ИтерВТ >= 0 Цикл
					СтрокаВТ = Строка.ПолучитьЭлементы()[ИтерВТ];
					ИскомаяКолонкаВТ = ИскомаяКолонка.Колонки.Найти(СтрокаВТ.Псевдоним);
					ВыражениеВТ = ИскомаяКолонкаВТ.Поля[ИндексОператора];
					Если ВыражениеВТ = Неопределено Тогда
						СтрокаВТ.Выражение = ""NULL"";
					Иначе
						СтрокаВТ.Выражение = ВыражениеВТ;
					КонецЕсли;
					ИтерВТ = ИтерВТ - 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		Итер = Итер - 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияВыбираемыеПоля_ЗаполнитьВыраженияОператоров(Знач Запрос, Знач КоличествоОператоров, Знач ИндексТекущегоОператора)
	
	ДобавляемыеРеквизиты = Новый Массив();
	
	Для ИндексОператора = 0 По КоличествоОператоров - 1 Цикл
		Реквизит = Новый РеквизитФормы(""Выражение"" + ИндексОператора, Новый ОписаниеТипов(""Строка""), ""ТекущаяКоллекцияВыбираемыеПоля"", ""Выражение "" + ИндексОператора);
		ДобавляемыеРеквизиты.Добавить(Реквизит);
	КонецЦикла;                                 
	
	ЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ИндексКолонки = 0;
	Для Каждого Колонка Из Запрос.Колонки Цикл
		ИскомаяСтрока = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы()[ИндексКолонки];
		Для ИндексОператора = 0 По КоличествоОператоров - 1 Цикл
			Выражение = Колонка.Поля[ИндексОператора];
			Если ТипЗнч(Колонка) <> Тип(""КолонкаВложеннаяТаблицаСхемыЗапроса"") Тогда				
				Если Выражение = Неопределено Тогда
					Выражение = ""NULL"";
				КонецЕсли;
			Иначе
				Если Выражение <> Неопределено Тогда
					Выражение = Выражение.Имя;
				Иначе
					Выражение = ""ПУСТАЯТАБЛИЦА"";
				КонецЕсли;
			КонецЕсли;
			ИскомаяСтрока[""Выражение"" + ИндексОператора] = Выражение;
		КонецЦикла;
		Если ТипЗнч(Колонка) = Тип(""КолонкаВложеннаяТаблицаСхемыЗапроса"") Тогда
			ИндексКолонкиВТ = 0;
			Для Каждого КолонкаВТ Из Колонка.Колонки Цикл
				ИскомаяСтрокаВТ = ИскомаяСтрока.ПолучитьЭлементы()[ИндексКолонкиВТ];
				Для ИндексОператора = 0 По КоличествоОператоров - 1 Цикл
					Выражение = КолонкаВТ.Поля[ИндексОператора];
					Если Выражение = Неопределено Тогда
						Выражение = ""NULL"";
					КонецЕсли;
					ИскомаяСтрокаВТ[""Выражение"" + ИндексОператора] = Выражение;
				КонецЦикла;
				ИндексКолонкиВТ = ИндексКолонкиВТ + 1;
			КонецЦикла;
		КонецЕсли;
		ИндексКолонки = ИндексКолонки + 1;
	КонецЦикла;
		
	Для ИндексОператора = 0 По КоличествоОператоров - 1 Цикл
		Элемент = Элементы.Добавить(""ТекущаяКоллекцияВыбираемыеПоляВыражение"" + ИндексОператора, Тип(""ПолеФормы""), Элементы.ТекущаяКоллекцияВыбираемыеПоля);
		Элемент.ПутьКДанным 	= ""ТекущаяКоллекцияВыбираемыеПоля.Выражение"" + ИндексОператора;
		Элемент.ТолькоПросмотр 	= Истина;
		Элемент.Видимость 		= (ИндексТекущегоОператора = 0 И ИндексОператора > 0);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияСоединения_ЗаполнитьИзСхемыЗапроса(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияСоединения;
	
	ТЗ = Новый ТаблицаЗначений();
	ТЗ.Колонки.Добавить(""Источник"");
	ТЗ.Колонки.Добавить(""Приемник"");
	ТЗ.Колонки.Добавить(""ТипСоединения"");
	ТЗ.Колонки.Добавить(""Условия"");
	
	Отбор = Новый Структура(""Источник,Приемник,ТипСоединения"");
	
	Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
		Для Каждого Соединение Из ИсточникСхемыЗапроса.Соединения Цикл
			Отбор.Источник 			= ИсточникСхемыЗапроса.Источник.Псевдоним;
			Отбор.Приемник 			= Соединение.Источник.Источник.Псевдоним;
			Отбор.ТипСоединения 	= Соединение.ТипСоединения;
			МассивСтрок = ТЗ.НайтиСтроки(Отбор);
			Если МассивСтрок.Количество() = 0 Тогда
				ИскомаяСтрока = ТЗ.Добавить();
				ЗаполнитьЗначенияСвойств(ИскомаяСтрока, Отбор);
				ИскомаяСтрока.Условия = Новый Массив();
			Иначе
				ИскомаяСтрока = МассивСтрок[0];
			КонецЕсли;                                      
			// Может быть нечитабельно, если неоднозначное поле
			Попытка              
				Условие = Строка(Соединение.Условие);
			Исключение
				ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
				Поз = СтрНайти(ТекстОшибки, ""<<?>>"");
				Если Поз > 0 Тогда
					Условие = Прав(ТекстОшибки, СтрДлина(ТекстОшибки) - Поз - 4);
				КонецЕсли;
			КонецПопытки;
			ИскомаяСтрока.Условия.Добавить(Условие);
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Строка Из ТЗ Цикл
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		НовСтр.Источник 			= Строка.Источник;
		НовСтр.Приемник 			= Строка.Приемник;
		НовСтр.ТипСоединения 		= Строка.ТипСоединения;
		НовСтр.Выражение			= Выражения_ОбъединитьУсловия(Строка.Условия);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияСоединения_ОбновитьСоединенияПриемника(Знач Оператор, Знач ПсевдонимПриемника)
		
	Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл 
		Для Каждого Соединение Из ИсточникСхемыЗапроса.Соединения Цикл
			Если Соединение.Источник.Источник.Псевдоним = ПсевдонимПриемника Тогда
				НовСтр = ЭтотОбъект.ТекущаяКоллекцияСоединения.ПолучитьЭлементы().Добавить();
				НовСтр.Источник = ИсточникСхемыЗапроса.Источник.Псевдоним;
				НовСтр.Приемник = ПсевдонимПриемника;
				НовСтр.ТипСоединения = Соединение.ТипСоединения;
				НовСтр.Выражение = Соединение.Условие;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияГруппировки_ЗаполнитьИзСхемыЗапроса(Знач Оператор, Знач Обновить = Ложь)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияГруппировки;
	
	Если Обновить Тогда
		Итер = Оператор.Группировки.Количество() - 1;
		Пока Итер >= 0 Цикл
			Элемент = Оператор.Группировки[Итер];
			Если Элемент.Количество() = 0 И Итер > 0 Тогда
				Оператор.Группировки.Удалить(Итер);
			КонецЕсли;
			Итер = Итер - 1;
		КонецЦикла;
	КонецЕсли;
	
	Итер = 0;
	Для Каждого Элемент Из Оператор.Группировки Цикл
		//Если Элемент.Количество() = 0 Тогда
		//	Продолжить;
		//КонецЕсли;
		НовСтрГруппировка = Дерево.ПолучитьЭлементы().Добавить();
		НовСтрГруппировка.Выражение = ""Группировка "" + Итер + ?(Итер = 0, "" Авто"", """"); 
		Для Каждого Выражение Из Элемент Цикл
			НовСтрВыражение = НовСтрГруппировка.ПолучитьЭлементы().Добавить();
			НовСтрВыражение.Выражение = Выражение;
		КонецЦикла;
		Итер = Итер + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияОтбор_ЗаполнитьИзСхемыЗапроса(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияОтбор;
	
	Для Каждого Выражение Из Оператор.Отбор Цикл
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		НовСтр.Выражение = Выражение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияПараметры_ЗаполнитьИзСхемыЗапроса(Знач Оператор)
	
	Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
		Источник = ИсточникСхемыЗапроса.Источник;
		Если ТипЗнч(Источник) = Тип(""ТаблицаСхемыЗапроса"") И Источник.Параметры.Количество() > 0 Тогда
			ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ИсточникиДоступныеПоля, Источник.Псевдоним, ""Псевдоним"");
			КоллекцияПараметры_Заполнить(Источник, ИскомаяСтрока.Картинка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияПараметры_Заполнить(Знач Источник, Знач Картинка)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияПараметры;
	
	СхемаЗапроса 			= Новый СхемаЗапроса();
	Запрос 					= СхемаЗапроса.ПакетЗапросов[0];
	ДоступнаяТаблица 		= Запрос.ДоступныеТаблицы.Найти(Источник.ИмяТаблицы);
		
	НовСтрИсточник = Дерево.ПолучитьЭлементы().Добавить();
	НовСтрИсточник.ИдентификаторСвязи	= Источник.Псевдоним;
	НовСтрИсточник.Имя 					= Источник.Псевдоним;
	НовСтрИсточник.Картинка 			= Картинка;
	
	Для Каждого Параметр Из ДоступнаяТаблица.Параметры Цикл
		
		НовСтрПараметр = НовСтрИсточник.ПолучитьЭлементы().Добавить();
		НовСтрПараметр.Имя 			= Параметр.Имя;
		НовСтрПараметр.ТипПараметра = Параметр.ТипПараметра;
		
		Если Параметр.ТипПараметра = ТипПараметраДоступнойТаблицыСхемыЗапроса.Вариант Тогда
			НовСтрПараметр.Варианты.ЗагрузитьЗначения(Новый Массив(Параметр.Варианты));	
		ИначеЕсли Параметр.ТипПараметра = ТипПараметраДоступнойТаблицыСхемыЗапроса.Значение Тогда
			НовСтрПараметр.Варианты.Добавить(""&"" + Параметр.Имя);	
		КонецЕсли;
		
		Для Каждого ДоступноеПоле Из Параметр.ДоступныеПоля Цикл
			НовСтрПараметр.ДоступныеПоля.Добавить(ДоступноеПоле.Имя);
		КонецЦикла;
	
	КонецЦикла;
	
	Для Итер = 0 По НовСтрИсточник.ПолучитьЭлементы().Количество() - 1 Цикл		
		НовСтрИсточник.ПолучитьЭлементы()[Итер].Выражение = Источник.Параметры[Итер].Выражение;
	КонецЦикла;
			
КонецПроцедуры

&НаСервере
Процедура КоллекцияТаблицыДляИзменения_ЗаполнитьИзСхемыЗапроса(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияТаблицыДляИзменения;
	
	Для Каждого Элемент Из Оператор.ТаблицыДляИзменения Цикл
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		НовСтр.ИмяТаблицы = Элемент.ИмяТаблицы;
	КонецЦикла;
	
	Для Каждого Строка Из ЭтотОбъект.ТекущаяКоллекцияТаблицыДляИзменения.ПолучитьЭлементы() Цикл
		ИскомаяСтрока = ТекущаяКоллекцияТаблицыДляИзменения_НайтиТаблицуДляИзменения(Строка.ИмяТаблицы);
		Если ИскомаяСтрока <> Неопределено Тогда
			Строка.Картинка = ИскомаяСтрока.Картинка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияПорядок_ЗаполнитьИзСхемыЗапроса(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияПорядок;
	
	Для Каждого Выражение Из Запрос.Порядок Цикл
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		Если ТипЗнч(Выражение.Элемент) = Тип(""ВыражениеСхемыЗапроса"") Тогда
			НовСтр.Выражение = Выражение.Элемент;
		ИначеЕсли ТипЗнч(Выражение.Элемент) = Тип(""КолонкаСхемыЗапроса"") Тогда
			НовСтр.Псевдоним = Выражение.Элемент.Псевдоним;
		КонецЕсли;
		НовСтр.КолонкаВыражение = ?(Не ПустаяСтрока(НовСтр.Выражение), НовСтр.Выражение, НовСтр.Псевдоним);
		НовСтр.Направление = Выражение.Направление;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияВыраженияИтогов_ЗаполнитьИзСхемыЗапроса(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияВыраженияИтогов;
	
	Для Каждого ВыражениеИтога Из Запрос.ВыраженияИтогов Цикл
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		НовСтр.Выражение 	= ВыражениеИтога.Выражение;
		НовСтр.Псевдоним 	= ВыражениеИтога.Поле.Псевдоним;		
		НовСтр.Функция	 	= Лев(ВыражениеИтога.Выражение, СтрНайти(ВыражениеИтога.Выражение, ""("") - 1);
		Если СтрНачинаетсяС(ВыражениеИтога.Выражение, ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ"") Тогда
			НовСтр.Функция = ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ)"";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияКонтрольныеТочкиИтогов_ЗаполнитьИзСхемыЗапроса(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов;
	
	Для Каждого КонтрольнаяТочка Из Запрос.КонтрольныеТочкиИтогов Цикл
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		Если ТипЗнч(КонтрольнаяТочка.Выражение) = Тип(""ВыражениеСхемыЗапроса"") Тогда
			НовСтр.Выражение = КонтрольнаяТочка.Выражение;
		ИначеЕсли ТипЗнч(КонтрольнаяТочка.Выражение) = Тип(""КолонкаСхемыЗапроса"") Тогда
			НовСтр.Псевдоним = КонтрольнаяТочка.Выражение.Псевдоним;
		КонецЕсли;
		НовСтр.КолонкаВыражение = ?(Не ПустаяСтрока(НовСтр.Выражение), НовСтр.Выражение, НовСтр.Псевдоним);
		НовСтр.ИмяКолонки = КонтрольнаяТочка.ИмяКолонки;
		НовСтр.ТипКонтрольнойТочки 		= КонтрольнаяТочка.ТипКонтрольнойТочки;
		НовСтр.ТипДополненияПериодами 	= КонтрольнаяТочка.ТипДополненияПериодами;
		НовСтр.НачалоПериодаДополнения 	= КонтрольнаяТочка.НачалоПериодаДополнения;
		НовСтр.КонецПериодаДополнения 	= КонтрольнаяТочка.КонецПериодаДополнения;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КоллекцияИндекс_ЗаполнитьИзСхемыЗапроса(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияИндекс;
	
	Для Каждого Элемент Из Запрос.Индекс Цикл	
		НовСтр = Дерево.ПолучитьЭлементы().Добавить();
		Если ТипЗнч(Элемент.Выражение) = Тип(""ВыражениеСхемыЗапроса"") Тогда
			НовСтр.Выражение = Элемент.Выражение;
		ИначеЕсли ТипЗнч(Элемент.Выражение) = Тип(""КолонкаСхемыЗапроса"") Тогда
			НовСтр.Псевдоним = Элемент.Выражение.Псевдоним;
		КонецЕсли;
		НовСтр.КолонкаВыражение = ?(Не ПустаяСтрока(НовСтр.Выражение), НовСтр.Выражение, НовСтр.Псевдоним);		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КонструкторСЗ

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьВыбираемыеПоля(Знач Запрос, Знач Оператор, Знач ИндексОператора)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля;
	ИндексКолонки = 0;
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если ИндексОператора = 0 Тогда
			ВыражениеСхемыЗапроса = Оператор.ВыбираемыеПоля.Добавить(Строка.Выражение);
		Иначе
			ВыражениеСхемыЗапроса = Оператор.ВыбираемыеПоля.Добавить(Строка.Выражение, ИндексКолонки);
		КонецЕсли;
		Если ИндексОператора = 0 Тогда
			Запрос.Колонки[ИндексКолонки].Псевдоним = Строка.Псевдоним;
		КонецЕсли;
		ИндексКолонки = ИндексКолонки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьСоединения(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияСоединения;
	
	Для Каждого ИсточникСхемыЗапроса Из Оператор.Источники Цикл
		ИсточникСхемыЗапроса.Соединения.Очистить();
	КонецЦикла;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		ИсточникСхемыЗапроса_Источник = Оператор.Источники.НайтиПоПсевдониму(Строка.Источник);
		ИсточникСхемыЗапроса_Приемник = Оператор.Источники.НайтиПоПсевдониму(Строка.Приемник);
		Если ИсточникСхемыЗапроса_Источник = Неопределено Или ИсточникСхемыЗапроса_Приемник = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ИсточникСхемыЗапроса_Источник.Соединения.Добавить(ИсточникСхемыЗапроса_Приемник, Строка.Выражение);
		Индекс = ИсточникСхемыЗапроса_Источник.Соединения.Количество() - 1;
		Соединение = ИсточникСхемыЗапроса_Источник.Соединения[Индекс];
		Соединение.ТипСоединения = ТипСоединенияСхемыЗапроса[ЗначениеПеречисления(Строка.ТипСоединения)];		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьГруппировки(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияГруппировки;
	
	Итер = 0;
	Для Каждого СтрокаГруппировка Из Дерево.ПолучитьЭлементы() Цикл
		Если Итер > 0 Тогда				
			Оператор.Группировки.Добавить();
		КонецЕсли;
		ВыраженияСхемыЗапроса = Оператор.Группировки[Итер];
		Для Каждого Строка Из СтрокаГруппировка.ПолучитьЭлементы() Цикл
			ВыраженияСхемыЗапроса.Добавить(Строка.Выражение);
		КонецЦикла;
		Итер = Итер + 1;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьОтбор(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияОтбор;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Оператор.Отбор.Добавить(Строка.Выражение);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьПараметрыИсточника(Знач Источник)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияПараметры;
	
	СтрокаИсточник = Форма_НайтиСтроку(Дерево, Источник.Псевдоним, ""Имя"");
	Если СтрокаИсточник = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Итер = 0;
	Для Каждого Строка Из СтрокаИсточник.ПолучитьЭлементы() Цикл
		Источник.Параметры[Итер].Выражение = Новый ВыражениеСхемыЗапроса(Строка.Выражение);
		Итер = Итер + 1;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьТаблицыДляИзменения(Знач Оператор)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияТаблицыДляИзменения;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Оператор.ТаблицыДляИзменения.Добавить(Строка.ИмяТаблицы);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьПорядок(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияПорядок;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если Не ПустаяСтрока(Строка.Выражение) Тогда
			Выражение 	= Запрос.Порядок.Добавить(Строка.Выражение);
		Иначе
			Колонка 	= Запрос.Колонки.Найти(Строка.Псевдоним);
			Выражение 	= Запрос.Порядок.Добавить(Колонка);
		КонецЕсли;
		Выражение.Направление = НаправлениеПорядкаСхемыЗапроса[ЗначениеПеречисления(Строка.Направление)];
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьВыраженияИтогов(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияВыраженияИтогов;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Запрос.ВыраженияИтогов.Добавить(Строка.Выражение);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьКонтрольныеТочкиИтогов(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияКонтрольныеТочкиИтогов;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если Не ПустаяСтрока(Строка.Выражение) Тогда
			КонтрольнаяТочка 	= Запрос.КонтрольныеТочкиИтогов.Добавить(Строка.Выражение);
		Иначе
			Колонка 			= Запрос.Колонки.Найти(Строка.Псевдоним);
			КонтрольнаяТочка 	= Запрос.КонтрольныеТочкиИтогов.Добавить(Колонка);
		КонецЕсли;
		КонтрольнаяТочка.ТипКонтрольнойТочки 		= ТипКонтрольнойТочкиСхемыЗапроса[ЗначениеПеречисления(Строка.ТипКонтрольнойТочки)];
		КонтрольнаяТочка.ТипДополненияПериодами 	= ТипДополненияПериодамиСхемыЗапроса[ЗначениеПеречисления(Строка.ТипДополненияПериодами)];
		КонтрольнаяТочка.НачалоПериодаДополнения 	= Строка.НачалоПериодаДополнения;
		КонтрольнаяТочка.КонецПериодаДополнения  	= Строка.КонецПериодаДополнения;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КонструкторСЗ_ЗаполнитьИндекс(Знач Запрос)
	
	Дерево = ЭтотОбъект.ТекущаяКоллекцияИндекс;
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если Не ПустаяСтрока(Строка.Выражение) Тогда
			Элемент = Запрос.Индекс.Добавить(Строка.Выражение);
		Иначе
			Колонка = Запрос.Колонки.Найти(Строка.Псевдоним);
			Элемент = Запрос.Индекс.Добавить(Колонка);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция КонструкторСЗ_ЗаменитьТекстВыборкиЗапроса(Знач ТекстЗапроса, Знач КоличествоОператоров)
		
	ТекстИсточник = Новый ТекстовыйДокумент();
	ТекстИсточник.УстановитьТекст(ТекстЗапроса);
	ТекстПриемник = Новый ТекстовыйДокумент();
	
	СтрокаНач = 1;
	СтрокаКон = КонструкторСЗ_НайтиНачалоВыборки(ТекстИсточник, 0);
	Для Итер = СтрокаНач По СтрокаКон Цикл
		ТекстПриемник.ДобавитьСтроку(ТекстИсточник.ПолучитьСтроку(Итер));
	КонецЦикла;
	
	Для ИндексОператора = 0 По КоличествоОператоров - 1 Цикл
		ИндексВыражения = Строка(ИндексОператора);
		
		ТекстВыборки = КонструкторСЗ_ТекстВыборкиОператора(ИндексВыражения);
		Для Итер = 1 По ТекстВыборки.КоличествоСтрок() Цикл
			ТекстПриемник.ДобавитьСтроку(ТекстВыборки.ПолучитьСтроку(Итер));
		КонецЦикла;
		
		СтрокаНач = КонструкторСЗ_НайтиОкончаниеВыборки(ТекстИсточник, СтрокаКон);
		СтрокаКон = КонструкторСЗ_НайтиНачалоВыборки(ТекстИсточник, СтрокаНач);                                                                       
		Для Итер = СтрокаНач По СтрокаКон Цикл
			ТекстПриемник.ДобавитьСтроку(ТекстИсточник.ПолучитьСтроку(Итер));
		КонецЦикла; 
		
	КонецЦикла;
	
	Результат = ТекстПриемник.ПолучитьТекст();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КонструкторСЗ_ЗаменитьТекстВыборкиОператора(Знач ТекстЗапроса, Знач ИндексОператора)
	
	ТекстВыборки = КонструкторСЗ_ТекстВыборкиОператора();
	
	ТекстИсточник = Новый ТекстовыйДокумент();
	ТекстИсточник.УстановитьТекст(ТекстЗапроса);
	
	ИнтервалВыборки = КонструкторСЗ_ИнтервалВыборкиОператора(ТекстИсточник, ИндексОператора);
	
	ТекстПриемник = Новый ТекстовыйДокумент();
	Для Итер = 1 По ИнтервалВыборки.СтрокаНач Цикл
		ТекстПриемник.ДобавитьСтроку(ТекстИсточник.ПолучитьСтроку(Итер));
	КонецЦикла;                                                                        
	Для Итер = 1 По ТекстВыборки.КоличествоСтрок() Цикл
		ТекстПриемник.ДобавитьСтроку(ТекстВыборки.ПолучитьСтроку(Итер));
	КонецЦикла;
	Для Итер = ИнтервалВыборки.СтрокаКон По ТекстИсточник.КоличествоСтрок() Цикл
		ТекстПриемник.ДобавитьСтроку(ТекстИсточник.ПолучитьСтроку(Итер));
	КонецЦикла;
	
	Результат = ТекстПриемник.ПолучитьТекст();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КонструкторСЗ_ТекстВыборкиОператора(Знач ИндексВыражения = """")
	
	Текст = Новый ТекстовыйДокумент();
	
	Коллекция = ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля.ПолучитьЭлементы();
	Итер = 1;                  
	Для Каждого Строка Из Коллекция Цикл
		Выражение = Строка[""Выражение"" + ИндексВыражения];
		Если Не Строка.ЭтоВТ Тогда                        
			Если ПустаяСтрока(Выражение) Тогда
				Выражение = ""NULL"";
			КонецЕсли;
			ПостФикс = ?(Итер < Коллекция.Количество(), "","", """");
			Текст.ДобавитьСтроку(Выражение + "" КАК "" + Строка.Псевдоним + ПостФикс);
		Иначе
			Если ПустаяСтрока(Выражение) Тогда
				Выражение = ""ПУСТАЯТАБЛИЦА"";
			КонецЕсли;
			Текст.ДобавитьСтроку(Выражение + "".("");
			ИтерВТ = 1;                                
			КоллекцияВТ = Строка.ПолучитьЭлементы();
			Для Каждого СтрокаВТ Из КоллекцияВТ Цикл
				ВыражениеВТ = СтрокаВТ[""Выражение"" + ИндексВыражения];
				Если ПустаяСтрока(ВыражениеВТ) Тогда
					ВыражениеВТ = ""NULL"";
				КонецЕсли;
				Если Выражение = ""ПУСТАЯТАБЛИЦА"" Тогда
					ВыражениеВТ = """";
				КонецЕсли;
				ПостФикс = ?(ИтерВТ < КоллекцияВТ.Количество(), "","", """");
				Текст.ДобавитьСтроку(ВыражениеВТ + "" КАК "" + СтрокаВТ.Псевдоним + ПостФикс);
				ИтерВТ = ИтерВТ + 1;
			КонецЦикла;
			ПостФикс = ?(Итер < Коллекция.Количество(), "","", """");
			Текст.ДобавитьСтроку("")"" + "" КАК "" + Строка.Псевдоним + ПостФикс);
		КонецЕсли;
		Итер = Итер + 1;		
	КонецЦикла;
	
	Возврат Текст;
	
КонецФункции

&НаСервере
Функция КонструкторСЗ_ИнтервалВыборкиОператора(Знач Текст, Знач ИндексОператора) 
	
	СтрокаНач = 0;
	СтрокаКон = Текст.КоличествоСтрок() + 1;
	
	ТекИндексОператора = 0;
	Для Итер = 1 По Текст.КоличествоСтрок() Цикл
		ТекСтрока = Текст.ПолучитьСтроку(Итер);
		Если СтрНачинаетсяС(ТекСтрока, ""ВЫБРАТЬ"") Тогда
			Если СтрокаНач = 0 И ТекИндексОператора = ИндексОператора Тогда
				СтрокаНач = Итер;
			КонецЕсли;           
			ТекИндексОператора = ТекИндексОператора + 1;
		КонецЕсли;
		Если СтрНачинаетсяС(ТекСтрока, ""ИЗ"") Или СтрНачинаетсяС(ТекСтрока, ""ПОМЕСТИТЬ"") Или СтрНачинаетсяС(ТекСтрока, ""ОБЪЕДИНИТЬ"") Тогда
			Если СтрокаНач > 0 Тогда
				СтрокаКон = Итер;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый Структура(""СтрокаНач, СтрокаКон"", СтрокаНач, СтрокаКон);
	
КонецФункции

&НаСервере
Функция КонструкторСЗ_НайтиНачалоВыборки(Знач Текст, Знач Курсор) 
	
	Результат = Текст.КоличествоСтрок();
	
	Для Итер = Курсор + 1 По Текст.КоличествоСтрок() Цикл
		ТекСтрока = Текст.ПолучитьСтроку(Итер);
		Если СтрНачинаетсяС(ТекСтрока, ""ВЫБРАТЬ"") Тогда
			Возврат Итер;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КонструкторСЗ_НайтиОкончаниеВыборки(Знач Текст, Знач Курсор) 
	
	Результат = Текст.КоличествоСтрок() + 1;
	
	Для Итер = Курсор + 1 По Текст.КоличествоСтрок() Цикл
		ТекСтрока = Текст.ПолучитьСтроку(Итер);
		Если СтрНачинаетсяС(ТекСтрока, ""ИЗ"") Или СтрНачинаетсяС(ТекСтрока, ""ПОМЕСТИТЬ"") Или СтрНачинаетсяС(ТекСтрока, ""ОБЪЕДИНИТЬ"") Тогда
			Возврат Итер;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КонструкторСЗ_ИнтервалЗапросаОператора(Знач Текст, Знач ИндексОператора) 
	
	СтрокаНач = 0;
	СтрокаКон = Текст.КоличествоСтрок() + 1;
	
	ТекИндексОператора = 0;
	Для Итер = 1 По Текст.КоличествоСтрок() Цикл
		ТекСтрока = Текст.ПолучитьСтроку(Итер);
		Если СтрНачинаетсяС(ТекСтрока, ""ВЫБРАТЬ"") Тогда
			Если СтрокаНач = 0 И ТекИндексОператора = ИндексОператора Тогда
				СтрокаНач = Итер;
			КонецЕсли;           
			ТекИндексОператора = ТекИндексОператора + 1;
		КонецЕсли;
		Если СтрНачинаетсяС(ТекСтрока, ""ОБЪЕДИНИТЬ"") Тогда
			Если СтрокаНач > 0 Тогда
				СтрокаКон = Итер;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый Структура(""СтрокаНач, СтрокаКон"", СтрокаНач, СтрокаКон);
	
КонецФункции

#КонецОбласти

#Область ТаблицаФормы

&НаСервере
Процедура ТаблицаФормы_УстановитьТипКартинкуТаблицы(Знач Строка)
	
	МассивСтрок = СтрРазделить(Строка.ИмяТаблицы, ""."");
	
	Если МассивСтрок.Количество() = 1 Тогда
		Если Строка.ИмяТаблицы = ""Константы"" Тогда
			Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			Строка.Картинка = БиблиотекаКартинок.Константа;
			Возврат;
		КонецЕсли;
		Результат = ЭтотОбъект.ПеречислениеТипТаблицы.ВремТаблица;
	ИначеЕсли МассивСтрок.Количество() = 2 Тогда
		Результат = ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
	ИначеЕсли СтрЗаканчиваетсяНа(Строка.ИмяТаблицы, "".Изменения"") Тогда
		Результат = ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
	ИначеЕсли СтрНачинаетсяС(Строка.ИмяТаблицы, ""ВнешнийИсточникДанных."") Тогда
		Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		Если СтрНайти(Строка.ИмяТаблицы, "".ТаблицаИзмерения."") > 0 Тогда		
			Строка.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
		ИначеЕсли СтрНайти(Строка.ИмяТаблицы, "".Куб."") > 0 Тогда		
			Строка.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхКуб;
		ИначеЕсли СтрНайти(Строка.ИмяТаблицы, "".Таблица."") > 0 Тогда		
			Строка.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
		КонецЕсли;
		Возврат;
	Иначе                                                       
		
		Значение2 = МассивСтрок[2];
		Значение1 = МассивСтрок[1];
		Значение0 = МассивСтрок[0];
		
		ИскомаяСтрока = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(Новый Структура(""ИмяЕдч"", Значение0))[0];
		Если ИскомаяСтрока.ЕстьТЧ И Метаданные[ИскомаяСтрока.ИмяМнч][Значение1].ТабличныеЧасти.Найти(Значение2) <> Неопределено Тогда
			Результат = ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть; 
		ИначеЕсли ИскомаяСтрока.ЕстьСТЧ И ОписаниеКоллекций_ЕстьСТЧ(Метаданные[ИскомаяСтрока.ИмяМнч][Значение1], Значение2) Тогда
			Результат = ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
		Иначе
			Результат = ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
		КонецЕсли;
	
	КонецЕсли;
	
	Строка.ТипТаблицы = Результат;
	
	Если Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ВремТаблица Тогда
		Строка.Картинка = БиблиотекаКартинок.КонструкторЗапросаВременнаяТаблица;
	ИначеЕсли Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.Изменения Тогда
		Строка.Картинка = БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
	ИначеЕсли Строка.ТипТаблицы = ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть Тогда
		Строка.Картинка = БиблиотекаКартинок.ВложеннаяТаблица;		
	Иначе                    
		Строка.Картинка = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(Новый Структура(""ИмяЕдч"", МассивСтрок[0]))[0].Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОписаниеКоллекций_ЕстьСТЧ(Знач ОМ, Знач Имя)
	
	Для Каждого СТЧ Из ОМ.СтандартныеТабличныеЧасти Цикл
		Если СТЧ.Имя = Имя Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ТаблицаФормы_УстановитьКартинкуДоступногоПоля(Знач Строка, Знач ДоступноеПоле)
	
	Если Не Строка.ЭтоВТ Тогда
		Если ДоступноеПоле.Роль.Измерение Тогда
			Картинка = БиблиотекаКартинок.Измерение;
		ИначеЕсли ДоступноеПоле.Роль.Ресурс Тогда
			Картинка = БиблиотекаКартинок.Ресурс;						
		Иначе
			Картинка = БиблиотекаКартинок.Реквизит;
		КонецЕсли;
	Иначе
		Картинка = БиблиотекаКартинок.ВложеннаяТаблица;
	КонецЕсли;
	
	Строка.Картинка = Картинка;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ТаблицаФормы_УстановитьКартинкуВыбираемогоПоля(Знач Форма, Знач Строка)
	
	Если Строка.ЭтоВТ Тогда
		Строка.Картинка = БиблиотекаКартинок.ВложеннаяТаблица;
	ИначеЕсли Строка.САФ Тогда
		Строка.Картинка = Форма.ПеречислениеКартинки.Функция;
	Иначе
		Строка.Картинка = БиблиотекаКартинок.Реквизит;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормы_ЗаполнитьКолонкуВыражение(Знач ТекДанные)
	
	ИскомаяСтрока = Форма_НайтиСтроку(ЭтотОбъект.ТекущаяКоллекцияВыбираемыеПоля, ТекДанные.КолонкаВыражение, ""Псевдоним"");
	Если ИскомаяСтрока <> Неопределено Тогда
		ТекДанные.Выражение = """";
		ТекДанные.Псевдоним = ТекДанные.КолонкаВыражение;
	Иначе
		ТекДанные.Выражение = ТекДанные.КолонкаВыражение;
		ТекДанные.Псевдоним = """";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Выражения

&НаСервере
Процедура ВыраженияНастроитьФорму(Знач Подменю)
	
	Форма = ЭтотОбъект;
	
	СтрокаФункций = ""СУММА,МИНИМУМ,МАКСИМУМ,СРЕДНЕЕ,КОЛИЧЕСТВО"";
	МассивФункций = СтрРазделить(СтрокаФункций, "","");
	
	Для Каждого Элемент Из МассивФункций Цикл
		Команда = Форма.Команды.Добавить(""ВыраженияПрименитьФункцию"" + Элемент);
		Команда.Заголовок 	= Элемент;
		Команда.Действие 	= ""ВыраженияПрименитьФункцию"";
		НовыйЭлемент = Форма.Элементы.Добавить(""ВыраженияПрименитьФункцию"" + Элемент, Тип(""КнопкаФормы""), Подменю);
		НовыйЭлемент.ИмяКоманды = ""ВыраженияПрименитьФункцию"" + Элемент;
	КонецЦикла;
	
	Элемент = ""КОЛИЧЕСТВО_РАЗЛИЧНЫЕ"";
	Команда = Форма.Команды.Добавить(""ВыраженияПрименитьФункцию"" + Элемент);
	Команда.Заголовок 	= ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ)"";
	Команда.Действие 	= ""ВыраженияПрименитьФункцию"";
	НовыйЭлемент = Форма.Элементы.Добавить(""ВыраженияПрименитьФункцию"" + Элемент, Тип(""КнопкаФормы""), Подменю);
	НовыйЭлемент.ИмяКоманды = ""ВыраженияПрименитьФункцию"" + Элемент;                                                                          
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ПрименитьФункцию(Знач Выражение, Знач ИмяФункции) Экспорт
	
	Выражение 	= Выражения_ОчиститьФункцию(Выражение);
	ИмяФункции 	= СтрЗаменить(ИмяФункции, ""ВыраженияПрименитьФункцию"", """");
	
	Если ИмяФункции = ""КОЛИЧЕСТВО_РАЗЛИЧНЫЕ"" Тогда
		Выражение = ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "" + Выражение + "")"";
	Иначе
		Выражение = ИмяФункции + ""("" + Выражение + "")""; 
	КонецЕсли;
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ОчиститьФункцию(Знач Выражение) Экспорт
	
	Поз1 = 0;
	Поз2 = 0;
	
	Если СтрНачинаетсяС(Выражение, ""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "") Тогда
		Поз1 = СтрДлина(""КОЛИЧЕСТВО(РАЗЛИЧНЫЕ "");			
	Иначе
		СтрокаФункций = ""СУММА,МИНИМУМ,МАКСИМУМ,СРЕДНЕЕ,КОЛИЧЕСТВО"";
		МассивФункций = СтрРазделить(СтрокаФункций, "","");
		Для Каждого Элемент Из МассивФункций Цикл
			Если СтрНачинаетсяС(Выражение, Элемент + ""("") Тогда
				Поз1 = СтрДлина(Элемент + ""("");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Поз2 = СтрНайти(Выражение, "")"", НаправлениеПоиска.СКонца);
	
	Если Поз1 > 0 И Поз2 > 0 Тогда
		Выражение = Сред(Выражение, Поз1 + 1, Поз2 - Поз1 - 1);
	КонецЕсли;
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ПрименитьEСТЬNULL(Знач Выражение, Знач ТипЗначения) Экспорт
	
	ПустоеЗначение = ПустоеЗначениеЕСТЬNULL(ТипЗначения);	
	Выражение = ""ЕСТЬNULL("" + Выражение + "", "" + ПустоеЗначение + "")"";
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ОчиститьЕСТЬNULL(Знач Выражение) Экспорт
	
	Если Не СтрНачинаетсяС(Выражение, ""ЕСТЬNULL("") Тогда
		Возврат Выражение;
	КонецЕсли;
	
	Поз1 = СтрДлина(""ЕСТЬNULL("");
	Поз2 = СтрНайти(Выражение, "","", НаправлениеПоиска.СНачала);
	
	Если Поз1 > 0 И Поз2 > 0 Тогда
		Выражение = Сред(Выражение, Поз1 + 1, Поз2 - Поз1 - 1);
	КонецЕсли;
	
	Возврат Выражение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Выражения_ОбъединитьУсловия(Знач Условия)
	
	Если Условия.Количество() = 1 Тогда
		Возврат Условия[0];
	КонецЕсли;
	
	Резт = """";
	Итер = 1;
	Для Каждого Условие Из Условия Цикл
		Постфикс = ?(Итер < Условия.Количество(), Символы.ПС + ""И "", """"); 
		Резт = Резт + Условие + Постфикс;
		Итер = Итер + 1;
	КонецЦикла;
	
	Возврат Резт;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПустоеЗначениеЕСТЬNULL(Знач ТипЗначения)
	
	Если ТипЗначения = Неопределено
		Или ТипЗначения.Типы().Количество() = 0
		Или ТипЗначения.Типы().Количество() > 1 Тогда
		Возврат ""НЕОПРЕДЕЛЕНО"";
	КонецЕсли;
	
	Тип = ТипЗначения.Типы()[0];
	
	ОМ = Метаданные.НайтиПоТипу(Тип);
	
	Если ОМ <> Неопределено Тогда 
		ПолноеИмя = ОМ.ПолноеИмя();
		Значение = ""ЗНАЧЕНИЕ("" + ПолноеИмя + "".ПустаяСсылка)"";
		Возврат Значение;
	КонецЕсли;
	
	Если Тип = Тип(""Число"") Тогда
		Возврат ""0"";
	ИначеЕсли Тип = Тип(""Строка"") Тогда
		Возврат """""""""""";
	ИначеЕсли Тип = Тип(""Дата"") Тогда
		Возврат ""ДАТАВРЕМЯ(1,1,1)"";
	КонецЕсли;
	
	Возврат ""НЕОПРЕДЕЛЕНО"";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСКонца(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."", НаправлениеПоиска.СКонца);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."", НаправлениеПоиска.СНачала);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПередТочкойСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."");
	Значение = Лев(Текст, Поз - 1);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КорректныйПсевдоним(Коллекция, Знач Псевдоним) Экспорт
	
	Найдено = Ложь;
	Для Каждого Строка Из Коллекция Цикл
		Если Псевдоним = Строка.Псевдоним Тогда
			Найдено = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Если Найдено Тогда
		Псевдоним = ИнкрементПсевдонима(Псевдоним);
		Псевдоним = КорректныйПсевдоним(Коллекция, Псевдоним);
	КонецЕсли;
	
	Возврат Псевдоним;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИнкрементПсевдонима(Знач Псевдоним)
	
	Окончание = Прав(Псевдоним, 1);
	Если СтрНайти(""0123456789"", Окончание) > 0 Тогда
		Значение 	= Число(Окончание);
		Псевдоним 	= Лев(Псевдоним, СтрДлина(Псевдоним) - 1);
	Иначе
		Значение 	= 0;
	КонецЕсли;
	
	Возврат Псевдоним + Строка(Значение + 1);
	 	 
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеПеречисления(Знач Текст) Экспорт
	
	МассивСтрок = СтрРазделить(Текст, "" "");
	Для Каждого Строка Из МассивСтрок Цикл
		Строка = ВРег(Строка);
	КонецЦикла;
	
	Результат = СтрСоединить(МассивСтрок);
	Возврат Результат;
	
КонецФункции

#КонецОбласти









































",
{4,43,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",53424881-bc0c-4dd2-ad50-12ac0f1053a7}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ДеревоСхемыЗапроса",
{1,1,
{"ru","Дерево схемы запроса"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,8,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Идентификатор",
{1,1,
{"ru","Идентификатор"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ТипСтроки",
{1,1,
{"ru","Тип строки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ТипЗапроса",
{1,1,
{"ru","Тип запроса"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ТипИсточника",
{1,1,
{"ru","Тип источника"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ИмяТаблицы",
{1,1,
{"ru","Имя таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Псевдоним",
{1,1,
{"ru","Псевдоним"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"ТипТаблицы",
{1,1,
{"ru","Тип таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{3},0,"ДеревоТаблиц",
{1,1,
{"ru","Дерево таблиц"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,6,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Псевдоним",
{1,1,
{"ru","Псевдоним"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ТипТаблицы",
{1,1,
{"ru","Тип таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ЭтоИсточник",
{1,1,
{"ru","Это источник"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{4},0,"ОписаниеКоллекций",
{1,1,
{"ru","Описание коллекций"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ИмяМнч",
{1,1,
{"ru","Имя мнч"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяЕдч",
{1,1,
{"ru","Имя едч"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ЕстьТЧ",
{1,1,
{"ru","Есть ТЧ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ЕстьСТЧ",
{1,1,
{"ru","Есть СТЧ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{5},0,"ПеречислениеТипСтроки",
{1,1,
{"ru","Перечисление тип строки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ПеречислениеКартинки",
{1,1,
{"ru","Перечисление картинки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ПеречислениеТипЗапроса",
{1,1,
{"ru","Перечисление тип запроса"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ПеречислениеТипИсточника",
{1,1,
{"ru","Перечисление тип источника"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"ПеречислениеТипТаблицы",
{1,1,
{"ru","Перечисление тип таблицы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"ТекущийИдентификаторСтроки",
{1,1,
{"ru","Текущий идентификатор строки"}
},
{"Pattern",
{"L"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"ТекущийИдентификаторЗапроса",
{1,1,
{"ru","Текущий идентификатор запроса"}
},
{"Pattern",
{"L"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"ТекущийИдентификаторОператора",
{1,1,
{"ru","Текущий идентификатор оператора"}
},
{"Pattern",
{"L"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"ТекущийИдентификаторИсточникаЗапроса",
{1,1,
{"ru","Текущий идентификатор источника запроса"}
},
{"Pattern",
{"L"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{22},0,"ОтображаемыйТекстЗапроса",
{1,1,
{"ru","Отображаемый текст запроса"}
},
{"Pattern",
{"#",ebf766b1-f32c-11d3-9851-008048da1252}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{26},0,"ОтображаемыйТекстЗапросаВариантОтображения",
{1,1,
{"ru","Отображаемый текст запроса вариант отображения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{29},0,"ТекущаяКоллекцияВыбираемыеПоля",
{1,1,
{"ru","Текущая коллекция выбираемые поля"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,7,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Псевдоним",
{1,1,
{"ru","Колонка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ЭтоВТ",
{1,1,
{"ru","Это ВТ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ТипЗначения",
{1,1,
{"ru","Тип значения"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"САФ",
{1,1,
{"ru","САФ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{30},0,"ТекущаяКоллекцияОтбор",
{1,1,
{"ru","Текущая коллекция отбор"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,2,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{31},0,"ТекущаяКоллекцияСоединения",
{1,1,
{"ru","Текущая коллекция соединения"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,5,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,1,0,"Источник",
{1,1,
{"ru","Источник"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Приемник",
{1,1,
{"ru","Приемник"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ТипСоединения",
{1,1,
{"ru","Тип соединения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{32},0,"ТекущаяКоллекцияПараметры",
{1,1,
{"ru","Текущая коллекция параметры"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,7,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"S"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ТипПараметра",
{1,1,
{"ru","Тип параметра"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Варианты",
{1,1,
{"ru","Варианты"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ДоступныеПоля",
{1,1,
{"ru","Доступные поля"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{33},0,"ТекущаяКоллекцияГруппировки",
{1,1,
{"ru","Текущая коллекция группировки"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,2,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{34},0,"ТекущаяКоллекцияПорядок",
{1,1,
{"ru","Текущая коллекция порядок"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Псевдоним",
{1,1,
{"ru","Колонка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Направление",
{1,1,
{"ru","Направление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"КолонкаВыражение",
{1,1,
{"ru","Колонка / Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{35},0,"ТекущаяКоллекцияВыраженияИтогов",
{1,1,
{"ru","Текущая коллекция выражения итогов"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,4,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Псевдоним",
{1,1,
{"ru","Колонка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Функция",
{1,1,
{"ru","Функция"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{36},0,"ТекущаяКоллекцияКонтрольныеТочкиИтогов",
{1,1,
{"ru","Текущая коллекция контрольные точки итогов"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,9,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"Псевдоним",
{1,1,
{"ru","Колонка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяКолонки",
{1,1,
{"ru","Имя колонки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ТипКонтрольнойТочки",
{1,1,
{"ru","Тип контрольной точки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ТипДополненияПериодами",
{1,1,
{"ru","Тип дополнения периодами"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"НачалоПериодаДополнения",
{1,1,
{"ru","Начало периода дополнения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"КонецПериодаДополнения",
{1,1,
{"ru","Конец периода дополнения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"КолонкаВыражение",
{1,1,
{"ru","Колонка / Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{37},0,"ИсточникиДоступныеПоля",
{1,1,
{"ru","Источники доступные поля"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,13,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ТипСтроки",
{1,1,
{"ru","Тип строки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ТипИсточника",
{1,1,
{"ru","Тип источника"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяТаблицы",
{1,1,
{"ru","Имя таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,10,0,"Псевдоним",
{1,1,
{"ru","Псевдоним"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ТипТаблицы",
{1,1,
{"ru","Тип таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ЭтоВТ",
{1,1,
{"ru","Это ВТ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ТипЗначения",
{1,1,
{"ru","Тип значения"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,11,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,12,0,"Идентификатор",
{1,1,
{"ru","Идентификатор"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,13,0,"САФ",
{1,1,
{"ru","САФ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{38},0,"СвойстваЗапросаАвтопорядок",
{1,1,
{"ru","Автопорядок"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{39},0,"СвойстваЗапросаВыбиратьРазрешенные",
{1,1,
{"ru","Выбирать разрешенные"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{40},0,"СвойстваЗапросаОбщиеИтоги",
{1,1,
{"ru","Общие итоги"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{41},0,"СвойстваОператораВыбиратьРазличные",
{1,1,
{"ru","Выбирать различные"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{42},0,"СвойстваОператораКоличествоПолучаемыхЗаписей",
{1,1,
{"ru","Количество получаемых записей"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{44},0,"СхемаЗапросаВХ",
{1,1,
{"ru","Схема запроса ВХ"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{49},0,"ПараметрСтруктураСтроки",
{1,1,
{"ru","Параметр структура строки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{47},0,"СвойстваЗапросаТаблицаДляПомещения",
{1,1,
{"ru","Свойства запроса таблица для помещения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{48},0,"РежимЗамены",
{1,1,
{"ru","Режим замены"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{50},0,"ТекущаяКоллекцияПоляСАФ",
{1,1,
{"ru","Текущая коллекция поля САФ"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,2,
{5,1,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{51},0,"СвойстваОператораСворачивать",
{1,1,
{"ru","Свойства оператора сворачивать"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{52},0,"ЗакрытиеФормы",
{1,1,
{"ru","Закрытие формы"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{54},0,"ТекущаяКоллекцияТаблицыДляИзменения",
{1,1,
{"ru","Текущая коллекция таблицы для изменения"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,3,
{5,5,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,1,0,"ИмяТаблицы",
{1,1,
{"ru","Имя таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{55},0,"СвойстваОператораВыбиратьДляИзменения",
{1,1,
{"ru","Выбирать для изменения"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{57},0,"ТекущаяКоллекцияИндекс",
{1,1,
{"ru","Текущая коллекция индекс"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,4,
{5,1,0,"ИдентификаторСвязи",
{1,1,
{"ru","Идентификатор связи"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Выражение",
{1,1,
{"ru","Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Псевдоним",
{1,1,
{"ru","Колонка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"КолонкаВыражение",
{1,1,
{"ru","Колонка / Выражение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{10},0,"ОператорИдентификатор",
{1,1,
{"ru","Оператор идентификатор"}
},
{"Pattern",
{"L"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"ОператорТекстИсключения",
{1,1,
{"ru","Оператор текст исключения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{16},0,"ОператорИзменения",
{1,1,
{"ru","Оператор изменения"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{17},0,"СвойстваОператораВыбиратьПервые",
{1,1,
{"ru","Свойства оператора выбирать первые"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,4,"ДеревоСхемыЗапроса.Идентификатор","ДеревоСхемыЗапроса.Идентификатор",
{2,
{2},
{2}
},
{1,
{2}
},"ТекущийИдентификаторЗапроса","ТекущийИдентификаторЗапроса",
{1,
{12}
},
{0},"ТекущийИдентификаторИсточникаЗапроса","ТекущийИдентификаторИсточникаЗапроса",
{1,
{14}
},
{0},"ТекущийИдентификаторОператора","ТекущийИдентификаторОператора",
{1,
{13}
},
{0},
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxjb25kaXRp
b25hbEFwcGVhcmFuY2U+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCh0YXQtdC80YvQl9Cw0L/R
gNC+0YHQsDwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJ
CQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFy
aXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCU0LXR
gNC10LLQvtCh0YXQtdC80YvQl9Cw0L/RgNC+0YHQsC7QmNC00LXQvdGC0LjRhNC4
0LrQsNGC0L7RgDwvbGVmdD4NCgkJCQkJPGNvbXBhcmlzb25UeXBlPkVxdWFsPC9j
b21wYXJpc29uVHlwZT4NCgkJCQkJPHJpZ2h0IHhzaTp0eXBlPSJkY3Njb3I6Rmll
bGQiPtCi0LXQutGD0YnQuNC50JjQtNC10L3RgtC40YTQuNC60LDRgtC+0YDQl9Cw
0L/RgNC+0YHQsDwvcmlnaHQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9maWx0ZXI+DQoJ
CQk8YXBwZWFyYW5jZT4NCgkJCQk8ZGNzY29yOml0ZW0geHNpOnR5cGU9IlNldHRp
bmdzUGFyYW1ldGVyVmFsdWUiPg0KCQkJCQk8ZGNzY29yOnBhcmFtZXRlcj7QptCy
0LXRgtCi0LXQutGB0YLQsDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nv
cjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+d2ViOlB1cnBsZTwvZGNzY29y
OnZhbHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+DQoJ
CTwvaXRlbT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0KCQkJCTxpdGVtPg0K
CQkJCQk8ZmllbGQ+0JTQtdGA0LXQstC+0KHRhdC10LzRi9CX0LDQv9GA0L7RgdCw
PC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0
ZXI+DQoJCQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Db21wYXJpc29uIj4N
CgkJCQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0JTQtdGA0LXQstC+
0KHRhdC10LzRi9CX0LDQv9GA0L7RgdCwLtCY0LTQtdC90YLQuNGE0LjQutCw0YLQ
vtGAPC9sZWZ0Pg0KCQkJCQk8Y29tcGFyaXNvblR5cGU+RXF1YWw8L2NvbXBhcmlz
b25UeXBlPg0KCQkJCQk8cmlnaHQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0KLQ
tdC60YPRidC40LnQmNC00LXQvdGC0LjRhNC40LrQsNGC0L7RgNCY0YHRgtC+0YfQ
vdC40LrQsNCX0LDQv9GA0L7RgdCwPC9yaWdodD4NCgkJCQk8L2l0ZW0+DQoJCQk8
L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRlbSB4c2k6
dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Njb3I6cGFy
YW1ldGVyPtCm0LLQtdGC0KLQtdC60YHRgtCwPC9kY3Njb3I6cGFyYW1ldGVyPg0K
CQkJCQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ2OHVpOkNvbG9yIj53ZWI6UHVy
cGxlPC9kY3Njb3I6dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCTwvYXBw
ZWFyYW5jZT4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJCTxzZWxlY3Rpb24+DQoJ
CQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QlNC10YDQtdCy0L7QodGF0LXQvNGL0JfQ
sNC/0YDQvtGB0LA8L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCTwvc2VsZWN0aW9u
Pg0KCQkJPGZpbHRlcj4NCgkJCQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUNv
bXBhcmlzb24iPg0KCQkJCQk8bGVmdCB4c2k6dHlwZT0iZGNzY29yOkZpZWxkIj7Q
lNC10YDQtdCy0L7QodGF0LXQvNGL0JfQsNC/0YDQvtGB0LAu0JjQtNC10L3RgtC4
0YTQuNC60LDRgtC+0YA8L2xlZnQ+DQoJCQkJCTxjb21wYXJpc29uVHlwZT5FcXVh
bDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCTxyaWdodCB4c2k6dHlwZT0iZGNzY29y
OkZpZWxkIj7QotC10LrRg9GJ0LjQudCY0LTQtdC90YLQuNGE0LjQutCw0YLQvtGA
0J7Qv9C10YDQsNGC0L7RgNCwPC9yaWdodD4NCgkJCQk8L2l0ZW0+DQoJCQk8L2Zp
bHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRlbSB4c2k6dHlw
ZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Njb3I6cGFyYW1l
dGVyPtCm0LLQtdGC0KLQtdC60YHRgtCwPC9kY3Njb3I6cGFyYW1ldGVyPg0KCQkJ
CQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ2OHVpOkNvbG9yIj53ZWI6UHVycGxl
PC9kY3Njb3I6dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCTwvYXBwZWFy
YW5jZT4NCgkJPC9pdGVtPg0KCTwvY29uZGl0aW9uYWxBcHBlYXJhbmNlPg0KCTxv
dXRwdXRQYXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,24,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьЗапросВыбора",
{1,1,
{"ru","Добавить запрос выбора схемы запроса"}
},
{1,1,
{"ru","Добавить запрос выбора"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьЗапросВыбора",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьЗапросУничтожения",
{1,1,
{"ru","Добавить запрос уничтожения временной таблицы"}
},
{1,1,
{"ru","Добавить запрос уничтожения временной таблицы"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,7df3febb-2640-41b7-ad8b-7a23b7ad4aec},"",-1,-1,1,0,""},"ДобавитьЗапросУничтожения",1,0,0,
{0,0},1,0,1,0,0,2},
{9,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьОператор",
{1,1,
{"ru","Добавить оператор"}
},
{1,1,
{"ru","Добавить оператор"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьОператор",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьВложенныйЗапрос",
{1,1,
{"ru","Добавить вложенный запрос"}
},
{1,1,
{"ru","Добавить вложенный запрос"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,18bca3d7-a7a5-41df-a180-4dff9c217f43},"",-1,-1,1,0,""},"ДобавитьВложенныйЗапрос",1,0,0,
{0,0},1,0,1,0,0,2},
{9,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПереместитьВверх",
{1,1,
{"ru","Переместить вверх"}
},
{1,1,
{"ru","Переместить вверх"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-3},"",-1,-1,1,0,""},"Переместить",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПереместитьВниз",
{1,1,
{"ru","Переместить вниз"}
},
{1,1,
{"ru","Переместить вниз"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-4},"",-1,-1,1,0,""},"Переместить",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НастройкаОператора",
{1,1,
{"ru","Настройка оператора"}
},
{1,1,
{"ru","Настройка оператора (DblClick/Edit)"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"НастройкаОператора",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ИзменитьТекстЗапроса",
{1,1,
{"ru","Изменить текст запроса"}
},
{1,1,
{"ru","Изменить текст запроса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,97b2cc97-d5c6-45fb-9824-9d6d73db21fe},"",-1,-1,1,0,""},"ИзменитьТекстЗапроса",2,0,0,
{0,0},1,0,1,0,0,2},
{9,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОбновитьТекстЗапроса",
{1,1,
{"ru","Обновить текст запроса"}
},
{1,1,
{"ru","Обновить текст запроса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,fc4f29e0-d168-4fe0-8e64-e982fabf2595},"",-1,-1,1,0,""},"ОбновитьТекстЗапроса",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"РазвернутьСтроки",
{1,1,
{"ru","Развернуть строки"}
},
{1,1,
{"ru","Развернуть строки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,fb7e9fb5-110b-41cb-adc6-753969ae1c81},"",-1,-1,1,0,""},"РазвернутьСтроки",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьСтроки",
{1,1,
{"ru","Свернуть строки"}
},
{1,1,
{"ru","Свернуть строки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,27ee3053-952c-49e5-8261-9215098e0e9c},"",-1,-1,1,0,""},"СвернутьСтроки",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"РазвернутьДоступныеПоля",
{1,1,
{"ru","Развернуть доступные поля"}
},
{1,1,
{"ru","Развернуть доступные поля (DblClick)"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"РазвернутьДоступныеПоля",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьТаблицу",
{1,1,
{"ru","Добавить таблицу"}
},
{1,1,
{"ru","Добавить таблицу (Drag'n'Drop)"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьТаблицу",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьОписаниеВТ",
{1,1,
{"ru","Добавить описание ВТ"}
},
{1,1,
{"ru","Добавить описание ВТ"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,7604cff7-5cc6-4f88-8d16-504f01b92a3c},"",-1,-1,1,0,""},"ДобавитьОписаниеВТ",1,0,0,
{0,0},1,0,1,0,0,2},
{9,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПереименоватьТаблицу",
{1,1,
{"ru","Переименовать таблицу"}
},
{1,1,
{"ru","Переименовать таблицу"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,c8a269ff-5b6d-4f42-9fa6-369d7b492aa7},"",-1,-1,1,0,""},"ПереименоватьТаблицу",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗаменитьТаблицу",
{1,1,
{"ru","Заменить таблицу"}
},
{1,1,
{"ru","Заменить таблицу"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,a9481ba4-dc85-4112-9c50-f9f340a61298},"",-1,-1,1,0,""},"ЗаменитьТаблицу",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыраженияПрименитьEСТЬNULL",
{1,1,
{"ru","Применить EСТЬNULL"}
},
{1,1,
{"ru","Применить EСТЬNULL"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыраженияПрименитьEСТЬNULL",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{20,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыраженияОчиститьФункцию",
{1,1,
{"ru","Очистить функцию"}
},
{1,1,
{"ru","Очистить функцию"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-2},"",-1,-1,1,0,""},"ВыраженияОчиститьФункцию",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{21,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыраженияОчиститьЕСТЬNULL",
{1,1,
{"ru","Очистить ЕСТЬNULL"}
},
{1,1,
{"ru","Очистить ЕСТЬNULL"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-2},"",-1,-1,1,0,""},"ВыраженияОчиститьЕСТЬNULL",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СхемаЗапросаОК",
{1,1,
{"ru","ОК"}
},
{1,1,
{"ru","ОК"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СхемаЗапросаОК",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{23,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СхемаЗапросаОтмена",
{1,1,
{"ru","Отмена"}
},
{1,1,
{"ru","Отмена"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СхемаЗапросаОтмена",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{25,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОператорТекстЗапроса",
{1,1,
{"ru","Текст запроса"}
},
{1,1,
{"ru","Текст запроса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОператорТекстЗапроса",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{24,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СкопироватьСтроку",
{1,1,
{"ru","Скопировать"}
},
{1,1,
{"ru","Скопировать строку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,f6532868-30b9-44ab-803c-78f0f0b06b02},"",-1,-1,1,0,""},"СкопироватьСтроку",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьТекущийЗапрос",
{1,1,
{"ru","Выполнить текущий запрос"}
},
{1,1,
{"ru","Выполнить пакет по текущий запрос"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,85998f14-805b-4e2b-ba19-9d79b0464042},"",-1,-1,1,0,""},"ВыполнитьТекущийЗапрос",2,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}