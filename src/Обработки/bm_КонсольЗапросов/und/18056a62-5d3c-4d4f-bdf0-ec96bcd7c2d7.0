{4,
{50,0,1,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Выбор таблицы"}
},0,0,1,1,1,0,1,0,
{1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОК",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОКРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаОтмена",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаОтменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0,0,1,0},1,0,0,0,3,3,0},2,143c00f7-a42d-4cd7-9189-88e4467dc768,
{55,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,1,
{0,
{0,
{"B",1},0}
},"ДеревоТаблиц",0,0,1,
{1,0},
{1,0},
{1,
{2}
},0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{1,
{1}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,19,
{"S",""},
{2,1282f000-23b6-4887-87f4-9e8e79db3d32,"ДеревоТаблицВыбор",7c39b7bc-db0f-4410-9d98-8e5b7896995e,"ДеревоТаблицПередРазворачиванием",1,0,1282f000-23b6-4887-87f4-9e8e79db3d32,0,1,7c39b7bc-db0f-4410-9d98-8e5b7896995e,0,1},
{13,01833a5a-6553-4c49-b445-095018107bb5,05468165-f954-45a5-84f2-6641c51f9f23,0ae4bea5-23be-42a7-b69e-97b11b29c453,0d0249a4-2b2f-4fc0-a66f-b36f9494b3cc,2bbe4e12-06d2-409b-a972-eea585125d83,37740564-9e86-44a0-bea9-3f485a5a3f91,58b2a785-23f6-4b0e-a324-9a1323285595,8af6ebff-cd02-4bfe-a984-44a292623708,8d772f97-c0ef-47c0-9cb0-efea28c61341,9ef79140-3de6-436a-8dda-610bb963f5db,b0016a68-ec64-4e6d-b905-c71fd62efc4c,b41f5bbc-ba5d-4888-8cd1-db246a371418,fa51b106-eae6-44c7-8054-76cbb3100603},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоТаблицКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{37,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДеревоТаблицЗначение",1,0,
{1,0},
{1,0},
{2,
{2},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{36,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
{0},0,
{5007,0},0},
{0,1,0},1,
{22,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0,0,0},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{12,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,0,0,1,
{5,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{1,0},0,3,3,0},1,
{5,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоТаблицСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{1,1},0,3,3,0},1,
{5,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТаблицУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТаблицУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{12,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТаблицУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},2,
{1,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,1,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаКартинки",
{1,1,
{"ru","Группа картинки"}
},
{1,1,
{"ru","Группа картинки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{29,1,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2,0},5,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаВиртТаблица",
{1,1,
{"ru","Картинка вирт таблица"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAABXUExURf///7///2D//3///3f//5///5P//5v//6f/
/9///4v//8P///b3/+Pn//X2/+bp//r6/2V7/6Gv/8jQ/3CF/+7w/2+E/8PL/4qb
/4GT//7+/yxL/9bc/2b9pxIAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABXSURBVChT
lY9JEoAwCARBRcUt7kv0/++0gjmAJ+1jUzNTwAcwSRVBZJQXFBFRclVzRAQCccgG
/ommhc5p0Q8wTiYyL6vt2PbDCn9erxX/rHD8QkC5KABueTYDI8e4Yh4AAAAASUVO
RK5CYII=}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаВиртТаблицаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка вирт таблица"}
},0},0,1,
{12,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаВиртТаблицаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаПоследовательность",
{1,1,
{"ru","Картинка последовательность"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEZSURBVDhPYyAZ
qP3nBmJGKI+BCUqTAnqAeBLMELhJRAO1/3xAcjsQnwPiPIQBav8LgGQ+hEMQcAKx
OBAXIhsgACRBmBAA6ekFYpABniAB4kE9nxaD3guQ/49CvcLADJYgFjiwFzBI7Ulm
4HjjxHDE9g1ICOKFej7ynN/46RPMALICEGjABEQgEgPq+VCiEGjAf6IS0n+GO6xA
vEr3lcpqIBeuGSxJLAAakPmJ7dLbX0w3NKBCYMAIlJAA0h5AzAbErFDMDqVZgJgD
ie0DxNxA7MjIoHIdSIPzAij0HYDYGIi1gFgBiAWBGKQR5MwPQPwMiO8C8Q8gfgzl
kwaALq0G4ktALAwVAgNiAxEUWyBvuQKd/hYsCAYMDACffkqeYVo2gQAAAABJRU5E
rkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаПоследовательностьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка последовательность"}
},0},0,1,
{12,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаПоследовательностьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаЗапросВыбораСхемыЗапроса",
{1,1,
{"ru","Картинка запрос выбора схемы запроса"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADfSURBVDhPYxhw
wAgiHBwcGsA80oD8gQMHEsEscgyA6WEC8ygAw8ALtA2D95rXJP6y/eIAsf8z/wWL
wQDLNy717+IvF7FA+QzAAMEwRM2eIQhIrQZiDJf+5fz+H0g14PXCrUaGdUBqPoSH
Av6zfOE+BpTfSUwYFADxLQgTDm4JXdM5BmLAvQAMBwcoExUcZGD4Ivdo/mf5B63/
mf4xMf5j+sf7UH4h029WMZA0zAULoDRWwPNI7gRQwySg5r+Mf1im8zySPw4UXgiS
A8cCMUCtHuzaKUCcD/T7T7AgAwMDAG/yRu3QuqxoAAAAAElFTkSuQmCC}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаЗапросВыбораСхемыЗапросаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка запрос выбора схемы запроса"}
},0},0,1,
{12,
{34,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаЗапросВыбораСхемыЗапросаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаОператор",
{1,1,
{"ru","Картинка оператор"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADySURBVDhPYxhw
wAgiHBwcGsA80oD8gQMHEsEscgyA6WEC8ygAdPDClP9gS9ABKV4QAxqyFYiNoXwU
QIwBP4DYCYhPAA1ZBsQqYFEoIBgGf1i5WY57rcr/x8zOwfj/z0/G//9+cXx9tk/n
WN3vk1uXRcINAAYIvnD4BySRw+I/4/+/X/8zMjcRG40/oTQM/Of+eP8ZkF5NrAGg
cACB/0D8CIjDTfakLmfIYXzAAhYGAqA3HKBMDHD054f/f1h5/gm9PHNB6crsRu6P
9z4BhflBcjAXLIDS2AEj83GRZ0cDdI9WFkM1g8BCKE0EwJGYGBgYGADhYVw5Kw7y
UwAAAABJRU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаОператорКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка оператор"}
},0},0,1,
{12,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаОператорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{12,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"КартинкаФункция",
{1,1,
{"ru","Картинка функция"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFSSURBVDhPtZGx
SgNBEIb/y90ROBNRYmFARGLrA9j4AnbiG1gLVoKWigiBCCnSaiGpxEIsfRC1sNBK
kVwRkfMul9v1z+7iKdlcofjB3Mz+szOzu4e/4hhv5yRu8LuOcnkBw+Ej0vQSu0FP
JzWTG7TTNbhuF46zaBRAyghCHGLHaxoFJeN/0pEVFl+YYsHCW1rIdUDz9SaNvQEw
xY3zKsqyFuMV9Pt1RNEm4rildIP9Cge9ZdRqD2a1gW3nysRj5A06MuBD3TOqcqLk
FWZ1As+0D+ZeOX0Le9U7LWvyK2RZCZ5Xoc18Kx5RpzWoryIIKlrKyRuEYcIpR4ya
fOkbLZI0PcNgcIokOaf+YtQv7G/Qkcf87rPhOydP8w2kToxj/wtClJV33bCoeIS9
QZbNKS/lm/IF2Bv4/pLyQjwpX8CkEwTKe94vTyBll03aiJNro/wXwCcW+msfOwnF
1AAAAABJRU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},1,100},1,
{22,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КартинкаФункцияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,1,
{"ru","Картинка функция"}
},0},0,1,
{12,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КартинкаФункцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},1,0,0,1,0,3,3,0,0},0,0,1,
{12,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКартинкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{50,0},1},"#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.ПеречислениеТипТаблицы = Новый Структура();
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ОбычнаяТаблица"", 	""ОбычнаяТаблица"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ТабличнаяЧасть"", 	""ТабличнаяЧасть"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ВиртТаблица"", 		""ВиртТаблица"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""Изменения"", 		""Изменения"");
	ЭтотОбъект.ПеречислениеТипТаблицы.Вставить(""ВремТаблица"", 		""ВремТаблица"");
	
	ЭтотОбъект.ПеречислениеКартинки = Новый Структура();
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ВиртТаблица"", 				Элементы.КартинкаВиртТаблица.Картинка);	
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Последовательность"", 			Элементы.КартинкаПоследовательность.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""ЗапросВыбораСхемыЗапроса"", 	Элементы.КартинкаЗапросВыбораСхемыЗапроса.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Оператор"", 					Элементы.КартинкаОператор.Картинка);
	ЭтотОбъект.ПеречислениеКартинки.Вставить(""Функция"", 					Элементы.КартинкаФункция.Картинка);
	
	ОписаниеКоллекций_Заполнить();	
	ДеревоТаблиц_Заполнить();
	
	Если Параметры.Свойство(""ВременныеТаблицы"") Тогда
		ДеревоТаблиц_ЗаполнитьВременныеТаблицы(ЭтотОбъект, Параметры.ВременныеТаблицы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ДеревоТаблицПередРазворачиванием(Элемент, Строка, Отказ)
	
	//bookmark
	//Возврат; // Вариант1
	
	ТекДанные = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Строка);
	ИскомаяСтрока = ТекДанные.ПолучитьЭлементы()[0];
	Если ИскомаяСтрока.Значение = ""@"" Тогда
		ТекДанные.ПолучитьЭлементы().Очистить();
		//ДеревоТаблиц_ЗаполнитьСостав(Строка); // Вариант0
		ДеревоТаблиц_ЗаполнитьКоллекциюВариант2(Строка)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТаблицВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОК(Команды.Найти(""ОК""));
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ОК(Команда)
	
	ТекДанные = Элементы.ДеревоТаблиц.ТекущиеДанные;
	Если Не ТекДанные.ЭтоИсточник Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрЗакрытия = Новый Структура(""ИмяТаблицы,Псевдоним,ТипТаблицы,Картинка"", ТекДанные.Имя, ТекДанные.Псевдоним, ТекДанные.ТипТаблицы, ТекДанные.Картинка);
	ЭтотОбъект.Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////
// Служебные функции

#Область Форма

&НаКлиентеНаСервереБезКонтекста
Функция Форма_НайтиСтроку(Знач Дерево, Знач Значение, Знач ИмяКолонки)
	
	Для Каждого Строка Из Дерево.ПолучитьЭлементы() Цикл
		Если Строка[ИмяКолонки] = Значение Тогда
			Возврат Строка;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

#КонецОбласти

#Область ОписаниеКоллекций

&НаСервере
Процедура ОписаниеКоллекций_Заполнить()
	
	ОписаниеКоллекций_ДобавитьОписание(""КритерииОтбора"", 			""КритерийОтбора"", 			БиблиотекаКартинок.КритерийОтбора);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыОбмена"", 				""ПланОбмена"", 				БиблиотекаКартинок.ПланОбмена, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Константы"", 				""Константа"", 				БиблиотекаКартинок.Константа);
	ОписаниеКоллекций_ДобавитьОписание(""Справочники"", 				""Справочник"", 				БиблиотекаКартинок.Справочник, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Документы"", 				""Документ"", 				БиблиотекаКартинок.Документ, 				Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Последовательности"", 		""Последовательность"", 		ЭтотОбъект.ПеречислениеКартинки.Последовательность);
	ОписаниеКоллекций_ДобавитьОписание(""ЖурналыДокументов"", 		""ЖурналДокументов"", 		БиблиотекаКартинок.ЖурналДокументов);
	ОписаниеКоллекций_ДобавитьОписание(""Перечисления"", 				""Перечисление"", 			БиблиотекаКартинок.Перечисление);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыВидовХарактеристик"", 	""ПланВидовХарактеристик"", 	БиблиотекаКартинок.ПланВидовХарактеристик, 	Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыСчетов"", 				""ПланСчетов"", 				БиблиотекаКартинок.ПланСчетов, 				Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ПланыВидовРасчета"", 		""ПланВидовРасчета"", 		БиблиотекаКартинок.ПланВидовРасчета, 		Истина, Истина);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыСведений"", 			""РегистрСведений"", 			БиблиотекаКартинок.РегистрСведений);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыНакопления"", 		""РегистрНакопления"", 		БиблиотекаКартинок.РегистрНакопления);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыБухгалтерии"", 		""РегистрБухгалтерии"", 		БиблиотекаКартинок.РегистрБухгалтерии);
	ОписаниеКоллекций_ДобавитьОписание(""РегистрыРасчета"", 			""РегистрРасчета"", 			БиблиотекаКартинок.РегистрРасчета);
	ОписаниеКоллекций_ДобавитьОписание(""Перерасчеты"", 				""Перерасчет"", 				БиблиотекаКартинок.Обновить);
	ОписаниеКоллекций_ДобавитьОписание(""БизнесПроцессы"", 			""БизнесПроцесс"", 			БиблиотекаКартинок.БизнесПроцесс, 			Истина);
	ОписаниеКоллекций_ДобавитьОписание(""Задачи"", 					""Задача"", 					БиблиотекаКартинок.Задача, 					Истина);
	ОписаниеКоллекций_ДобавитьОписание(""ВнешниеИсточникиДанных"", 	""ВнешнийИсточникДанных"", 	БиблиотекаКартинок.ВнешнийИсточникДанных, 	Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОписаниеКоллекций_ДобавитьОписание(Знач ИмяМнч, Знач ИмяЕдч, Знач Картинка, Знач ЕстьТЧ = Ложь, Знач ЕстьСТЧ = Ложь)
	
	НовСтр = ЭтотОбъект.ОписаниеКоллекций.Добавить();
	НовСтр.ИмяМнч 	= ИмяМнч;
	НовСтр.ИмяЕдч 	= ИмяЕдч;
	НовСтр.Картинка = Картинка;
	НовСтр.ЕстьТЧ 	= ЕстьТЧ;
	НовСтр.ЕстьСТЧ 	= ЕстьСТЧ;
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоТаблиц

&НаСервере
Процедура ДеревоТаблиц_Заполнить()
	
	СхемаЗапроса = Новый СхемаЗапроса();
	
	ДоступныеТаблицы = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы;
	Для Каждого СтрокаИсточник0 Из ДоступныеТаблицы Цикл
		Если ТипЗнч(СтрокаИсточник0) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
			Продолжить;
		КонецЕсли;
		СтруктураОтбора = Новый Структура(""ИмяМнч"", СтрокаИсточник0.Представление);
		МассивСтрок = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора);
		Если МассивСтрок.Количество() = 0 Тогда
			Если Метаданные.ВнешниеИсточникиДанных.Найти(СтрокаИсточник0.Представление) <> Неопределено Тогда
				ДеревоТаблиц_ЗаполнитьВнешнийИсточникДанных(СтрокаИсточник0);
			КонецЕсли;
			Продолжить;		
		КонецЕсли;
		СтрокаОписания  = МассивСтрок[0];
		СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.ПолучитьЭлементы().Добавить();
		СтрокаПриемник0.Значение 	= СтрокаИсточник0.Представление;
		СтрокаПриемник0.Картинка	= СтрокаОписания.Картинка;
		//ДеревоТаблиц_ЗаполнитьКоллекциюВариант0(СтрокаПриемник0, СтрокаИсточник0, СтрокаОписания)
		//ДеревоТаблиц_ЗаполнитьКоллекциюВариант1(СтрокаПриемник0, СтрокаИсточник0, СтрокаОписания);
		СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
		СтрокаПриемник1.Значение 	= ""@"";
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант0(Знач СтрокаПриемник0, Знач СтрокаИсточник0, Знач СтрокаОписания)
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		Поз = СтрНайти(СтрокаИсточник1.Имя, ""."", , , 2);
		Если Поз > 0 Тогда
			Продолжить;
		КонецЕсли;
		Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
		СтрокаПриемник1 = СтрокаПриемник0.Строки.Добавить();
		СтрокаПриемник1.ЭтоИсточник	= Истина;
		СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		СтрокаПриемник1.Значение 	= Значение;	
		СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
		СтрокаПриемник1.Псевдоним	= Значение;
		СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;			
		СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
		СтрокаПриемник2.Значение 	= ""@"";
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант1(Знач СтрокаПриемник0, Знач СтрокаИсточник0, Знач СтрокаОписания)
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		
		Поз = СтрНайти(СтрокаИсточник1.Имя, ""."", , , 2);
		Если Поз = 0 Тогда
			Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник1 = СтрокаПриемник0.Строки.Добавить();
			СтрокаПриемник1.ЭтоИсточник	= Истина;
			СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			СтрокаПриемник1.Значение 	= Значение;	
			СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
			СтрокаПриемник1.Псевдоним	= Значение;
			СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;
			
			Значение1 = СтрокаПриемник1.Значение;
			Значение0 = СтрокаПриемник0.Значение;
			
			Если СтрокаОписания.ЕстьТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ""."") Тогда
				Продолжить;
			КонецЕсли;
			
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.Строки.Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
			СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
			Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, "".Изменения"") Тогда
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
				СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
			Иначе
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
				СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
			КонецЕсли;
				
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьКоллекциюВариант2(Знач Идентификатор)
	
	СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Идентификатор);
	Значение0		= СтрокаПриемник0.Значение;
	
	СтруктураОтбора = Новый Структура(""ИмяМнч"", Значение0);
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора)[0];
	
	СхемаЗапроса = Новый СхемаЗапроса();
	Для Каждого СтрокаИсточник0 Из СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы Цикл
		Если ТипЗнч(СтрокаИсточник0) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаИсточник0.Представление = Значение0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Возможно, зависит от версии платформы
	// Если первая таблица не константы, надо добавить в эту ветку 
	Если Значение0 = ""Константы"" Тогда
		Если Не (СтрокаИсточник0.Состав[0].Имя = ""Константы"") Тогда
			ИскомаяТаблица = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы.Найти(""Константы"");
			Если ТипЗнч(ИскомаяТаблица) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
				СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
				СтрокаПриемник1.ЭтоИсточник	= Истина;
				СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
				СтрокаПриемник1.Значение 	= ""Константы"";	
				СтрокаПриемник1.Имя			= ""Константы"";
				СтрокаПриемник1.Псевдоним	= ""Константы"";
				СтрокаПриемник1.Картинка	= БиблиотекаКартинок.Константа;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого СтрокаИсточник1 Из СтрокаИсточник0.Состав Цикл
		
		Поз = СтрНайти(СтрокаИсточник1.Имя, ""."", , , 2);
		Если Поз = 0 Тогда
			Значение = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
			СтрокаПриемник1.ЭтоИсточник	= Истина;
			СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
			СтрокаПриемник1.Значение 	= Значение;	
			СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
			СтрокаПриемник1.Псевдоним	= Значение;
			СтрокаПриемник1.Картинка	= СтрокаОписания.Картинка;
			
			Значение1 = СтрокаПриемник1.Значение;
			Значение0 = СтрокаПриемник0.Значение;
			
			Если СтрокаОписания.ЕстьТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаОписания.ЕстьСТЧ Тогда
				Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].СтандартныеТабличныеЧасти Цикл
					СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
					СтрокаПриемник2.ЭтоИсточник	= Истина;
					СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
					СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
					СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
					СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
					СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
				КонецЦикла;
			КонецЕсли;
			
			Если СтрокаИсточник0.Представление = ""РегистрыРасчета"" Тогда
				ДеревоТаблиц_ЗаполнитьПерерасчет(СтрокаПриемник1);
			КонецЕсли;
			
		Иначе
			
			Если СтрокаИсточник0.Представление = ""Перерасчеты"" Тогда
				Если СтрНачинаетсяС(СтрокаИсточник1.Имя, ""РегистрРасчета."") Тогда
					СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
					СтрокаПриемник1.ЭтоИсточник	= Истина;
					СтрокаПриемник1.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
					СтрокаПриемник1.Значение 	= ТекстПослеТочкиСНачала(СтрокаИсточник1.Имя);	
					СтрокаПриемник1.Имя			= СтрокаИсточник1.Имя;
					СтрокаПриемник1.Псевдоним	= СтрЗаменить(СтрокаПриемник1.Значение, ""."", """");
					СтрокаПриемник1.Картинка	= БиблиотекаКартинок.РегистрРасчета;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			
			Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ""."") Тогда
				Продолжить;
			КонецЕсли;
			
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
			СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
			Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, "".Изменения"") Тогда
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
				СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
			Иначе
				СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
				СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
			КонецЕсли;
				
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьПерерасчет(Знач СтрокаПриемник1)
	
	Коллекция = Метаданные.РегистрыРасчета[СтрокаПриемник1.Значение].Перерасчеты;
	Если Коллекция.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
	СтрокаПриемник2.Значение = ""Перерасчеты"";
	СтрокаПриемник2.Картинка = БиблиотекаКартинок.Обновить;
	
	Для Каждого ОМ Из Метаданные.РегистрыРасчета[СтрокаПриемник1.Значение].Перерасчеты Цикл
		СтрокаПриемник3 = СтрокаПриемник2.ПолучитьЭлементы().Добавить();
		СтрокаПриемник3.ЭтоИсточник	= Истина;
		СтрокаПриемник3.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ОбычнаяТаблица;
		СтрокаПриемник3.Значение 	= ОМ.Имя;	
		СтрокаПриемник3.Имя			= СтрокаПриемник1.Имя + ""."" + ОМ.Имя;
		СтрокаПриемник3.Псевдоним	= СтрокаПриемник1.Псевдоним + ОМ.Имя;
		СтрокаПриемник3.Картинка	= БиблиотекаКартинок.РегистрРасчета;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьСостав(Знач Идентификатор)
	
	СтрокаПриемник1 = ЭтотОбъект.ДеревоТаблиц.НайтиПоИдентификатору(Идентификатор);
	Значение1 = СтрокаПриемник1.Значение;
	Значение0 = СтрокаПриемник1.ПолучитьРодителя().Значение;
	
	СтруктураОтбора = Новый Структура(""ИмяМнч"", Значение0);
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(СтруктураОтбора)[0];
	
	Если СтрокаОписания.ЕстьТЧ Тогда
		Для Каждого ТабличнаяЧасть Из Метаданные[Значение0][Значение1].ТабличныеЧасти Цикл
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.ТипТаблицы	= ЭтотОбъект.ПеречислениеТипТаблицы.ТабличнаяЧасть;
			СтрокаПриемник2.Значение 	= ТабличнаяЧасть.Имя;			
			СтрокаПриемник2.Имя 		= СтрокаПриемник1.Имя + ""."" + ТабличнаяЧасть.Имя;					
			СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Псевдоним + ТабличнаяЧасть.Имя;
			СтрокаПриемник2.Картинка	= БиблиотекаКартинок.ВложеннаяТаблица;
		КонецЦикла;
	КонецЕсли;	
	
	СхемаЗапроса = Новый СхемаЗапроса();                                                  
	// ?
	// Состав = СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы.Найти(Представление).Состав
	Для Каждого ГруппаДоступныхТаблицСхемыЗапроса Из СхемаЗапроса.ПакетЗапросов[0].ДоступныеТаблицы Цикл
		Если ГруппаДоступныхТаблицСхемыЗапроса.Представление = Значение0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;		
	Состав = ГруппаДоступныхТаблицСхемыЗапроса.Состав;
	
	// ?
	// Состав.Индекс(Состав.Найти(ТекДанные.Имя))
	Итер = 0;
	Для Каждого ДоступнаяТаблицаСхемыЗапроса Из Состав Цикл
		Если ДоступнаяТаблицаСхемыЗапроса.Имя = СтрокаПриемник1.Имя Тогда
			Прервать;
		КонецЕсли;
		Итер = Итер + 1;
	КонецЦикла;
	Итер = Итер + 1;
		
	Пока Итер < Состав.Количество() Цикл
		СтрокаИсточник1 = Состав[Итер];
		Если Не СтрНачинаетсяС(СтрокаИсточник1.Имя, СтрокаПриемник1.Имя + ""."") Тогда
			Прервать;
		КонецЕсли;
		Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник1.Имя);
		СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
		СтрокаПриемник2.ЭтоИсточник	= Истина;
		СтрокаПриемник2.Значение 	= Значение2;			
		СтрокаПриемник2.Имя 		= СтрокаИсточник1.Имя;			
		СтрокаПриемник2.Псевдоним 	= Значение1 + Значение2;
		Если СтрЗаканчиваетсяНа(СтрокаИсточник1.Имя, "".Изменения"") Тогда
			СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.Изменения;
			СтрокаПриемник2.Картинка 		= БиблиотекаКартинок.КонструкторЗапросаОтображатьТаблицыИзменений;
		Иначе
			СтрокаПриемник2.ТипТаблицы		= ЭтотОбъект.ПеречислениеТипТаблицы.ВиртТаблица;
			СтрокаПриемник2.Картинка		= СтрокаОписания.Картинка;
		КонецЕсли;
		Итер = Итер +1 ;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ДеревоТаблиц_ЗаполнитьВнешнийИсточникДанных(Знач СтрокаИсточник1) 
	
	СтрокаОписания = ЭтотОбъект.ОписаниеКоллекций.НайтиСтроки(Новый Структура(""ИмяМнч"", ""ВнешниеИсточникиДанных""))[0];
	
	СтрокаПриемник0 = Форма_НайтиСтроку(ЭтотОбъект.ДеревоТаблиц, ""ВнешниеИсточникиДанных"", ""Значение"");
	Если СтрокаПриемник0 = Неопределено Тогда
		СтрокаПриемник0 = ЭтотОбъект.ДеревоТаблиц.ПолучитьЭлементы().Добавить();
		СтрокаПриемник0.Значение 	= СтрокаОписания.ИмяМнч;
		СтрокаПриемник0.Картинка	= СтрокаОписания.Картинка;
	КонецЕсли;
	
	СтрокаПриемник1 = СтрокаПриемник0.ПолучитьЭлементы().Добавить();
	СтрокаПриемник1.Значение = СтрокаИсточник1.Представление;
	СтрокаПриемник1.Картинка = СтрокаОписания.Картинка;
		
	Для Каждого СтрокаИсточник2 Из СтрокаИсточник1.Состав Цикл
		Если ТипЗнч(СтрокаИсточник2) = Тип(""ДоступнаяТаблицаСхемыЗапроса"") Тогда
			Значение2 = ТекстПослеТочкиСКонца(СтрокаИсточник2.Имя);
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.ЭтоИсточник	= Истина;
			СтрокаПриемник2.Значение 	= Значение2;			
			СтрокаПриемник2.Имя 		= СтрокаИсточник2.Имя;			
			СтрокаПриемник2.Псевдоним 	= СтрокаПриемник1.Значение + Значение2;
			Если СтрНайти(СтрокаИсточник2.Имя, "".Куб."") > 0 Тогда
				СтрокаПриемник2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхКуб;
			ИначеЕсли СтрНайти(СтрокаИсточник2.Имя, "".Таблица."") > 0 Тогда
				СтрокаПриемник2.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
			КонецЕсли;
		ИначеЕсли ТипЗнч(СтрокаИсточник2) = Тип(""ГруппаДоступныхТаблицСхемыЗапроса"") Тогда
			Представление2  = ТекстПередТочкойСНачала(СтрокаИсточник2.Представление) + ""ТаблицаИзмерения"";
			СтрокаПриемник2 = СтрокаПриемник1.ПолучитьЭлементы().Добавить();
			СтрокаПриемник2.Значение 	= СтрокаИсточник2.Представление;
			СтрокаПриемник2.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
			Для Каждого СтрокаИсточникЗ Из СтрокаИсточник2.Состав Цикл
				Значение3 = ТекстПослеТочкиСКонца(СтрокаИсточникЗ.Имя);
				СтрокаПриемник3 = СтрокаПриемник2.ПолучитьЭлементы().Добавить();
				СтрокаПриемник3.ЭтоИсточник	= Истина;
				СтрокаПриемник3.Значение 	= Значение3;			
				СтрокаПриемник3.Имя 		= СтрокаИсточникЗ.Имя;			
				СтрокаПриемник3.Псевдоним 	= СтрокаПриемник1.Значение + Представление2 + Значение3;
				СтрокаПриемник3.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКубТаблицаИзмерения;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоТаблиц_ЗаполнитьВременныеТаблицы(Знач Форма, Знач МассивЗначений)
	
	Значение 	= ""Временные таблицы"";	
	Коллекция 	= Форма.ДеревоТаблиц.ПолучитьЭлементы();
	Строка 		= Коллекция[Коллекция.Количество() - 1];
	
	Если Строка.Значение = Значение Тогда
		Коллекция.Удалить(Строка);
	КонецЕсли;
	
	НовСтр0 = Коллекция.Добавить();
	НовСтр0.Значение = Значение;
	НовСтр0.Картинка = БиблиотекаКартинок.КонструкторЗапросаГруппаВременныхТаблиц;
	Коллекция = НовСтр0.ПолучитьЭлементы();
	Для Каждого Значение Из МассивЗначений Цикл
		НовСтр1 = Коллекция.Добавить();
		НовСтр1.Значение 	= Значение;
		НовСтр1.Имя 		= Значение;
		НовСтр1.Псевдоним 	= Значение;
		НовСтр1.ЭтоИсточник = Истина;
		НовСтр1.ТипТаблицы	= Форма.ПеречислениеТипТаблицы.ВремТаблица;
		НовСтр1.Картинка 	= БиблиотекаКартинок.КонструкторЗапросаВременнаяТаблица;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Выражения

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСКонца(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."", НаправлениеПоиска.СКонца);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПослеТочкиСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."", НаправлениеПоиска.СНачала);
	Значение = Прав(Текст, СтрДлина(Текст) - Поз);
	Возврат Значение;
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПередТочкойСНачала(Знач Текст) Экспорт
	
	Поз = СтрНайти(Текст, ""."");
	Значение = Лев(Текст, Поз - 1);
	Возврат Значение;
		
КонецФункции

#КонецОбласти
",
{4,5,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",53424881-bc0c-4dd2-ad50-12ac0f1053a7}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ДеревоТаблиц",
{1,1,
{"ru","Дерево таблиц"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,6,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Псевдоним",
{1,1,
{"ru","Псевдоним"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ТипТаблицы",
{1,1,
{"ru","Тип таблицы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ЭтоИсточник",
{1,1,
{"ru","Это источник"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{3},0,"ОписаниеКоллекций",
{1,1,
{"ru","Описание коллекций"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"Картинка",
{1,1,
{"ru","Картинка"}
},
{"Pattern",
{"#",e6f51714-91cb-4dce-94fe-90ae3e3e1ad1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ИмяМнч",
{1,1,
{"ru","Имя мнч"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяЕдч",
{1,1,
{"ru","Имя едч"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ЕстьТЧ",
{1,1,
{"ru","Есть ТЧ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ЕстьСТЧ",
{1,1,
{"ru","Есть СТЧ"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{4},0,"ПеречислениеТипТаблицы",
{1,1,
{"ru","Перечисление тип таблицы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ПеречислениеКартинки",
{1,1,
{"ru","Перечисление картинки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,2,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОК",
{1,1,
{"ru","Выбрать"}
},
{1,1,
{"ru","ОК"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОК",3,0,0,
{0,0},1,0,1,0,0,2},
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Отмена",
{1,1,
{"ru","Отмена"}
},
{1,1,
{"ru","Отмена"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"Отмена",3,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}