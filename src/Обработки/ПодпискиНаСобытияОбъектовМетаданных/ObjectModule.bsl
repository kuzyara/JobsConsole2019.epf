
Процедура ВывестиПодписки(ТабДок, СписокВыбора) Экспорт
	
//ПередУдалением
//ОбработкаПроверкиЗаполнения
//ПриКопировании

	ПорядокСобытий = Новый Соответствие;
	ПорядокСобытий.Вставить("ПриКопировании", 0);
	ПорядокСобытий.Вставить("ОбработкаЗаполнения", 1); // ПриКопировании и ОбработкаЗаполнения выполняются при открытии формы
	ПорядокСобытий.Вставить("ОбработкаПроверкиЗаполения", 2);
	ПорядокСобытий.Вставить("ПередЗаписью", 3);
	ПорядокСобытий.Вставить("ПриУстановкеНовогоНомера", 4);
	ПорядокСобытий.Вставить("ПриУстановкеНовогоКода", 4);
	ПорядокСобытий.Вставить("ОбработкаУдаленияПроведения", 5);
	ПорядокСобытий.Вставить("ПриЗаписи", 6);
	ПорядокСобытий.Вставить("ОбработкаПроведения", 7);
	
	ПорядокСобытий.Вставить("ПередУдалением", -1);

	ТаблицаПодписок = Новый ТаблицаЗначений;
	ТаблицаПодписок.Колонки.Добавить("Мета", Новый ОписаниеТипов("Строка"), "Мета");
	ТаблицаПодписок.Колонки.Добавить("Источник", Новый ОписаниеТипов("Строка"), "Источник");
	ТаблицаПодписок.Колонки.Добавить("Событие", Новый ОписаниеТипов("Строка"), "Событие");
	ТаблицаПодписок.Колонки.Добавить("ИмяПодписки", Новый ОписаниеТипов("Строка"), "Имя подписки");
	ТаблицаПодписок.Колонки.Добавить("Обработчик", Новый ОписаниеТипов("Строка"), "Обработчик");
	ТаблицаПодписок.Колонки.Добавить("НомерСобытия", Новый ОписаниеТипов("Число"), "№ события п/п");
	ТаблицаПодписок.Колонки.Добавить("НомерПодписки", Новый ОписаниеТипов("Число"), "№ подписки п/п");
	ТаблицаПодписок.Колонки.Добавить("КонкретныйТип", Новый ОписаниеТипов("Булево"), "Конкретный тип");
	ТаблицаПодписок.Колонки.Добавить("СоставнойТип", Новый ОписаниеТипов("Булево"), "Составной тип");
	ТаблицаПодписок.Колонки.Добавить("ОбщийТип", Новый ОписаниеТипов("Булево"), "Общий тип");

	СтруктураПодписок = Новый Соответствие;
	СтруктураМетаданных = Новый Соответствие;
	
	// для справочников, документов, регистров накопления, регистров сведений и ПВХ определим количество типов
	СтруктураТиповМета = Новый Структура;
	СтруктураТиповМета.Вставить("ПланОбмена", Метаданные.ПланыОбмена.Количество());
	СтруктураТиповМета.Вставить("Константа", Метаданные.Константы.Количество());
	СтруктураТиповМета.Вставить("Справочник", Метаданные.Справочники.Количество());
	СтруктураТиповМета.Вставить("Документ", Метаданные.Документы.Количество());
	СтруктураТиповМета.Вставить("ПланВидовХарактеристик", Метаданные.ПланыВидовХарактеристик.Количество());
	СтруктураТиповМета.Вставить("РегистрСведений", Метаданные.РегистрыСведений.Количество());
	СтруктураТиповМета.Вставить("РегистрНакопления", Метаданные.РегистрыНакопления.Количество());
	СтруктураТиповМета.Вставить("Отчет", Метаданные.Отчеты.Количество());
	СтруктураТиповМета.Вставить("Обработка", Метаданные.Обработки.Количество());
	СтруктураТиповМета.Вставить("БизнесПроцесс", Метаданные.БизнесПроцессы.Количество());
	СтруктураТиповМета.Вставить("Задача", Метаданные.Задачи.Количество());
	
	// я хочу знать сколько объектов метаданных у типа метаданных
	
	Кол = Метаданные.ПодпискиНаСобытия.Количество();
	Сч=0;
	Для Каждого Подписка Из Метаданные.ПодпискиНаСобытия Цикл
		Сч = Сч + 1;
		
		ПодпискаТипы = Подписка.Источник.Типы();
		
		СтруктураТиповПодписки = Новый Соответствие;
		//СтруктураПодписок.Вставить(Подписка.Имя, ПодпискаТипы.Количество());
		// получим все Мета для типов подписки
		
		Для Каждого ТипОбъекта из ПодпискаТипы Цикл
			МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипОбъекта);
			ИмяМетаданных = МетаданныеОбъекта.ПолноеИмя();
			
			Мета = Лев(ИмяМетаданных, Найти(ИмяМетаданных, ".") - 1);
			Кол = СтруктураМетаданных[Мета];
			СтруктураМетаданных.Вставить(Мета, ?(Кол = Неопределено, 1, Кол + 1));
			
			Если ЗначениеЗаполнено(ТипДанных) И Мета <> ТипДанных Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтруктураТиповПодписки[Мета] = Неопределено Тогда
				СтруктураТиповПодписки.Вставить(Мета, Новый Массив);
			КонецЕсли;
			СтруктураТиповПодписки[Мета].Добавить(ТипОбъекта);

			НоваяСтрока = ТаблицаПодписок.Добавить();
			НоваяСтрока.Мета 		= Мета;
			НоваяСтрока.ИмяПодписки = Подписка.Имя;
			НоваяСтрока.Событие 	= Подписка.Событие;
			НоваяСтрока.Обработчик	= Подписка.Обработчик;
			НоваяСтрока.Источник 	= ИмяМетаданных;
			НоваяСтрока.НомерСобытия= ПорядокСобытий[Строка(Подписка.Событие)];
			НоваяСтрока.НомерПодписки= Сч;
			
		КонецЦикла;
		
		СтруктураПодписок.Вставить(Подписка.Имя, СтруктураТиповПодписки);
		
	КонецЦикла;
	
	Неопределнённые = Новый Соответствие;
	
	// за второй проход проставим вид типа подписки
	Для Каждого ТекСтрока Из ТаблицаПодписок Цикл
		Если СтруктураТиповМета[ТекСтрока.Мета] = Неопределено Тогда
			Кол = Неопределнённые[ТекСтрока.Мета];
			Неопределнённые.Вставить(ТекСтрока.Мета, ?(Кол = Неопределено, 1, Кол + 1));
			Продолжить;
		КонецЕсли;
		КоличествоТиповВМета = СтруктураТиповМета[ТекСтрока.Мета];
		СтруктураТиповПодписки = СтруктураПодписок[ТекСтрока.ИмяПодписки];
		КоличествоТиповПодписки = СтруктураТиповПодписки[ТекСтрока.Мета].Количество();
		Если КоличествоТиповПодписки = 1 Тогда
			ТекСтрока.КонкретныйТип = Истина;
		ИначеЕсли КоличествоТиповПодписки < КоличествоТиповВМета Тогда
			ТекСтрока.СоставнойТип = Истина;
		Иначе
			ТекСтрока.ОбщийТип = Истина; // вероятность встретить подписку общего типа в типовых - нулевая
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элем Из Неопределнённые Цикл
		Сообщить(СтрШаблон("Для метаданного %1 не определено %2 типов", Элем.Ключ, Элем.Значение));
	КонецЦикла;
	
	СписокВыбора.Очистить();
	Для Каждого КлючЗначение Из СтруктураМетаданных Цикл
		СписокВыбора.Добавить(КлючЗначение.Ключ, КлючЗначение.Ключ + " (" + КлючЗначение.Значение + ")");
	КонецЦикла;
	// упорядочим
	СписокВыбора.СортироватьПоПредставлению();
	
	ВывестиСКД(ТаблицаПодписок, ТабДок);
КонецПроцедуры

Процедура ВывестиСКД(ТЗ, ТабДок) Экспорт
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;  
	// - Если сделать так, как показано выше(рекомендуют на некоторых ресурсах), то при изменении настроек в режиме клиента
	// этих изменений Вы не увидите, потому что настройки всегда будут по умолчанию. Как правильно - вариант ниже
	//Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
 
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);	
	
	ВнешнийНаборДанных = Новый Структура("ТЗ", ТЗ); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ТабДок.Очистить();
	
 	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ТабДок); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
	
КонецПроцедуры